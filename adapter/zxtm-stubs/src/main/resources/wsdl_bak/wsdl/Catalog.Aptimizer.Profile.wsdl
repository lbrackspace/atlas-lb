<?xml version="1.0" ?>

<!--
    Copyright (c) 2005-2013 Zeus Technology. All rights reserved.

-->

<definitions name="Catalog.Aptimizer.Profile"
 targetNamespace="http://soap.zeus.com/zxtm/1.0/"
 xmlns:zeusns="http://soap.zeus.com/zxtm/1.0/"
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
 xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
 xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
 xmlns="http://schemas.xmlsoap.org/wsdl/">
   
   <types>
      <xsd:schema targetNamespace='http://soap.zeus.com/zxtm/1.0/'
       xmlns='http://www.w3.org/2001/XMLSchema'
       xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/'
       xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/'>
         
         <xsd:simpleType name="Catalog.Aptimizer.Profile.Mode">
            <xsd:restriction base="xsd:string">
               <xsd:enumeration value="idle">
                  <xsd:annotation>
                     <xsd:documentation>Off - Acceleration is disabled, but requests for Aptimizer resources are served</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="stealth">
                  <xsd:annotation>
                     <xsd:documentation>Stealth - Acceleration is controlled by a cookie</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="active">
                  <xsd:annotation>
                     <xsd:documentation>On - Aptimizer acceleration is enabled</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
            </xsd:restriction>
         </xsd:simpleType>
         
         <xsd:complexType name="Catalog.Aptimizer.Profile.ModeArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType="zeusns:Catalog.Aptimizer.Profile.Mode[]"/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="StringArray">
           <xsd:complexContent>
             <xsd:restriction base='SOAP-ENC:Array'>
              <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:string[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="StringArrayArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType="zeusns:StringArray[]"/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="booleanArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:boolean[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="booleanArrayArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType="zeusns:booleanArray[]"/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         
         <xsd:complexType name="doubleArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:double[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="intArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:int[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="longArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:long[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="unsignedIntArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:unsignedInt[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="unsignedLongArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:unsignedLong[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="DeploymentError">
           <xsd:annotation>
            <xsd:documentation>
              The DeploymentError fault is raised when a configuration
              change causes errors when attempting to apply the configuration
              to a running traffic manager.
         
              It would be raised in cases such as failing to bind to
              a port when enabling a Virtual Server.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="key" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The configuration key that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="value" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The value that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="InvalidInput">
           <xsd:annotation>
            <xsd:documentation>
              The InvalidInput fault is raised when the input to a function is
              invalid, for example a number was out of range. This fault is also
              raised in cases such as VirtualServer.setPool() where the Pool
              doesn't exist
         
              The details in the fault contain the object, key and value
              that caused the fault. These might be blank if they are not relevant
              to the fault.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="key" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The configuration key that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="value" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The value that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="InvalidOperation">
           <xsd:annotation>
            <xsd:documentation>
              The InvalidOperation fault is emitted when attempting an operation
              that doesn't make sense or is prohibited, for example deleting
              a built-in monitor, or attempting to rename an object twice in
              the same call. 
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="key" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The configuration key that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="value" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The value that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="LicenseError">
           <xsd:annotation>
            <xsd:documentation>
              The LicenseError fault is emitted when attempting to use functionality
              that is disabled by the license key.
         
              You will need to contact your support provider to get a new license
              key with the required functionality. There may be a charge for this.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="feature" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The license key feature that was missing
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="ObjectDoesNotExist">
           <xsd:annotation>
            <xsd:documentation>
             The ObjectDoesNotExist fault is raised when attempting to perform an
             operation on an object (such as Virtual Server) that doesn't exist.
         
             This fault will only be raised if the primary object in the call doesn't
             exist. For example if calling VirtualServer.setPool(), then
             this fault will be raised if the Virtual Server doesn't exist, but if
             the Pool doesn't exist then the "InvalidInput" fault will be raised.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault
                </xsd:documentation>
               </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
      </xsd:schema>
   </types>
   
   <message name="getAptimizerProfileNamesRequest"></message>
   
   <message name="getAptimizerProfileNamesResponse">
      <part name="profile_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getBackgroundAfterRequest">
      <part name="profile_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getBackgroundAfterResponse">
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="getBackgroundAfterByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="profile_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getBackgroundAfterByLocationResponse">
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="getBackgroundOnAdditionalResourcesRequest">
      <part name="profile_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getBackgroundOnAdditionalResourcesResponse">
      <part name="values" type="zeusns:booleanArray" />
   </message>
   
   <message name="getBackgroundOnAdditionalResourcesByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="profile_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getBackgroundOnAdditionalResourcesByLocationResponse">
      <part name="values" type="zeusns:booleanArray" />
   </message>
   
   <message name="getConfigRequest">
      <part name="profile_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getConfigResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getConfigByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="profile_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getConfigByLocationResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getModeRequest">
      <part name="profile_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getModeResponse">
      <part name="values" type="zeusns:Catalog.Aptimizer.Profile.ModeArray" />
   </message>
   
   <message name="getModeByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="profile_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getModeByLocationResponse">
      <part name="values" type="zeusns:Catalog.Aptimizer.Profile.ModeArray" />
   </message>
   
   <message name="getShowInfoBarRequest">
      <part name="profile_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getShowInfoBarResponse">
      <part name="values" type="zeusns:booleanArray" />
   </message>
   
   <message name="getShowInfoBarByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="profile_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getShowInfoBarByLocationResponse">
      <part name="values" type="zeusns:booleanArray" />
   </message>
   
   <message name="setBackgroundAfterRequest">
      <part name="profile_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="setBackgroundAfterResponse"></message>
   
   <message name="setBackgroundAfterByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="profile_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="setBackgroundAfterByLocationResponse"></message>
   
   <message name="setBackgroundOnAdditionalResourcesRequest">
      <part name="profile_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:booleanArray" />
   </message>
   
   <message name="setBackgroundOnAdditionalResourcesResponse"></message>
   
   <message name="setBackgroundOnAdditionalResourcesByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="profile_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:booleanArray" />
   </message>
   
   <message name="setBackgroundOnAdditionalResourcesByLocationResponse"></message>
   
   <message name="setConfigRequest">
      <part name="profile_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setConfigResponse"></message>
   
   <message name="setConfigByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="profile_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setConfigByLocationResponse"></message>
   
   <message name="setModeRequest">
      <part name="profile_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:Catalog.Aptimizer.Profile.ModeArray" />
   </message>
   
   <message name="setModeResponse"></message>
   
   <message name="setModeByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="profile_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:Catalog.Aptimizer.Profile.ModeArray" />
   </message>
   
   <message name="setModeByLocationResponse"></message>
   
   <message name="setShowInfoBarRequest">
      <part name="profile_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:booleanArray" />
   </message>
   
   <message name="setShowInfoBarResponse"></message>
   
   <message name="setShowInfoBarByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="profile_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:booleanArray" />
   </message>
   
   <message name="setShowInfoBarByLocationResponse"></message>
   
   <message name="DeploymentError">
      <part name="parameters" type="zeusns:DeploymentError" />
   </message>
   
   <message name="InvalidInput">
      <part name="parameters" type="zeusns:InvalidInput" />
   </message>
   
   <message name="InvalidOperation">
      <part name="parameters" type="zeusns:InvalidOperation" />
   </message>
   
   <message name="LicenseError">
      <part name="parameters" type="zeusns:LicenseError" />
   </message>
   
   <message name="ObjectDoesNotExist">
      <part name="parameters" type="zeusns:ObjectDoesNotExist" />
   </message>
   
   <portType name="Catalog.Aptimizer.ProfilePort">
      <operation name="getAptimizerProfileNames">
         <documentation>
            Get the names of all the configured Aptimizer profiles.
         </documentation>
         
         <input message="zeusns:getAptimizerProfileNamesRequest"/>
         <output message="zeusns:getAptimizerProfileNamesResponse"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="getBackgroundAfter">
         <documentation>
            Get after how many milliseconds Aptimizer should return the original server content to the client and continue optimizing data in the background
         </documentation>
         
         <input message="zeusns:getBackgroundAfterRequest"/>
         <output message="zeusns:getBackgroundAfterResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="getBackgroundAfterByLocation">
         <documentation>
            Get after how many milliseconds Aptimizer should return the original server content to the client and continue optimizing data in the background This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getBackgroundAfterByLocationRequest"/>
         <output message="zeusns:getBackgroundAfterByLocationResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="getBackgroundOnAdditionalResources">
         <documentation>
            Get whether or not Aptimizer should fetch and optimize additional resources in the background and send the original server content to clients until the optimized page is ready.
         </documentation>
         
         <input message="zeusns:getBackgroundOnAdditionalResourcesRequest"/>
         <output message="zeusns:getBackgroundOnAdditionalResourcesResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="getBackgroundOnAdditionalResourcesByLocation">
         <documentation>
            Get whether or not Aptimizer should fetch and optimize additional resources in the background and send the original server content to clients until the optimized page is ready. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getBackgroundOnAdditionalResourcesByLocationRequest"/>
         <output message="zeusns:getBackgroundOnAdditionalResourcesByLocationResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="getConfig">
         <documentation>
            Get the configuration string for the Aptimize profile.
         </documentation>
         
         <input message="zeusns:getConfigRequest"/>
         <output message="zeusns:getConfigResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="getConfigByLocation">
         <documentation>
            Get the configuration string for the Aptimize profile. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getConfigByLocationRequest"/>
         <output message="zeusns:getConfigByLocationResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="getMode">
         <documentation>
            Get the mode in which Aptimizer should run when this profile is applied
         </documentation>
         
         <input message="zeusns:getModeRequest"/>
         <output message="zeusns:getModeResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="getModeByLocation">
         <documentation>
            Get the mode in which Aptimizer should run when this profile is applied This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getModeByLocationRequest"/>
         <output message="zeusns:getModeByLocationResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="getShowInfoBar">
         <documentation>
            Get whether or not the Aptimizer information bar should be displayed on accelerated web pages
         </documentation>
         
         <input message="zeusns:getShowInfoBarRequest"/>
         <output message="zeusns:getShowInfoBarResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="getShowInfoBarByLocation">
         <documentation>
            Get whether or not the Aptimizer information bar should be displayed on accelerated web pages This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getShowInfoBarByLocationRequest"/>
         <output message="zeusns:getShowInfoBarByLocationResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="setBackgroundAfter">
         <documentation>
            Set after how many milliseconds Aptimizer should return the original server content to the client and continue optimizing data in the background
         </documentation>
         
         <input message="zeusns:setBackgroundAfterRequest"/>
         <output message="zeusns:setBackgroundAfterResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="setBackgroundAfterByLocation">
         <documentation>
            Set after how many milliseconds Aptimizer should return the original server content to the client and continue optimizing data in the background This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setBackgroundAfterByLocationRequest"/>
         <output message="zeusns:setBackgroundAfterByLocationResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="setBackgroundOnAdditionalResources">
         <documentation>
            Set whether or not Aptimizer should fetch and optimize additional resources in the background and send the original server content to clients until the optimized page is ready.
         </documentation>
         
         <input message="zeusns:setBackgroundOnAdditionalResourcesRequest"/>
         <output message="zeusns:setBackgroundOnAdditionalResourcesResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="setBackgroundOnAdditionalResourcesByLocation">
         <documentation>
            Set whether or not Aptimizer should fetch and optimize additional resources in the background and send the original server content to clients until the optimized page is ready. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setBackgroundOnAdditionalResourcesByLocationRequest"/>
         <output message="zeusns:setBackgroundOnAdditionalResourcesByLocationResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="setConfig">
         <documentation>
            Set the configuration string for the Aptimize profile.
         </documentation>
         
         <input message="zeusns:setConfigRequest"/>
         <output message="zeusns:setConfigResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="setConfigByLocation">
         <documentation>
            Set the configuration string for the Aptimize profile. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setConfigByLocationRequest"/>
         <output message="zeusns:setConfigByLocationResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="setMode">
         <documentation>
            Set the mode in which Aptimizer should run when this profile is applied
         </documentation>
         
         <input message="zeusns:setModeRequest"/>
         <output message="zeusns:setModeResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="setModeByLocation">
         <documentation>
            Set the mode in which Aptimizer should run when this profile is applied This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setModeByLocationRequest"/>
         <output message="zeusns:setModeByLocationResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="setShowInfoBar">
         <documentation>
            Set whether or not the Aptimizer information bar should be displayed on accelerated web pages
         </documentation>
         
         <input message="zeusns:setShowInfoBarRequest"/>
         <output message="zeusns:setShowInfoBarResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="setShowInfoBarByLocation">
         <documentation>
            Set whether or not the Aptimizer information bar should be displayed on accelerated web pages This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setShowInfoBarByLocationRequest"/>
         <output message="zeusns:setShowInfoBarByLocationResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
   </portType>
   
   <binding name="Catalog.Aptimizer.ProfileBinding" type="zeusns:Catalog.Aptimizer.ProfilePort">
      <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
      <operation name="getAptimizerProfileNames">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/getAptimizerProfileNames"/>
         <documentation>
            Get the names of all the configured Aptimizer profiles.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getBackgroundAfter">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/getBackgroundAfter"/>
         <documentation>
            Get after how many milliseconds Aptimizer should return the original server content to the client and continue optimizing data in the background
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getBackgroundAfterByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/getBackgroundAfterByLocation"/>
         <documentation>
            Get after how many milliseconds Aptimizer should return the original server content to the client and continue optimizing data in the background This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getBackgroundOnAdditionalResources">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/getBackgroundOnAdditionalResources"/>
         <documentation>
            Get whether or not Aptimizer should fetch and optimize additional resources in the background and send the original server content to clients until the optimized page is ready.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getBackgroundOnAdditionalResourcesByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/getBackgroundOnAdditionalResourcesByLocation"/>
         <documentation>
            Get whether or not Aptimizer should fetch and optimize additional resources in the background and send the original server content to clients until the optimized page is ready. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getConfig">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/getConfig"/>
         <documentation>
            Get the configuration string for the Aptimize profile.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getConfigByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/getConfigByLocation"/>
         <documentation>
            Get the configuration string for the Aptimize profile. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getMode">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/getMode"/>
         <documentation>
            Get the mode in which Aptimizer should run when this profile is applied
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getModeByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/getModeByLocation"/>
         <documentation>
            Get the mode in which Aptimizer should run when this profile is applied This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getShowInfoBar">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/getShowInfoBar"/>
         <documentation>
            Get whether or not the Aptimizer information bar should be displayed on accelerated web pages
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getShowInfoBarByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/getShowInfoBarByLocation"/>
         <documentation>
            Get whether or not the Aptimizer information bar should be displayed on accelerated web pages This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setBackgroundAfter">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/setBackgroundAfter"/>
         <documentation>
            Set after how many milliseconds Aptimizer should return the original server content to the client and continue optimizing data in the background
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setBackgroundAfterByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/setBackgroundAfterByLocation"/>
         <documentation>
            Set after how many milliseconds Aptimizer should return the original server content to the client and continue optimizing data in the background This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setBackgroundOnAdditionalResources">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/setBackgroundOnAdditionalResources"/>
         <documentation>
            Set whether or not Aptimizer should fetch and optimize additional resources in the background and send the original server content to clients until the optimized page is ready.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setBackgroundOnAdditionalResourcesByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/setBackgroundOnAdditionalResourcesByLocation"/>
         <documentation>
            Set whether or not Aptimizer should fetch and optimize additional resources in the background and send the original server content to clients until the optimized page is ready. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setConfig">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/setConfig"/>
         <documentation>
            Set the configuration string for the Aptimize profile.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setConfigByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/setConfigByLocation"/>
         <documentation>
            Set the configuration string for the Aptimize profile. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setMode">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/setMode"/>
         <documentation>
            Set the mode in which Aptimizer should run when this profile is applied
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setModeByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/setModeByLocation"/>
         <documentation>
            Set the mode in which Aptimizer should run when this profile is applied This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setShowInfoBar">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/setShowInfoBar"/>
         <documentation>
            Set whether or not the Aptimizer information bar should be displayed on accelerated web pages
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setShowInfoBarByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/setShowInfoBarByLocation"/>
         <documentation>
            Set whether or not the Aptimizer information bar should be displayed on accelerated web pages This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/Aptimizer/Profile/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
   </binding>
   
   <service name="Catalog.Aptimizer.Profile">
      <documentation>
         The Catalog.AptimizerAptimizerProfile interface allows management of Aptimizer profiles. Using this interface, you can create, delete and rename Aptimizer profiles, and manage their configuration.
      </documentation>
      
      <port name="Catalog.Aptimizer.ProfilePort" binding="zeusns:Catalog.Aptimizer.ProfileBinding">
         <soap:address location="https://admin_server:9090/soap"/>
      </port>
   </service>
   
</definitions>
