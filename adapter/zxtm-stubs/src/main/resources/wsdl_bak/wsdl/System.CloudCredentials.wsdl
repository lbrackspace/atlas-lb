<?xml version="1.0" ?>

<!--
    Copyright (c) 2005-2013 Zeus Technology. All rights reserved.

-->

<definitions name="System.CloudCredentials"
 targetNamespace="http://soap.zeus.com/zxtm/1.0/"
 xmlns:zeusns="http://soap.zeus.com/zxtm/1.0/"
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
 xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
 xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
 xmlns="http://schemas.xmlsoap.org/wsdl/">
   
   <types>
      <xsd:schema targetNamespace='http://soap.zeus.com/zxtm/1.0/'
       xmlns='http://www.w3.org/2001/XMLSchema'
       xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/'
       xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/'>
         
         <xsd:complexType name="StringArray">
           <xsd:complexContent>
             <xsd:restriction base='SOAP-ENC:Array'>
              <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:string[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="StringArrayArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType="zeusns:StringArray[]"/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.CloudCredentials.CredentialsData">
           <xsd:annotation>
             <xsd:documentation>This structure contains the information needed to create CloudCredentials</xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="cred1" type="xsd:string">
               <xsd:annotation><xsd:documentation> The user name (mandatory) </xsd:documentation></xsd:annotation>
             </xsd:element>
             <xsd:element name="cred2" type="xsd:string">
               <xsd:annotation><xsd:documentation> The password (mandatory) </xsd:documentation></xsd:annotation>
             </xsd:element>
             <xsd:element name="cred3" type="xsd:string">
               <xsd:annotation><xsd:documentation> The authorization token (can be empty) </xsd:documentation></xsd:annotation>
             </xsd:element>
             <xsd:element name="script" type="xsd:string">
               <xsd:annotation><xsd:documentation> The script to use for API calls (mandatory) </xsd:documentation></xsd:annotation>
             </xsd:element>
             <xsd:element name="update_interval" type="xsd:int">
               <xsd:annotation><xsd:documentation> Time period to wait between status API calls in seconds </xsd:documentation></xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="System.CloudCredentials.CredentialsDataArray">
           <xsd:complexContent>
             <xsd:restriction base='SOAP-ENC:Array'>
              <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='zeusns:System.CloudCredentials.CredentialsData[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="booleanArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:boolean[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="booleanArrayArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType="zeusns:booleanArray[]"/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         
         <xsd:complexType name="doubleArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:double[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="intArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:int[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="longArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:long[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="unsignedIntArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:unsignedInt[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="unsignedLongArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:unsignedLong[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="DeploymentError">
           <xsd:annotation>
            <xsd:documentation>
              The DeploymentError fault is raised when a configuration
              change causes errors when attempting to apply the configuration
              to a running traffic manager.
         
              It would be raised in cases such as failing to bind to
              a port when enabling a Virtual Server.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="key" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The configuration key that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="value" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The value that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="InvalidInput">
           <xsd:annotation>
            <xsd:documentation>
              The InvalidInput fault is raised when the input to a function is
              invalid, for example a number was out of range. This fault is also
              raised in cases such as VirtualServer.setPool() where the Pool
              doesn't exist
         
              The details in the fault contain the object, key and value
              that caused the fault. These might be blank if they are not relevant
              to the fault.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="key" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The configuration key that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="value" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The value that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="InvalidObjectName">
           <xsd:annotation>
            <xsd:documentation>
              The InvalidObjectName fault is raised when attempting to create
              a new object (e.g. via an add, rename or copy) and the name is
              invalid (e.g. it contains a '/').
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="ObjectAlreadyExists">
           <xsd:annotation>
            <xsd:documentation>
             The ObjectAlreadyExists fault is raised when attempting to create an
             object (such as a Virtual Server) that already exists. It will also
             be raised in cases such as renaming and copying objects.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="ObjectDoesNotExist">
           <xsd:annotation>
            <xsd:documentation>
             The ObjectDoesNotExist fault is raised when attempting to perform an
             operation on an object (such as Virtual Server) that doesn't exist.
         
             This fault will only be raised if the primary object in the call doesn't
             exist. For example if calling VirtualServer.setPool(), then
             this fault will be raised if the Virtual Server doesn't exist, but if
             the Pool doesn't exist then the "InvalidInput" fault will be raised.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault
                </xsd:documentation>
               </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
      </xsd:schema>
   </types>
   
   <message name="addCloudCredentialsRequest">
      <part name="class_names" type="zeusns:StringArray" />
      <part name="class_values" type="zeusns:System.CloudCredentials.CredentialsDataArray" />
   </message>
   
   <message name="addCloudCredentialsResponse"></message>
   
   <message name="copyCloudCredentialsRequest">
      <part name="class_names" type="zeusns:StringArray" />
      <part name="new_names" type="zeusns:StringArray" />
   </message>
   
   <message name="copyCloudCredentialsResponse"></message>
   
   <message name="deleteCloudCredentialsRequest">
      <part name="class_names" type="zeusns:StringArray" />
   </message>
   
   <message name="deleteCloudCredentialsResponse"></message>
   
   <message name="getApiServerRequest">
      <part name="class_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getApiServerResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getApiServerByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="class_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getApiServerByLocationResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getChangeProcessTimeoutRequest">
      <part name="class_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getChangeProcessTimeoutResponse">
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="getChangeProcessTimeoutByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="class_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getChangeProcessTimeoutByLocationResponse">
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="getCloudCredentialsNamesRequest"></message>
   
   <message name="getCloudCredentialsNamesResponse">
      <part name="class_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getCred1Request">
      <part name="class_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getCred1Response">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getCred1ByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="class_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getCred1ByLocationResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getScriptRequest">
      <part name="class_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getScriptResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getScriptByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="class_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getScriptByLocationResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getUpdateIntervalRequest">
      <part name="class_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getUpdateIntervalResponse">
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="getUpdateIntervalByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="class_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getUpdateIntervalByLocationResponse">
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="renameCloudCredentialsRequest">
      <part name="class_names" type="zeusns:StringArray" />
      <part name="new_names" type="zeusns:StringArray" />
   </message>
   
   <message name="renameCloudCredentialsResponse"></message>
   
   <message name="setApiServerRequest">
      <part name="class_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setApiServerResponse"></message>
   
   <message name="setApiServerByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="class_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setApiServerByLocationResponse"></message>
   
   <message name="setChangeProcessTimeoutRequest">
      <part name="class_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="setChangeProcessTimeoutResponse"></message>
   
   <message name="setChangeProcessTimeoutByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="class_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="setChangeProcessTimeoutByLocationResponse"></message>
   
   <message name="setCred1Request">
      <part name="class_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setCred1Response"></message>
   
   <message name="setCred1ByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="class_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setCred1ByLocationResponse"></message>
   
   <message name="setCred2Request">
      <part name="class_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setCred2Response"></message>
   
   <message name="setCred2ByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="class_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setCred2ByLocationResponse"></message>
   
   <message name="setCred3Request">
      <part name="class_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setCred3Response"></message>
   
   <message name="setCred3ByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="class_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setCred3ByLocationResponse"></message>
   
   <message name="setScriptRequest">
      <part name="class_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setScriptResponse"></message>
   
   <message name="setScriptByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="class_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setScriptByLocationResponse"></message>
   
   <message name="setUpdateIntervalRequest">
      <part name="class_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="setUpdateIntervalResponse"></message>
   
   <message name="setUpdateIntervalByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="class_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="setUpdateIntervalByLocationResponse"></message>
   
   <message name="DeploymentError">
      <part name="parameters" type="zeusns:DeploymentError" />
   </message>
   
   <message name="InvalidInput">
      <part name="parameters" type="zeusns:InvalidInput" />
   </message>
   
   <message name="InvalidObjectName">
      <part name="parameters" type="zeusns:InvalidObjectName" />
   </message>
   
   <message name="ObjectAlreadyExists">
      <part name="parameters" type="zeusns:ObjectAlreadyExists" />
   </message>
   
   <message name="ObjectDoesNotExist">
      <part name="parameters" type="zeusns:ObjectDoesNotExist" />
   </message>
   
   <portType name="System.CloudCredentialsPort">
      <operation name="addCloudCredentials">
         <documentation>
            Add new sets of cloud credentials.
         </documentation>
         
         <input message="zeusns:addCloudCredentialsRequest"/>
         <output message="zeusns:addCloudCredentialsResponse"/>
         <fault name="ObjectAlreadyExists" message="zeusns:ObjectAlreadyExists"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
      </operation>
      
      <operation name="copyCloudCredentials">
         <documentation>
            Copy the named set of cloud credentials.
         </documentation>
         
         <input message="zeusns:copyCloudCredentialsRequest"/>
         <output message="zeusns:copyCloudCredentialsResponse"/>
         <fault name="ObjectAlreadyExists" message="zeusns:ObjectAlreadyExists"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidObjectName" message="zeusns:InvalidObjectName"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="deleteCloudCredentials">
         <documentation>
            Delete the named sets of cloud credentials.
         </documentation>
         
         <input message="zeusns:deleteCloudCredentialsRequest"/>
         <output message="zeusns:deleteCloudCredentialsResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="getApiServer">
         <documentation>
            Get the vcenter server hostname or IP address.
         </documentation>
         
         <input message="zeusns:getApiServerRequest"/>
         <output message="zeusns:getApiServerResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getApiServerByLocation">
         <documentation>
            Get the vcenter server hostname or IP address. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getApiServerByLocationRequest"/>
         <output message="zeusns:getApiServerByLocationResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getChangeProcessTimeout">
         <documentation>
            Get the amount of time change calls are allowed to take
         </documentation>
         
         <input message="zeusns:getChangeProcessTimeoutRequest"/>
         <output message="zeusns:getChangeProcessTimeoutResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getChangeProcessTimeoutByLocation">
         <documentation>
            Get the amount of time change calls are allowed to take This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getChangeProcessTimeoutByLocationRequest"/>
         <output message="zeusns:getChangeProcessTimeoutByLocationResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getCloudCredentialsNames">
         <documentation>
            Get the names of all the configured cloud credentials.
         </documentation>
         
         <input message="zeusns:getCloudCredentialsNamesRequest"/>
         <output message="zeusns:getCloudCredentialsNamesResponse"/>
      </operation>
      
      <operation name="getCred1">
         <documentation>
            Get the cloud user name
         </documentation>
         
         <input message="zeusns:getCred1Request"/>
         <output message="zeusns:getCred1Response"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getCred1ByLocation">
         <documentation>
            Get the cloud user name This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getCred1ByLocationRequest"/>
         <output message="zeusns:getCred1ByLocationResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getScript">
         <documentation>
            Get the script
         </documentation>
         
         <input message="zeusns:getScriptRequest"/>
         <output message="zeusns:getScriptResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getScriptByLocation">
         <documentation>
            Get the script This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getScriptByLocationRequest"/>
         <output message="zeusns:getScriptByLocationResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getUpdateInterval">
         <documentation>
            Get the interval at which cloud status is queried
         </documentation>
         
         <input message="zeusns:getUpdateIntervalRequest"/>
         <output message="zeusns:getUpdateIntervalResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getUpdateIntervalByLocation">
         <documentation>
            Get the interval at which cloud status is queried This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getUpdateIntervalByLocationRequest"/>
         <output message="zeusns:getUpdateIntervalByLocationResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="renameCloudCredentials">
         <documentation>
            Rename the named sets of cloud credentials.
         </documentation>
         
         <input message="zeusns:renameCloudCredentialsRequest"/>
         <output message="zeusns:renameCloudCredentialsResponse"/>
         <fault name="ObjectAlreadyExists" message="zeusns:ObjectAlreadyExists"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidObjectName" message="zeusns:InvalidObjectName"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setApiServer">
         <documentation>
            Set the vcenter server hostname or IP address.
         </documentation>
         
         <input message="zeusns:setApiServerRequest"/>
         <output message="zeusns:setApiServerResponse"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setApiServerByLocation">
         <documentation>
            Set the vcenter server hostname or IP address. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setApiServerByLocationRequest"/>
         <output message="zeusns:setApiServerByLocationResponse"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setChangeProcessTimeout">
         <documentation>
            Set the amount of time change calls are allowed to take
         </documentation>
         
         <input message="zeusns:setChangeProcessTimeoutRequest"/>
         <output message="zeusns:setChangeProcessTimeoutResponse"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setChangeProcessTimeoutByLocation">
         <documentation>
            Set the amount of time change calls are allowed to take This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setChangeProcessTimeoutByLocationRequest"/>
         <output message="zeusns:setChangeProcessTimeoutByLocationResponse"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setCred1">
         <documentation>
            Set the cloud user name
         </documentation>
         
         <input message="zeusns:setCred1Request"/>
         <output message="zeusns:setCred1Response"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setCred1ByLocation">
         <documentation>
            Set the cloud user name This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setCred1ByLocationRequest"/>
         <output message="zeusns:setCred1ByLocationResponse"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setCred2">
         <documentation>
            Set the cloud user password
         </documentation>
         
         <input message="zeusns:setCred2Request"/>
         <output message="zeusns:setCred2Response"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setCred2ByLocation">
         <documentation>
            Set the cloud user password This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setCred2ByLocationRequest"/>
         <output message="zeusns:setCred2ByLocationResponse"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setCred3">
         <documentation>
            Set the cloud user authentication token
         </documentation>
         
         <input message="zeusns:setCred3Request"/>
         <output message="zeusns:setCred3Response"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setCred3ByLocation">
         <documentation>
            Set the cloud user authentication token This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setCred3ByLocationRequest"/>
         <output message="zeusns:setCred3ByLocationResponse"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setScript">
         <documentation>
            Set the script
         </documentation>
         
         <input message="zeusns:setScriptRequest"/>
         <output message="zeusns:setScriptResponse"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setScriptByLocation">
         <documentation>
            Set the script This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setScriptByLocationRequest"/>
         <output message="zeusns:setScriptByLocationResponse"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setUpdateInterval">
         <documentation>
            Set the interval at which cloud status is queried
         </documentation>
         
         <input message="zeusns:setUpdateIntervalRequest"/>
         <output message="zeusns:setUpdateIntervalResponse"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setUpdateIntervalByLocation">
         <documentation>
            Set the interval at which cloud status is queried This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setUpdateIntervalByLocationRequest"/>
         <output message="zeusns:setUpdateIntervalByLocationResponse"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
   </portType>
   
   <binding name="System.CloudCredentialsBinding" type="zeusns:System.CloudCredentialsPort">
      <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
      <operation name="addCloudCredentials">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/addCloudCredentials"/>
         <documentation>
            Add new sets of cloud credentials.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectAlreadyExists">
            <soap:fault use="encoded" name="ObjectAlreadyExists" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="copyCloudCredentials">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/copyCloudCredentials"/>
         <documentation>
            Copy the named set of cloud credentials.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectAlreadyExists">
            <soap:fault use="encoded" name="ObjectAlreadyExists" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidObjectName">
            <soap:fault use="encoded" name="InvalidObjectName" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="deleteCloudCredentials">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/deleteCloudCredentials"/>
         <documentation>
            Delete the named sets of cloud credentials.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getApiServer">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/getApiServer"/>
         <documentation>
            Get the vcenter server hostname or IP address.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getApiServerByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/getApiServerByLocation"/>
         <documentation>
            Get the vcenter server hostname or IP address. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getChangeProcessTimeout">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/getChangeProcessTimeout"/>
         <documentation>
            Get the amount of time change calls are allowed to take
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getChangeProcessTimeoutByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/getChangeProcessTimeoutByLocation"/>
         <documentation>
            Get the amount of time change calls are allowed to take This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getCloudCredentialsNames">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/getCloudCredentialsNames"/>
         <documentation>
            Get the names of all the configured cloud credentials.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
      </operation>
      
      <operation name="getCred1">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/getCred1"/>
         <documentation>
            Get the cloud user name
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getCred1ByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/getCred1ByLocation"/>
         <documentation>
            Get the cloud user name This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getScript">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/getScript"/>
         <documentation>
            Get the script
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getScriptByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/getScriptByLocation"/>
         <documentation>
            Get the script This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getUpdateInterval">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/getUpdateInterval"/>
         <documentation>
            Get the interval at which cloud status is queried
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getUpdateIntervalByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/getUpdateIntervalByLocation"/>
         <documentation>
            Get the interval at which cloud status is queried This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="renameCloudCredentials">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/renameCloudCredentials"/>
         <documentation>
            Rename the named sets of cloud credentials.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectAlreadyExists">
            <soap:fault use="encoded" name="ObjectAlreadyExists" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidObjectName">
            <soap:fault use="encoded" name="InvalidObjectName" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setApiServer">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/setApiServer"/>
         <documentation>
            Set the vcenter server hostname or IP address.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setApiServerByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/setApiServerByLocation"/>
         <documentation>
            Set the vcenter server hostname or IP address. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setChangeProcessTimeout">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/setChangeProcessTimeout"/>
         <documentation>
            Set the amount of time change calls are allowed to take
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setChangeProcessTimeoutByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/setChangeProcessTimeoutByLocation"/>
         <documentation>
            Set the amount of time change calls are allowed to take This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setCred1">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/setCred1"/>
         <documentation>
            Set the cloud user name
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setCred1ByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/setCred1ByLocation"/>
         <documentation>
            Set the cloud user name This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setCred2">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/setCred2"/>
         <documentation>
            Set the cloud user password
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setCred2ByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/setCred2ByLocation"/>
         <documentation>
            Set the cloud user password This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setCred3">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/setCred3"/>
         <documentation>
            Set the cloud user authentication token
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setCred3ByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/setCred3ByLocation"/>
         <documentation>
            Set the cloud user authentication token This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setScript">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/setScript"/>
         <documentation>
            Set the script
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setScriptByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/setScriptByLocation"/>
         <documentation>
            Set the script This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setUpdateInterval">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/setUpdateInterval"/>
         <documentation>
            Set the interval at which cloud status is queried
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setUpdateIntervalByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/setUpdateIntervalByLocation"/>
         <documentation>
            Set the interval at which cloud status is queried This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/System/CloudCredentials/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
   </binding>
   
   <service name="System.CloudCredentials">
      <documentation>
         The System.CloudCredentials interface allows management of Cloud Credentials. Using this interface, you can create, delete and rename sets of cloud credentials, and manage their configuration.
      </documentation>
      
      <port name="System.CloudCredentialsPort" binding="zeusns:System.CloudCredentialsBinding">
         <soap:address location="https://admin_server:9090/soap"/>
      </port>
   </service>
   
</definitions>
