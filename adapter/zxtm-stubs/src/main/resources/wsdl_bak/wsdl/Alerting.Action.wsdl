<?xml version="1.0" ?>

<!--
    Copyright (c) 2005-2013 Zeus Technology. All rights reserved.

-->

<definitions name="Alerting.Action"
 targetNamespace="http://soap.zeus.com/zxtm/1.0/"
 xmlns:zeusns="http://soap.zeus.com/zxtm/1.0/"
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
 xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
 xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
 xmlns="http://schemas.xmlsoap.org/wsdl/">
   
   <types>
      <xsd:schema targetNamespace='http://soap.zeus.com/zxtm/1.0/'
       xmlns='http://www.w3.org/2001/XMLSchema'
       xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/'
       xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/'>
         
         <xsd:complexType name="Alerting.Action.Argument">
           <xsd:annotation>
            <xsd:documentation>An argument that is added to the command line when the script is run</xsd:documentation>
           </xsd:annotation>
           <xsd:all>
         
             <xsd:element name="name" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>The name of the argument.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
             <xsd:element name="value" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>The value of the argument.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
             <xsd:element name="description" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A description of the argument.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="Alerting.Action.ArgumentArray">
           <xsd:complexContent>
             <xsd:restriction base='SOAP-ENC:Array'>
              <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='zeusns:Alerting.Action.Argument[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="Alerting.Action.ArgumentArrayArray">
           <xsd:complexContent>
             <xsd:restriction base='SOAP-ENC:Array'>
              <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='zeusns:Alerting.Action.ArgumentArray[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="Alerting.Action.Login">
           <xsd:annotation>
            <xsd:documentation>An argument that is added to the command line when the script is run</xsd:documentation>
           </xsd:annotation>
           <xsd:all>
         
             <xsd:element name="username" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>The username for basic SOAP authentication</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
             <xsd:element name="password" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>The username for basic SOAP authentication</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
            
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="Alerting.Action.LoginArray">
           <xsd:complexContent>
             <xsd:restriction base='SOAP-ENC:Array'>
              <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='zeusns:Alerting.Action.Login[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:simpleType name="Alerting.Action.SNMPHashAlg">
            <xsd:restriction base="xsd:string">
               <xsd:enumeration value="md5">
                  <xsd:annotation>
                     <xsd:documentation>MD5</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="sha1">
                  <xsd:annotation>
                     <xsd:documentation>SHA-1</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
            </xsd:restriction>
         </xsd:simpleType>
         
         <xsd:complexType name="Alerting.Action.SNMPHashAlgArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType="zeusns:Alerting.Action.SNMPHashAlg[]"/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:simpleType name="Alerting.Action.SNMPVersion">
            <xsd:restriction base="xsd:string">
               <xsd:enumeration value="snmpv1">
                  <xsd:annotation>
                     <xsd:documentation>SNMPv1</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="snmpv2c">
                  <xsd:annotation>
                     <xsd:documentation>SNMPv2c</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="snmpv3">
                  <xsd:annotation>
                     <xsd:documentation>SNMPv3</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
            </xsd:restriction>
         </xsd:simpleType>
         
         <xsd:complexType name="Alerting.Action.SNMPVersionArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType="zeusns:Alerting.Action.SNMPVersion[]"/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         
         <xsd:simpleType name="Alerting.Action.Type">
            <xsd:restriction base="xsd:string">
         
         
            <xsd:enumeration value="email">
               <xsd:annotation>
                  <xsd:documentation>Sends e-mails to a set of e-mail addresses.</xsd:documentation>
               </xsd:annotation>
            </xsd:enumeration>
         
            <xsd:enumeration value="soap">
               <xsd:annotation>
                  <xsd:documentation>Reports event information to a remote server using the SOAP protocol.</xsd:documentation>
               </xsd:annotation>
            </xsd:enumeration>
         
            <xsd:enumeration value="trap">
               <xsd:annotation>
                  <xsd:documentation>Sends an SNMP message to a remote server.</xsd:documentation>
               </xsd:annotation>
            </xsd:enumeration>
         
            <xsd:enumeration value="syslog">
               <xsd:annotation>
                  <xsd:documentation>Writes a log line in the syslog.</xsd:documentation>
               </xsd:annotation>
            </xsd:enumeration>
         
            <xsd:enumeration value="log">
               <xsd:annotation>
                  <xsd:documentation>Writes a log line in a named file.</xsd:documentation>
               </xsd:annotation>
            </xsd:enumeration>
         
            <xsd:enumeration value="program">
               <xsd:annotation>
                  <xsd:documentation>Executes an external program.</xsd:documentation>
               </xsd:annotation>
            </xsd:enumeration>
         
         
            </xsd:restriction>
         </xsd:simpleType>
         
         <xsd:complexType name="Alerting.Action.TypeArray">
           <xsd:complexContent>
             <xsd:restriction base='SOAP-ENC:Array'>
              <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='zeusns:Alerting.Action.Type[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="StringArray">
           <xsd:complexContent>
             <xsd:restriction base='SOAP-ENC:Array'>
              <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:string[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="StringArrayArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType="zeusns:StringArray[]"/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="booleanArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:boolean[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="booleanArrayArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType="zeusns:booleanArray[]"/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         
         <xsd:complexType name="doubleArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:double[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="intArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:int[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="longArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:long[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="unsignedIntArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:unsignedInt[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="unsignedLongArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:unsignedLong[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="DeploymentError">
           <xsd:annotation>
            <xsd:documentation>
              The DeploymentError fault is raised when a configuration
              change causes errors when attempting to apply the configuration
              to a running traffic manager.
         
              It would be raised in cases such as failing to bind to
              a port when enabling a Virtual Server.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="key" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The configuration key that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="value" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The value that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="InvalidInput">
           <xsd:annotation>
            <xsd:documentation>
              The InvalidInput fault is raised when the input to a function is
              invalid, for example a number was out of range. This fault is also
              raised in cases such as VirtualServer.setPool() where the Pool
              doesn't exist
         
              The details in the fault contain the object, key and value
              that caused the fault. These might be blank if they are not relevant
              to the fault.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="key" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The configuration key that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="value" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The value that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="InvalidObjectName">
           <xsd:annotation>
            <xsd:documentation>
              The InvalidObjectName fault is raised when attempting to create
              a new object (e.g. via an add, rename or copy) and the name is
              invalid (e.g. it contains a '/').
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="InvalidOperation">
           <xsd:annotation>
            <xsd:documentation>
              The InvalidOperation fault is emitted when attempting an operation
              that doesn't make sense or is prohibited, for example deleting
              a built-in monitor, or attempting to rename an object twice in
              the same call. 
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="key" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The configuration key that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="value" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The value that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="ObjectAlreadyExists">
           <xsd:annotation>
            <xsd:documentation>
             The ObjectAlreadyExists fault is raised when attempting to create an
             object (such as a Virtual Server) that already exists. It will also
             be raised in cases such as renaming and copying objects.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="ObjectDoesNotExist">
           <xsd:annotation>
            <xsd:documentation>
             The ObjectDoesNotExist fault is raised when attempting to perform an
             operation on an object (such as Virtual Server) that doesn't exist.
         
             This fault will only be raised if the primary object in the call doesn't
             exist. For example if calling VirtualServer.setPool(), then
             this fault will be raised if the Virtual Server doesn't exist, but if
             the Pool doesn't exist then the "InvalidInput" fault will be raised.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault
                </xsd:documentation>
               </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="ObjectInUse">
           <xsd:annotation>
            <xsd:documentation>
             The ObjectInUse fault is raised when attempting to delete an object
             that is referenced by another object, for example deleting a Pool
             that is in use by a Virtual Server.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
      </xsd:schema>
   </types>
   
   <message name="addActionRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="types" type="zeusns:Alerting.Action.TypeArray" />
   </message>
   
   <message name="addActionResponse"></message>
   
   <message name="addScriptArgumentsRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="arguments" type="zeusns:Alerting.Action.ArgumentArrayArray" />
   </message>
   
   <message name="addScriptArgumentsResponse"></message>
   
   <message name="copyActionRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="new_names" type="zeusns:StringArray" />
   </message>
   
   <message name="copyActionResponse"></message>
   
   <message name="deleteActionRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="deleteActionResponse"></message>
   
   <message name="deleteActionProgramRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="deleteActionProgramResponse"></message>
   
   <message name="downloadActionProgramRequest">
      <part name="name" type="xsd:string" />
   </message>
   
   <message name="downloadActionProgramResponse">
      <part name="contents" type="xsd:base64Binary" />
   </message>
   
   <message name="getActionNamesRequest"></message>
   
   <message name="getActionNamesResponse">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getActionNamesOfTypeRequest">
      <part name="type" type="zeusns:Alerting.Action.Type" />
   </message>
   
   <message name="getActionNamesOfTypeResponse">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getActionProgramNamesRequest"></message>
   
   <message name="getActionProgramNamesResponse">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getActionTypeRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getActionTypeResponse">
      <part name="types" type="zeusns:Alerting.Action.TypeArray" />
   </message>
   
   <message name="getEmailRecipientsRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getEmailRecipientsResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getEmailRecipientsByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getEmailRecipientsByLocationResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getEmailSMTPServerRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getEmailSMTPServerResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getEmailSMTPServerByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getEmailSMTPServerByLocationResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getEmailSenderRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getEmailSenderResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getEmailSenderByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getEmailSenderByLocationResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getLogFilePathRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getLogFilePathResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getLogFilePathByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getLogFilePathByLocationResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getSNMPHashAlgRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getSNMPHashAlgResponse">
      <part name="values" type="zeusns:Alerting.Action.SNMPHashAlgArray" />
   </message>
   
   <message name="getSNMPHashAlgByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getSNMPHashAlgByLocationResponse">
      <part name="values" type="zeusns:Alerting.Action.SNMPHashAlgArray" />
   </message>
   
   <message name="getSNMPUsernameRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getSNMPUsernameResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getSNMPUsernameByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getSNMPUsernameByLocationResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getSNMPVersionRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getSNMPVersionResponse">
      <part name="values" type="zeusns:Alerting.Action.SNMPVersionArray" />
   </message>
   
   <message name="getSNMPVersionByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getSNMPVersionByLocationResponse">
      <part name="values" type="zeusns:Alerting.Action.SNMPVersionArray" />
   </message>
   
   <message name="getSOAPAdditionalRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getSOAPAdditionalResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getSOAPAdditionalByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getSOAPAdditionalByLocationResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getSOAPAuthenticationRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getSOAPAuthenticationResponse">
      <part name="credentials" type="zeusns:Alerting.Action.LoginArray" />
   </message>
   
   <message name="getSOAPAuthenticationByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getSOAPAuthenticationByLocationResponse">
      <part name="credentials" type="zeusns:Alerting.Action.LoginArray" />
   </message>
   
   <message name="getSOAPProxyRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getSOAPProxyResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getSOAPProxyByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getSOAPProxyByLocationResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getScriptArgumentsRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getScriptArgumentsResponse">
      <part name="arguments" type="zeusns:Alerting.Action.ArgumentArrayArray" />
   </message>
   
   <message name="getScriptProgramRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getScriptProgramResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getSyslogHostRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getSyslogHostResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getSyslogHostByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getSyslogHostByLocationResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getSyslogMessageLenLimitRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getSyslogMessageLenLimitResponse">
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="getSyslogMessageLenLimitByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getSyslogMessageLenLimitByLocationResponse">
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="getTimeoutRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getTimeoutResponse">
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="getTimeoutByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getTimeoutByLocationResponse">
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="getTrapCommunityRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getTrapCommunityResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getTrapCommunityByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getTrapCommunityByLocationResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getTrapHostRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getTrapHostResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getTrapHostByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getTrapHostByLocationResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getVerboseRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getVerboseResponse">
      <part name="values" type="zeusns:booleanArray" />
   </message>
   
   <message name="getVerboseByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getVerboseByLocationResponse">
      <part name="values" type="zeusns:booleanArray" />
   </message>
   
   <message name="removeSOAPAuthenticationRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="removeSOAPAuthenticationResponse"></message>
   
   <message name="removeSOAPAuthenticationByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="removeSOAPAuthenticationByLocationResponse"></message>
   
   <message name="removeScriptArgumentsRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="arguments" type="zeusns:StringArrayArray" />
   </message>
   
   <message name="removeScriptArgumentsResponse"></message>
   
   <message name="renameActionRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="new_names" type="zeusns:StringArray" />
   </message>
   
   <message name="renameActionResponse"></message>
   
   <message name="setEmailRecipientsRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setEmailRecipientsResponse"></message>
   
   <message name="setEmailRecipientsByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setEmailRecipientsByLocationResponse"></message>
   
   <message name="setEmailSMTPServerRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setEmailSMTPServerResponse"></message>
   
   <message name="setEmailSMTPServerByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setEmailSMTPServerByLocationResponse"></message>
   
   <message name="setEmailSenderRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setEmailSenderResponse"></message>
   
   <message name="setEmailSenderByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setEmailSenderByLocationResponse"></message>
   
   <message name="setLogFilePathRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setLogFilePathResponse"></message>
   
   <message name="setLogFilePathByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setLogFilePathByLocationResponse"></message>
   
   <message name="setSNMPAuthPasswordRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setSNMPAuthPasswordResponse"></message>
   
   <message name="setSNMPAuthPasswordByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setSNMPAuthPasswordByLocationResponse"></message>
   
   <message name="setSNMPHashAlgRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:Alerting.Action.SNMPHashAlgArray" />
   </message>
   
   <message name="setSNMPHashAlgResponse"></message>
   
   <message name="setSNMPHashAlgByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:Alerting.Action.SNMPHashAlgArray" />
   </message>
   
   <message name="setSNMPHashAlgByLocationResponse"></message>
   
   <message name="setSNMPPrivPasswordRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setSNMPPrivPasswordResponse"></message>
   
   <message name="setSNMPPrivPasswordByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setSNMPPrivPasswordByLocationResponse"></message>
   
   <message name="setSNMPUsernameRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setSNMPUsernameResponse"></message>
   
   <message name="setSNMPUsernameByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setSNMPUsernameByLocationResponse"></message>
   
   <message name="setSNMPVersionRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:Alerting.Action.SNMPVersionArray" />
   </message>
   
   <message name="setSNMPVersionResponse"></message>
   
   <message name="setSNMPVersionByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:Alerting.Action.SNMPVersionArray" />
   </message>
   
   <message name="setSNMPVersionByLocationResponse"></message>
   
   <message name="setSOAPAdditionalRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setSOAPAdditionalResponse"></message>
   
   <message name="setSOAPAdditionalByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setSOAPAdditionalByLocationResponse"></message>
   
   <message name="setSOAPAuthenticationRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="credentials" type="zeusns:Alerting.Action.LoginArray" />
   </message>
   
   <message name="setSOAPAuthenticationResponse"></message>
   
   <message name="setSOAPAuthenticationByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
      <part name="credentials" type="zeusns:Alerting.Action.LoginArray" />
   </message>
   
   <message name="setSOAPAuthenticationByLocationResponse"></message>
   
   <message name="setSOAPProxyRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setSOAPProxyResponse"></message>
   
   <message name="setSOAPProxyByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setSOAPProxyByLocationResponse"></message>
   
   <message name="setScriptProgramRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setScriptProgramResponse"></message>
   
   <message name="setSyslogHostRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setSyslogHostResponse"></message>
   
   <message name="setSyslogHostByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setSyslogHostByLocationResponse"></message>
   
   <message name="setSyslogMessageLenLimitRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="setSyslogMessageLenLimitResponse"></message>
   
   <message name="setSyslogMessageLenLimitByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="setSyslogMessageLenLimitByLocationResponse"></message>
   
   <message name="setTimeoutRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="setTimeoutResponse"></message>
   
   <message name="setTimeoutByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:unsignedIntArray" />
   </message>
   
   <message name="setTimeoutByLocationResponse"></message>
   
   <message name="setTrapCommunityRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setTrapCommunityResponse"></message>
   
   <message name="setTrapCommunityByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setTrapCommunityByLocationResponse"></message>
   
   <message name="setTrapHostRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setTrapHostResponse"></message>
   
   <message name="setTrapHostByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setTrapHostByLocationResponse"></message>
   
   <message name="setVerboseRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:booleanArray" />
   </message>
   
   <message name="setVerboseResponse"></message>
   
   <message name="setVerboseByLocationRequest">
      <part name="location" type="xsd:string" />
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:booleanArray" />
   </message>
   
   <message name="setVerboseByLocationResponse"></message>
   
   <message name="testActionRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="testActionResponse"></message>
   
   <message name="updateScriptArgumentsRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="argument_names" type="zeusns:StringArrayArray" />
      <part name="new_arguments" type="zeusns:Alerting.Action.ArgumentArrayArray" />
   </message>
   
   <message name="updateScriptArgumentsResponse"></message>
   
   <message name="uploadActionProgramRequest">
      <part name="name" type="xsd:string" />
      <part name="content" type="xsd:base64Binary" />
   </message>
   
   <message name="uploadActionProgramResponse"></message>
   
   <message name="DeploymentError">
      <part name="parameters" type="zeusns:DeploymentError" />
   </message>
   
   <message name="InvalidInput">
      <part name="parameters" type="zeusns:InvalidInput" />
   </message>
   
   <message name="InvalidObjectName">
      <part name="parameters" type="zeusns:InvalidObjectName" />
   </message>
   
   <message name="InvalidOperation">
      <part name="parameters" type="zeusns:InvalidOperation" />
   </message>
   
   <message name="ObjectAlreadyExists">
      <part name="parameters" type="zeusns:ObjectAlreadyExists" />
   </message>
   
   <message name="ObjectDoesNotExist">
      <part name="parameters" type="zeusns:ObjectDoesNotExist" />
   </message>
   
   <message name="ObjectInUse">
      <part name="parameters" type="zeusns:ObjectInUse" />
   </message>
   
   <portType name="Alerting.ActionPort">
      <operation name="addAction">
         <documentation>
            Add a action that can be run by an event.
         </documentation>
         
         <input message="zeusns:addActionRequest"/>
         <output message="zeusns:addActionResponse"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="ObjectAlreadyExists" message="zeusns:ObjectAlreadyExists"/>
         <fault name="InvalidObjectName" message="zeusns:InvalidObjectName"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="addScriptArguments">
         <documentation>
            Adds a set of arguments to the specified actions. The actions specified must be of type 'program'.
         </documentation>
         
         <input message="zeusns:addScriptArgumentsRequest"/>
         <output message="zeusns:addScriptArgumentsResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="copyAction">
         <documentation>
            Copy each of the named actions.
         </documentation>
         
         <input message="zeusns:copyActionRequest"/>
         <output message="zeusns:copyActionResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="ObjectAlreadyExists" message="zeusns:ObjectAlreadyExists"/>
         <fault name="InvalidObjectName" message="zeusns:InvalidObjectName"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="deleteAction">
         <documentation>
            Deletes each of the named actions.
         </documentation>
         
         <input message="zeusns:deleteActionRequest"/>
         <output message="zeusns:deleteActionResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="ObjectInUse" message="zeusns:ObjectInUse"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="deleteActionProgram">
         <documentation>
            Delete the named action programs.
         </documentation>
         
         <input message="zeusns:deleteActionProgramRequest"/>
         <output message="zeusns:deleteActionProgramResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="ObjectInUse" message="zeusns:ObjectInUse"/>
      </operation>
      
      <operation name="downloadActionProgram">
         <documentation>
            Download the named action program.
         </documentation>
         
         <input message="zeusns:downloadActionProgramRequest"/>
         <output message="zeusns:downloadActionProgramResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getActionNames">
         <documentation>
            Get the names of all available actions.
         </documentation>
         
         <input message="zeusns:getActionNamesRequest"/>
         <output message="zeusns:getActionNamesResponse"/>
      </operation>
      
      <operation name="getActionNamesOfType">
         <documentation>
            Get the names of all actions of the specified type.
         </documentation>
         
         <input message="zeusns:getActionNamesOfTypeRequest"/>
         <output message="zeusns:getActionNamesOfTypeResponse"/>
      </operation>
      
      <operation name="getActionProgramNames">
         <documentation>
            Get the names of all the uploaded action programs. These are the programs that can be executed by custom program actions.
         </documentation>
         
         <input message="zeusns:getActionProgramNamesRequest"/>
         <output message="zeusns:getActionProgramNamesResponse"/>
      </operation>
      
      <operation name="getActionType">
         <documentation>
            Returns the type of each of the named actions.
         </documentation>
         
         <input message="zeusns:getActionTypeRequest"/>
         <output message="zeusns:getActionTypeResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getEmailRecipients">
         <documentation>
            Get the address the alert emails are sent from.
         </documentation>
         
         <input message="zeusns:getEmailRecipientsRequest"/>
         <output message="zeusns:getEmailRecipientsResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getEmailRecipientsByLocation">
         <documentation>
            Get the address the alert emails are sent from. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getEmailRecipientsByLocationRequest"/>
         <output message="zeusns:getEmailRecipientsByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getEmailSMTPServer">
         <documentation>
            Get the SMTP server used to send alert emails for the specified actions.
         </documentation>
         
         <input message="zeusns:getEmailSMTPServerRequest"/>
         <output message="zeusns:getEmailSMTPServerResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getEmailSMTPServerByLocation">
         <documentation>
            Get the SMTP server used to send alert emails for the specified actions. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getEmailSMTPServerByLocationRequest"/>
         <output message="zeusns:getEmailSMTPServerByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getEmailSender">
         <documentation>
            Get the specified email addresses to the recipient list for the specified actions.
         </documentation>
         
         <input message="zeusns:getEmailSenderRequest"/>
         <output message="zeusns:getEmailSenderResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getEmailSenderByLocation">
         <documentation>
            Get the specified email addresses to the recipient list for the specified actions. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getEmailSenderByLocationRequest"/>
         <output message="zeusns:getEmailSenderByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getLogFilePath">
         <documentation>
            Get the file this action logs to.
         </documentation>
         
         <input message="zeusns:getLogFilePathRequest"/>
         <output message="zeusns:getLogFilePathResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getLogFilePathByLocation">
         <documentation>
            Get the file this action logs to. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getLogFilePathByLocationRequest"/>
         <output message="zeusns:getLogFilePathByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getSNMPHashAlg">
         <documentation>
            Get the SNMP hash algorithm for sending the Notify over SNMPv3. Valid values are "md5" and "sha1". The actions specified must be of type 'trap'.
         </documentation>
         
         <input message="zeusns:getSNMPHashAlgRequest"/>
         <output message="zeusns:getSNMPHashAlgResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getSNMPHashAlgByLocation">
         <documentation>
            Get the SNMP hash algorithm for sending the Notify over SNMPv3. Valid values are "md5" and "sha1". The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getSNMPHashAlgByLocationRequest"/>
         <output message="zeusns:getSNMPHashAlgByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getSNMPUsername">
         <documentation>
            Get the SNMP username for sending the Notify over SNMPv3. The actions specified must be of type 'trap'.
         </documentation>
         
         <input message="zeusns:getSNMPUsernameRequest"/>
         <output message="zeusns:getSNMPUsernameResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getSNMPUsernameByLocation">
         <documentation>
            Get the SNMP username for sending the Notify over SNMPv3. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getSNMPUsernameByLocationRequest"/>
         <output message="zeusns:getSNMPUsernameByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getSNMPVersion">
         <documentation>
            Get the SNMP version used to send the trap/notify. The actions specified must be of type 'trap'.
         </documentation>
         
         <input message="zeusns:getSNMPVersionRequest"/>
         <output message="zeusns:getSNMPVersionResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getSNMPVersionByLocation">
         <documentation>
            Get the SNMP version used to send the trap/notify. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getSNMPVersionByLocationRequest"/>
         <output message="zeusns:getSNMPVersionByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getSOAPAdditional">
         <documentation>
            Get the additional information to send with the SOAP alert call.
         </documentation>
         
         <input message="zeusns:getSOAPAdditionalRequest"/>
         <output message="zeusns:getSOAPAdditionalResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getSOAPAdditionalByLocation">
         <documentation>
            Get the additional information to send with the SOAP alert call. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getSOAPAdditionalByLocationRequest"/>
         <output message="zeusns:getSOAPAdditionalByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getSOAPAuthentication">
         <documentation>
            Gets the username used to log in with HTTP basic authentication. The actions specified must be of type 'soap'. Note that the password field is always returned as an empty string.
         </documentation>
         
         <input message="zeusns:getSOAPAuthenticationRequest"/>
         <output message="zeusns:getSOAPAuthenticationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getSOAPAuthenticationByLocation">
         <documentation>
            Gets the username used to log in with HTTP basic authentication. The actions specified must be of type 'soap'. Note that the password field is always returned as an empty string. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getSOAPAuthenticationByLocationRequest"/>
         <output message="zeusns:getSOAPAuthenticationByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getSOAPProxy">
         <documentation>
            Get the server the SOAP event call will be made to for each of the specified SOAP events.
         </documentation>
         
         <input message="zeusns:getSOAPProxyRequest"/>
         <output message="zeusns:getSOAPProxyResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getSOAPProxyByLocation">
         <documentation>
            Get the server the SOAP event call will be made to for each of the specified SOAP events. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getSOAPProxyByLocationRequest"/>
         <output message="zeusns:getSOAPProxyByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getScriptArguments">
         <documentation>
            Gets all arguments for the specified script actions. The actions specified must be of type 'program'.
         </documentation>
         
         <input message="zeusns:getScriptArgumentsRequest"/>
         <output message="zeusns:getScriptArgumentsResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getScriptProgram">
         <documentation>
            Get the program to run including its command line arguments. The actions specified must be of type 'program'.
         </documentation>
         
         <input message="zeusns:getScriptProgramRequest"/>
         <output message="zeusns:getScriptProgramResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getSyslogHost">
         <documentation>
            Get the host to send syslog messages to (if empty, messages will be sent to localhost). The actions specified must be of type 'syslog'.
         </documentation>
         
         <input message="zeusns:getSyslogHostRequest"/>
         <output message="zeusns:getSyslogHostResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getSyslogHostByLocation">
         <documentation>
            Get the host to send syslog messages to (if empty, messages will be sent to localhost). The actions specified must be of type 'syslog'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getSyslogHostByLocationRequest"/>
         <output message="zeusns:getSyslogHostByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getSyslogMessageLenLimit">
         <documentation>
            Get syslog message length limit.
         </documentation>
         
         <input message="zeusns:getSyslogMessageLenLimitRequest"/>
         <output message="zeusns:getSyslogMessageLenLimitResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getSyslogMessageLenLimitByLocation">
         <documentation>
            Get syslog message length limit. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getSyslogMessageLenLimitByLocationRequest"/>
         <output message="zeusns:getSyslogMessageLenLimitByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getTimeout">
         <documentation>
            Get how long an action has to run, in seconds (set to 0 disable timing out).
         </documentation>
         
         <input message="zeusns:getTimeoutRequest"/>
         <output message="zeusns:getTimeoutResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getTimeoutByLocation">
         <documentation>
            Get how long an action has to run, in seconds (set to 0 disable timing out). This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getTimeoutByLocationRequest"/>
         <output message="zeusns:getTimeoutByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getTrapCommunity">
         <documentation>
            Get the SNMP community string for the SNMP trap. The actions specified must be of type 'trap'.
         </documentation>
         
         <input message="zeusns:getTrapCommunityRequest"/>
         <output message="zeusns:getTrapCommunityResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getTrapCommunityByLocation">
         <documentation>
            Get the SNMP community string for the SNMP trap. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getTrapCommunityByLocationRequest"/>
         <output message="zeusns:getTrapCommunityByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getTrapHost">
         <documentation>
            Get the hostname or IPv4 address and optional port number that should receive the SNMP trap. The actions specified must be of type 'trap'.
         </documentation>
         
         <input message="zeusns:getTrapHostRequest"/>
         <output message="zeusns:getTrapHostResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getTrapHostByLocation">
         <documentation>
            Get the hostname or IPv4 address and optional port number that should receive the SNMP trap. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getTrapHostByLocationRequest"/>
         <output message="zeusns:getTrapHostByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getVerbose">
         <documentation>
            Get if verbose logging is enabled for this action.
         </documentation>
         
         <input message="zeusns:getVerboseRequest"/>
         <output message="zeusns:getVerboseResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getVerboseByLocation">
         <documentation>
            Get if verbose logging is enabled for this action. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:getVerboseByLocationRequest"/>
         <output message="zeusns:getVerboseByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="removeSOAPAuthentication">
         <documentation>
            Disables using HTTP basic authentication with the SOAP Call. The actions specified must be of type 'soap'.
         </documentation>
         
         <input message="zeusns:removeSOAPAuthenticationRequest"/>
         <output message="zeusns:removeSOAPAuthenticationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="removeSOAPAuthenticationByLocation">
         <documentation>
            Disables using HTTP basic authentication with the SOAP Call. The actions specified must be of type 'soap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:removeSOAPAuthenticationByLocationRequest"/>
         <output message="zeusns:removeSOAPAuthenticationByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="removeScriptArguments">
         <documentation>
            Removes a set of arguments from the specified script actions. The actions specified must be of type 'program'.
         </documentation>
         
         <input message="zeusns:removeScriptArgumentsRequest"/>
         <output message="zeusns:removeScriptArgumentsResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="renameAction">
         <documentation>
            Rename each of the named actions.
         </documentation>
         
         <input message="zeusns:renameActionRequest"/>
         <output message="zeusns:renameActionResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="ObjectAlreadyExists" message="zeusns:ObjectAlreadyExists"/>
         <fault name="InvalidObjectName" message="zeusns:InvalidObjectName"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="setEmailRecipients">
         <documentation>
            Set the address the alert emails are sent from.
         </documentation>
         
         <input message="zeusns:setEmailRecipientsRequest"/>
         <output message="zeusns:setEmailRecipientsResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setEmailRecipientsByLocation">
         <documentation>
            Set the address the alert emails are sent from. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setEmailRecipientsByLocationRequest"/>
         <output message="zeusns:setEmailRecipientsByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setEmailSMTPServer">
         <documentation>
            Set the SMTP server used to send alert emails for the specified actions.
         </documentation>
         
         <input message="zeusns:setEmailSMTPServerRequest"/>
         <output message="zeusns:setEmailSMTPServerResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setEmailSMTPServerByLocation">
         <documentation>
            Set the SMTP server used to send alert emails for the specified actions. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setEmailSMTPServerByLocationRequest"/>
         <output message="zeusns:setEmailSMTPServerByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setEmailSender">
         <documentation>
            Set the specified email addresses to the recipient list for the specified actions.
         </documentation>
         
         <input message="zeusns:setEmailSenderRequest"/>
         <output message="zeusns:setEmailSenderResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setEmailSenderByLocation">
         <documentation>
            Set the specified email addresses to the recipient list for the specified actions. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setEmailSenderByLocationRequest"/>
         <output message="zeusns:setEmailSenderByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setLogFilePath">
         <documentation>
            Set the file this action logs to.
         </documentation>
         
         <input message="zeusns:setLogFilePathRequest"/>
         <output message="zeusns:setLogFilePathResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setLogFilePathByLocation">
         <documentation>
            Set the file this action logs to. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setLogFilePathByLocationRequest"/>
         <output message="zeusns:setLogFilePathByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSNMPAuthPassword">
         <documentation>
            Set the SNMP password for sending the Notify over SNMPv3. The actions specified must be of type 'trap'.
         </documentation>
         
         <input message="zeusns:setSNMPAuthPasswordRequest"/>
         <output message="zeusns:setSNMPAuthPasswordResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSNMPAuthPasswordByLocation">
         <documentation>
            Set the SNMP password for sending the Notify over SNMPv3. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setSNMPAuthPasswordByLocationRequest"/>
         <output message="zeusns:setSNMPAuthPasswordByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSNMPHashAlg">
         <documentation>
            Set the SNMP hash algorithm for sending the Notify over SNMPv3. Valid values are "md5" and "sha1". The actions specified must be of type 'trap'.
         </documentation>
         
         <input message="zeusns:setSNMPHashAlgRequest"/>
         <output message="zeusns:setSNMPHashAlgResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSNMPHashAlgByLocation">
         <documentation>
            Set the SNMP hash algorithm for sending the Notify over SNMPv3. Valid values are "md5" and "sha1". The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setSNMPHashAlgByLocationRequest"/>
         <output message="zeusns:setSNMPHashAlgByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSNMPPrivPassword">
         <documentation>
            Set the SNMP encryption key to encrpt SNMPv3 Notify messages. The actions specified must be of type 'trap'.
         </documentation>
         
         <input message="zeusns:setSNMPPrivPasswordRequest"/>
         <output message="zeusns:setSNMPPrivPasswordResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSNMPPrivPasswordByLocation">
         <documentation>
            Set the SNMP encryption key to encrpt SNMPv3 Notify messages. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setSNMPPrivPasswordByLocationRequest"/>
         <output message="zeusns:setSNMPPrivPasswordByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSNMPUsername">
         <documentation>
            Set the SNMP username for sending the Notify over SNMPv3. The actions specified must be of type 'trap'.
         </documentation>
         
         <input message="zeusns:setSNMPUsernameRequest"/>
         <output message="zeusns:setSNMPUsernameResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSNMPUsernameByLocation">
         <documentation>
            Set the SNMP username for sending the Notify over SNMPv3. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setSNMPUsernameByLocationRequest"/>
         <output message="zeusns:setSNMPUsernameByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSNMPVersion">
         <documentation>
            Set the SNMP version used to send the trap/notify. The actions specified must be of type 'trap'.
         </documentation>
         
         <input message="zeusns:setSNMPVersionRequest"/>
         <output message="zeusns:setSNMPVersionResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSNMPVersionByLocation">
         <documentation>
            Set the SNMP version used to send the trap/notify. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setSNMPVersionByLocationRequest"/>
         <output message="zeusns:setSNMPVersionByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSOAPAdditional">
         <documentation>
            Set the additional information to send with the SOAP alert call.
         </documentation>
         
         <input message="zeusns:setSOAPAdditionalRequest"/>
         <output message="zeusns:setSOAPAdditionalResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSOAPAdditionalByLocation">
         <documentation>
            Set the additional information to send with the SOAP alert call. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setSOAPAdditionalByLocationRequest"/>
         <output message="zeusns:setSOAPAdditionalByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSOAPAuthentication">
         <documentation>
            Sets the username and password to use to log in with HTTP basic authentication. The actions specified must be of type 'soap'.
         </documentation>
         
         <input message="zeusns:setSOAPAuthenticationRequest"/>
         <output message="zeusns:setSOAPAuthenticationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSOAPAuthenticationByLocation">
         <documentation>
            Sets the username and password to use to log in with HTTP basic authentication. The actions specified must be of type 'soap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setSOAPAuthenticationByLocationRequest"/>
         <output message="zeusns:setSOAPAuthenticationByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSOAPProxy">
         <documentation>
            Set the server the SOAP event call will be made to for each of the specified SOAP events.
         </documentation>
         
         <input message="zeusns:setSOAPProxyRequest"/>
         <output message="zeusns:setSOAPProxyResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSOAPProxyByLocation">
         <documentation>
            Set the server the SOAP event call will be made to for each of the specified SOAP events. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setSOAPProxyByLocationRequest"/>
         <output message="zeusns:setSOAPProxyByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setScriptProgram">
         <documentation>
            Set the program to run including its command line arguments. The actions specified must be of type 'program'.
         </documentation>
         
         <input message="zeusns:setScriptProgramRequest"/>
         <output message="zeusns:setScriptProgramResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSyslogHost">
         <documentation>
            Set the host to send syslog messages to (if empty, messages will be sent to localhost). The actions specified must be of type 'syslog'.
         </documentation>
         
         <input message="zeusns:setSyslogHostRequest"/>
         <output message="zeusns:setSyslogHostResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSyslogHostByLocation">
         <documentation>
            Set the host to send syslog messages to (if empty, messages will be sent to localhost). The actions specified must be of type 'syslog'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setSyslogHostByLocationRequest"/>
         <output message="zeusns:setSyslogHostByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSyslogMessageLenLimit">
         <documentation>
            Set syslog message length limit.
         </documentation>
         
         <input message="zeusns:setSyslogMessageLenLimitRequest"/>
         <output message="zeusns:setSyslogMessageLenLimitResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setSyslogMessageLenLimitByLocation">
         <documentation>
            Set syslog message length limit. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setSyslogMessageLenLimitByLocationRequest"/>
         <output message="zeusns:setSyslogMessageLenLimitByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setTimeout">
         <documentation>
            Set how long an action has to run, in seconds (set to 0 disable timing out).
         </documentation>
         
         <input message="zeusns:setTimeoutRequest"/>
         <output message="zeusns:setTimeoutResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setTimeoutByLocation">
         <documentation>
            Set how long an action has to run, in seconds (set to 0 disable timing out). This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setTimeoutByLocationRequest"/>
         <output message="zeusns:setTimeoutByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setTrapCommunity">
         <documentation>
            Set the SNMP community string for the SNMP trap. The actions specified must be of type 'trap'.
         </documentation>
         
         <input message="zeusns:setTrapCommunityRequest"/>
         <output message="zeusns:setTrapCommunityResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setTrapCommunityByLocation">
         <documentation>
            Set the SNMP community string for the SNMP trap. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setTrapCommunityByLocationRequest"/>
         <output message="zeusns:setTrapCommunityByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setTrapHost">
         <documentation>
            Set the hostname or IPv4 address and optional port number that should receive the SNMP trap. The actions specified must be of type 'trap'.
         </documentation>
         
         <input message="zeusns:setTrapHostRequest"/>
         <output message="zeusns:setTrapHostResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setTrapHostByLocation">
         <documentation>
            Set the hostname or IPv4 address and optional port number that should receive the SNMP trap. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setTrapHostByLocationRequest"/>
         <output message="zeusns:setTrapHostByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setVerbose">
         <documentation>
            Set if verbose logging is enabled for this action.
         </documentation>
         
         <input message="zeusns:setVerboseRequest"/>
         <output message="zeusns:setVerboseResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setVerboseByLocation">
         <documentation>
            Set if verbose logging is enabled for this action. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input message="zeusns:setVerboseByLocationRequest"/>
         <output message="zeusns:setVerboseByLocationResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="testAction">
         <documentation>
            Sends a test event to the named actions to confirm that they are working as expected.
         </documentation>
         
         <input message="zeusns:testActionRequest"/>
         <output message="zeusns:testActionResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="updateScriptArguments">
         <documentation>
            Allows arguments for the the specified script actions to be changed. The actions specified must be of type 'program'.
         </documentation>
         
         <input message="zeusns:updateScriptArgumentsRequest"/>
         <output message="zeusns:updateScriptArgumentsResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="uploadActionProgram">
         <documentation>
            Uploads an action program, overwriting the file if it already exists.
         </documentation>
         
         <input message="zeusns:uploadActionProgramRequest"/>
         <output message="zeusns:uploadActionProgramResponse"/>
         <fault name="InvalidObjectName" message="zeusns:InvalidObjectName"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
   </portType>
   
   <binding name="Alerting.ActionBinding" type="zeusns:Alerting.ActionPort">
      <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
      <operation name="addAction">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/addAction"/>
         <documentation>
            Add a action that can be run by an event.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectAlreadyExists">
            <soap:fault use="encoded" name="ObjectAlreadyExists" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidObjectName">
            <soap:fault use="encoded" name="InvalidObjectName" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="addScriptArguments">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/addScriptArguments"/>
         <documentation>
            Adds a set of arguments to the specified actions. The actions specified must be of type 'program'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="copyAction">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/copyAction"/>
         <documentation>
            Copy each of the named actions.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectAlreadyExists">
            <soap:fault use="encoded" name="ObjectAlreadyExists" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidObjectName">
            <soap:fault use="encoded" name="InvalidObjectName" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="deleteAction">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/deleteAction"/>
         <documentation>
            Deletes each of the named actions.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectInUse">
            <soap:fault use="encoded" name="ObjectInUse" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="deleteActionProgram">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/deleteActionProgram"/>
         <documentation>
            Delete the named action programs.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectInUse">
            <soap:fault use="encoded" name="ObjectInUse" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="downloadActionProgram">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/downloadActionProgram"/>
         <documentation>
            Download the named action program.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getActionNames">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getActionNames"/>
         <documentation>
            Get the names of all available actions.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
      </operation>
      
      <operation name="getActionNamesOfType">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getActionNamesOfType"/>
         <documentation>
            Get the names of all actions of the specified type.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
      </operation>
      
      <operation name="getActionProgramNames">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getActionProgramNames"/>
         <documentation>
            Get the names of all the uploaded action programs. These are the programs that can be executed by custom program actions.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
      </operation>
      
      <operation name="getActionType">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getActionType"/>
         <documentation>
            Returns the type of each of the named actions.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getEmailRecipients">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getEmailRecipients"/>
         <documentation>
            Get the address the alert emails are sent from.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getEmailRecipientsByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getEmailRecipientsByLocation"/>
         <documentation>
            Get the address the alert emails are sent from. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getEmailSMTPServer">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getEmailSMTPServer"/>
         <documentation>
            Get the SMTP server used to send alert emails for the specified actions.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getEmailSMTPServerByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getEmailSMTPServerByLocation"/>
         <documentation>
            Get the SMTP server used to send alert emails for the specified actions. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getEmailSender">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getEmailSender"/>
         <documentation>
            Get the specified email addresses to the recipient list for the specified actions.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getEmailSenderByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getEmailSenderByLocation"/>
         <documentation>
            Get the specified email addresses to the recipient list for the specified actions. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getLogFilePath">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getLogFilePath"/>
         <documentation>
            Get the file this action logs to.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getLogFilePathByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getLogFilePathByLocation"/>
         <documentation>
            Get the file this action logs to. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getSNMPHashAlg">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getSNMPHashAlg"/>
         <documentation>
            Get the SNMP hash algorithm for sending the Notify over SNMPv3. Valid values are "md5" and "sha1". The actions specified must be of type 'trap'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getSNMPHashAlgByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getSNMPHashAlgByLocation"/>
         <documentation>
            Get the SNMP hash algorithm for sending the Notify over SNMPv3. Valid values are "md5" and "sha1". The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getSNMPUsername">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getSNMPUsername"/>
         <documentation>
            Get the SNMP username for sending the Notify over SNMPv3. The actions specified must be of type 'trap'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getSNMPUsernameByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getSNMPUsernameByLocation"/>
         <documentation>
            Get the SNMP username for sending the Notify over SNMPv3. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getSNMPVersion">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getSNMPVersion"/>
         <documentation>
            Get the SNMP version used to send the trap/notify. The actions specified must be of type 'trap'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getSNMPVersionByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getSNMPVersionByLocation"/>
         <documentation>
            Get the SNMP version used to send the trap/notify. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getSOAPAdditional">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getSOAPAdditional"/>
         <documentation>
            Get the additional information to send with the SOAP alert call.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getSOAPAdditionalByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getSOAPAdditionalByLocation"/>
         <documentation>
            Get the additional information to send with the SOAP alert call. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getSOAPAuthentication">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getSOAPAuthentication"/>
         <documentation>
            Gets the username used to log in with HTTP basic authentication. The actions specified must be of type 'soap'. Note that the password field is always returned as an empty string.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getSOAPAuthenticationByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getSOAPAuthenticationByLocation"/>
         <documentation>
            Gets the username used to log in with HTTP basic authentication. The actions specified must be of type 'soap'. Note that the password field is always returned as an empty string. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getSOAPProxy">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getSOAPProxy"/>
         <documentation>
            Get the server the SOAP event call will be made to for each of the specified SOAP events.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getSOAPProxyByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getSOAPProxyByLocation"/>
         <documentation>
            Get the server the SOAP event call will be made to for each of the specified SOAP events. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getScriptArguments">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getScriptArguments"/>
         <documentation>
            Gets all arguments for the specified script actions. The actions specified must be of type 'program'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getScriptProgram">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getScriptProgram"/>
         <documentation>
            Get the program to run including its command line arguments. The actions specified must be of type 'program'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getSyslogHost">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getSyslogHost"/>
         <documentation>
            Get the host to send syslog messages to (if empty, messages will be sent to localhost). The actions specified must be of type 'syslog'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getSyslogHostByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getSyslogHostByLocation"/>
         <documentation>
            Get the host to send syslog messages to (if empty, messages will be sent to localhost). The actions specified must be of type 'syslog'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getSyslogMessageLenLimit">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getSyslogMessageLenLimit"/>
         <documentation>
            Get syslog message length limit.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getSyslogMessageLenLimitByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getSyslogMessageLenLimitByLocation"/>
         <documentation>
            Get syslog message length limit. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getTimeout">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getTimeout"/>
         <documentation>
            Get how long an action has to run, in seconds (set to 0 disable timing out).
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getTimeoutByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getTimeoutByLocation"/>
         <documentation>
            Get how long an action has to run, in seconds (set to 0 disable timing out). This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getTrapCommunity">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getTrapCommunity"/>
         <documentation>
            Get the SNMP community string for the SNMP trap. The actions specified must be of type 'trap'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getTrapCommunityByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getTrapCommunityByLocation"/>
         <documentation>
            Get the SNMP community string for the SNMP trap. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getTrapHost">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getTrapHost"/>
         <documentation>
            Get the hostname or IPv4 address and optional port number that should receive the SNMP trap. The actions specified must be of type 'trap'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getTrapHostByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getTrapHostByLocation"/>
         <documentation>
            Get the hostname or IPv4 address and optional port number that should receive the SNMP trap. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getVerbose">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getVerbose"/>
         <documentation>
            Get if verbose logging is enabled for this action.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getVerboseByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/getVerboseByLocation"/>
         <documentation>
            Get if verbose logging is enabled for this action. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="removeSOAPAuthentication">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/removeSOAPAuthentication"/>
         <documentation>
            Disables using HTTP basic authentication with the SOAP Call. The actions specified must be of type 'soap'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="removeSOAPAuthenticationByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/removeSOAPAuthenticationByLocation"/>
         <documentation>
            Disables using HTTP basic authentication with the SOAP Call. The actions specified must be of type 'soap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="removeScriptArguments">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/removeScriptArguments"/>
         <documentation>
            Removes a set of arguments from the specified script actions. The actions specified must be of type 'program'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="renameAction">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/renameAction"/>
         <documentation>
            Rename each of the named actions.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectAlreadyExists">
            <soap:fault use="encoded" name="ObjectAlreadyExists" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidObjectName">
            <soap:fault use="encoded" name="InvalidObjectName" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setEmailRecipients">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setEmailRecipients"/>
         <documentation>
            Set the address the alert emails are sent from.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setEmailRecipientsByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setEmailRecipientsByLocation"/>
         <documentation>
            Set the address the alert emails are sent from. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setEmailSMTPServer">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setEmailSMTPServer"/>
         <documentation>
            Set the SMTP server used to send alert emails for the specified actions.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setEmailSMTPServerByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setEmailSMTPServerByLocation"/>
         <documentation>
            Set the SMTP server used to send alert emails for the specified actions. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setEmailSender">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setEmailSender"/>
         <documentation>
            Set the specified email addresses to the recipient list for the specified actions.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setEmailSenderByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setEmailSenderByLocation"/>
         <documentation>
            Set the specified email addresses to the recipient list for the specified actions. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setLogFilePath">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setLogFilePath"/>
         <documentation>
            Set the file this action logs to.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setLogFilePathByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setLogFilePathByLocation"/>
         <documentation>
            Set the file this action logs to. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSNMPAuthPassword">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSNMPAuthPassword"/>
         <documentation>
            Set the SNMP password for sending the Notify over SNMPv3. The actions specified must be of type 'trap'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSNMPAuthPasswordByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSNMPAuthPasswordByLocation"/>
         <documentation>
            Set the SNMP password for sending the Notify over SNMPv3. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSNMPHashAlg">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSNMPHashAlg"/>
         <documentation>
            Set the SNMP hash algorithm for sending the Notify over SNMPv3. Valid values are "md5" and "sha1". The actions specified must be of type 'trap'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSNMPHashAlgByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSNMPHashAlgByLocation"/>
         <documentation>
            Set the SNMP hash algorithm for sending the Notify over SNMPv3. Valid values are "md5" and "sha1". The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSNMPPrivPassword">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSNMPPrivPassword"/>
         <documentation>
            Set the SNMP encryption key to encrpt SNMPv3 Notify messages. The actions specified must be of type 'trap'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSNMPPrivPasswordByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSNMPPrivPasswordByLocation"/>
         <documentation>
            Set the SNMP encryption key to encrpt SNMPv3 Notify messages. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSNMPUsername">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSNMPUsername"/>
         <documentation>
            Set the SNMP username for sending the Notify over SNMPv3. The actions specified must be of type 'trap'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSNMPUsernameByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSNMPUsernameByLocation"/>
         <documentation>
            Set the SNMP username for sending the Notify over SNMPv3. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSNMPVersion">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSNMPVersion"/>
         <documentation>
            Set the SNMP version used to send the trap/notify. The actions specified must be of type 'trap'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSNMPVersionByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSNMPVersionByLocation"/>
         <documentation>
            Set the SNMP version used to send the trap/notify. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSOAPAdditional">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSOAPAdditional"/>
         <documentation>
            Set the additional information to send with the SOAP alert call.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSOAPAdditionalByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSOAPAdditionalByLocation"/>
         <documentation>
            Set the additional information to send with the SOAP alert call. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSOAPAuthentication">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSOAPAuthentication"/>
         <documentation>
            Sets the username and password to use to log in with HTTP basic authentication. The actions specified must be of type 'soap'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSOAPAuthenticationByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSOAPAuthenticationByLocation"/>
         <documentation>
            Sets the username and password to use to log in with HTTP basic authentication. The actions specified must be of type 'soap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSOAPProxy">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSOAPProxy"/>
         <documentation>
            Set the server the SOAP event call will be made to for each of the specified SOAP events.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSOAPProxyByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSOAPProxyByLocation"/>
         <documentation>
            Set the server the SOAP event call will be made to for each of the specified SOAP events. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setScriptProgram">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setScriptProgram"/>
         <documentation>
            Set the program to run including its command line arguments. The actions specified must be of type 'program'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSyslogHost">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSyslogHost"/>
         <documentation>
            Set the host to send syslog messages to (if empty, messages will be sent to localhost). The actions specified must be of type 'syslog'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSyslogHostByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSyslogHostByLocation"/>
         <documentation>
            Set the host to send syslog messages to (if empty, messages will be sent to localhost). The actions specified must be of type 'syslog'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSyslogMessageLenLimit">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSyslogMessageLenLimit"/>
         <documentation>
            Set syslog message length limit.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSyslogMessageLenLimitByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setSyslogMessageLenLimitByLocation"/>
         <documentation>
            Set syslog message length limit. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setTimeout">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setTimeout"/>
         <documentation>
            Set how long an action has to run, in seconds (set to 0 disable timing out).
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setTimeoutByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setTimeoutByLocation"/>
         <documentation>
            Set how long an action has to run, in seconds (set to 0 disable timing out). This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setTrapCommunity">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setTrapCommunity"/>
         <documentation>
            Set the SNMP community string for the SNMP trap. The actions specified must be of type 'trap'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setTrapCommunityByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setTrapCommunityByLocation"/>
         <documentation>
            Set the SNMP community string for the SNMP trap. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setTrapHost">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setTrapHost"/>
         <documentation>
            Set the hostname or IPv4 address and optional port number that should receive the SNMP trap. The actions specified must be of type 'trap'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setTrapHostByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setTrapHostByLocation"/>
         <documentation>
            Set the hostname or IPv4 address and optional port number that should receive the SNMP trap. The actions specified must be of type 'trap'. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setVerbose">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setVerbose"/>
         <documentation>
            Set if verbose logging is enabled for this action.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setVerboseByLocation">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/setVerboseByLocation"/>
         <documentation>
            Set if verbose logging is enabled for this action. This is a location specific function, any action will operate on the specified location.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="testAction">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/testAction"/>
         <documentation>
            Sends a test event to the named actions to confirm that they are working as expected.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="updateScriptArguments">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/updateScriptArguments"/>
         <documentation>
            Allows arguments for the the specified script actions to be changed. The actions specified must be of type 'program'.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="uploadActionProgram">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Alerting/Action/uploadActionProgram"/>
         <documentation>
            Uploads an action program, overwriting the file if it already exists.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidObjectName">
            <soap:fault use="encoded" name="InvalidObjectName" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Alerting/Action/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
   </binding>
   
   <service name="Alerting.Action">
      <documentation>
         Alerting.Action is an interface that allows you to add actions that are run by event types.
      </documentation>
      
      <port name="Alerting.ActionPort" binding="zeusns:Alerting.ActionBinding">
         <soap:address location="https://admin_server:9090/soap"/>
      </port>
   </service>
   
</definitions>
