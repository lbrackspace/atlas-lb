<?xml version="1.0" ?>

<!--
    Copyright (c) 2005-2013 Zeus Technology. All rights reserved.

-->

<definitions name="TrafficIPGroups"
 targetNamespace="http://soap.zeus.com/zxtm/1.0/"
 xmlns:zeusns="http://soap.zeus.com/zxtm/1.0/"
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
 xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
 xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
 xmlns="http://schemas.xmlsoap.org/wsdl/">
   
   <types>
      <xsd:schema targetNamespace='http://soap.zeus.com/zxtm/1.0/'
       xmlns='http://www.w3.org/2001/XMLSchema'
       xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/'
       xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/'>
         
         <xsd:complexType name="StringArray">
           <xsd:complexContent>
             <xsd:restriction base='SOAP-ENC:Array'>
              <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:string[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="StringArrayArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType="zeusns:StringArray[]"/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="TrafficIPGroups.Details">
           <xsd:annotation>
             <xsd:documentation>This structure contains the basic details of a Traffic IP Group: the nodes, and the traffic managers that the Traffic IP group spans. It is used when creating a new Traffic IP Group.</xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="ipaddresses" type="zeusns:StringArray">
               <xsd:annotation>
                 <xsd:documentation>The IP addresses in the Traffic IP Group.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="machines" type="zeusns:StringArray">
               <xsd:annotation>
                 <xsd:documentation>The names of the traffic managers that will manage the IP Addresses.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="TrafficIPGroups.DetailsArray">
           <xsd:complexContent>
             <xsd:restriction base='SOAP-ENC:Array'>
              <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='zeusns:TrafficIPGroups.Details[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:simpleType name="TrafficIPGroups.IPDistributionMode">
            <xsd:restriction base="xsd:string">
               <xsd:enumeration value="singlehosted">
                  <xsd:annotation>
                     <xsd:documentation>Raise each address on a single machine (Single-Hosted mode)</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="multihosted">
                  <xsd:annotation>
                     <xsd:documentation>Raise each address on every machine in the group (Multi-Hosted mode) - IPv4 only</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="ec2elastic">
                  <xsd:annotation>
                     <xsd:documentation>Use an EC2-Classic Elastic IP address.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="ec2vpcelastic">
                  <xsd:annotation>
                     <xsd:documentation>Use an EC2-VPC Elastic IP address.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
            </xsd:restriction>
         </xsd:simpleType>
         
         <xsd:complexType name="TrafficIPGroups.IPDistributionModeArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType="zeusns:TrafficIPGroups.IPDistributionMode[]"/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="TrafficIPGroups.NetworkInterface">
           <xsd:annotation>
             <xsd:documentation>This structure displays the network interfaces of all machines in the cluster. 
             </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="hostname" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>The traffic manager in the cluster.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="interfaces" type="zeusns:StringArray">
               <xsd:annotation>
                 <xsd:documentation>The network interfaces configured in this traffic manager.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="TrafficIPGroups.NetworkInterfaceArray">
           <xsd:complexContent>
             <xsd:restriction base='SOAP-ENC:Array'>
              <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='zeusns:TrafficIPGroups.NetworkInterface[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="TrafficIPGroups.SubnetMapping">
           <xsd:annotation>
             <xsd:documentation>This structure contains mappings of network interface to CIDR subnets. These mappings are used to raise a TrafficIP on a desired interface.
             </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="interface" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>The interface on the system.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="subnets" type="zeusns:StringArray">
               <xsd:annotation>
                 <xsd:documentation>The subnets mappings for the interface.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="TrafficIPGroups.SubnetMappingArray">
           <xsd:complexContent>
             <xsd:restriction base='SOAP-ENC:Array'>
              <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='zeusns:TrafficIPGroups.SubnetMapping[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="TrafficIPGroups.SubnetMappingPerHost">
           <xsd:annotation>
             <xsd:documentation>This structure shows the traffic IP subnet mapping per host machine in the cluster.
             </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="hostname" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>The traffic manager in the cluster.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="subnetmappings" type="zeusns:TrafficIPGroups.SubnetMappingArray">
               <xsd:annotation>
                 <xsd:documentation>The subnets mappings for this traffic manager.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="TrafficIPGroups.SubnetMappingPerHostArray">
           <xsd:complexContent>
             <xsd:restriction base='SOAP-ENC:Array'>
              <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='zeusns:TrafficIPGroups.SubnetMappingPerHost[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="booleanArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:boolean[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="booleanArrayArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType="zeusns:booleanArray[]"/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         
         <xsd:complexType name="doubleArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:double[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="intArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:int[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="longArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:long[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="unsignedIntArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:unsignedInt[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="unsignedLongArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:unsignedLong[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="DeploymentError">
           <xsd:annotation>
            <xsd:documentation>
              The DeploymentError fault is raised when a configuration
              change causes errors when attempting to apply the configuration
              to a running traffic manager.
         
              It would be raised in cases such as failing to bind to
              a port when enabling a Virtual Server.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="key" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The configuration key that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="value" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The value that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="InvalidInput">
           <xsd:annotation>
            <xsd:documentation>
              The InvalidInput fault is raised when the input to a function is
              invalid, for example a number was out of range. This fault is also
              raised in cases such as VirtualServer.setPool() where the Pool
              doesn't exist
         
              The details in the fault contain the object, key and value
              that caused the fault. These might be blank if they are not relevant
              to the fault.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="key" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The configuration key that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="value" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The value that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="InvalidObjectName">
           <xsd:annotation>
            <xsd:documentation>
              The InvalidObjectName fault is raised when attempting to create
              a new object (e.g. via an add, rename or copy) and the name is
              invalid (e.g. it contains a '/').
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="InvalidOperation">
           <xsd:annotation>
            <xsd:documentation>
              The InvalidOperation fault is emitted when attempting an operation
              that doesn't make sense or is prohibited, for example deleting
              a built-in monitor, or attempting to rename an object twice in
              the same call. 
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="key" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The configuration key that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="value" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The value that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="ObjectAlreadyExists">
           <xsd:annotation>
            <xsd:documentation>
             The ObjectAlreadyExists fault is raised when attempting to create an
             object (such as a Virtual Server) that already exists. It will also
             be raised in cases such as renaming and copying objects.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="ObjectDoesNotExist">
           <xsd:annotation>
            <xsd:documentation>
             The ObjectDoesNotExist fault is raised when attempting to perform an
             operation on an object (such as Virtual Server) that doesn't exist.
         
             This fault will only be raised if the primary object in the call doesn't
             exist. For example if calling VirtualServer.setPool(), then
             this fault will be raised if the Virtual Server doesn't exist, but if
             the Pool doesn't exist then the "InvalidInput" fault will be raised.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault
                </xsd:documentation>
               </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="ObjectInUse">
           <xsd:annotation>
            <xsd:documentation>
             The ObjectInUse fault is raised when attempting to delete an object
             that is referenced by another object, for example deleting a Pool
             that is in use by a Virtual Server.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
      </xsd:schema>
   </types>
   
   <message name="addIPAddressesRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArrayArray" />
   </message>
   
   <message name="addIPAddressesResponse"></message>
   
   <message name="addPassiveMachineRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArrayArray" />
   </message>
   
   <message name="addPassiveMachineResponse"></message>
   
   <message name="addTrafficIPGroupRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="details" type="zeusns:TrafficIPGroups.DetailsArray" />
   </message>
   
   <message name="addTrafficIPGroupResponse"></message>
   
   <message name="addTrafficManagerRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArrayArray" />
   </message>
   
   <message name="addTrafficManagerResponse"></message>
   
   <message name="deleteSpecificSubnetMappingsRequest">
      <part name="mappings" type="zeusns:TrafficIPGroups.SubnetMappingPerHostArray" />
   </message>
   
   <message name="deleteSpecificSubnetMappingsResponse"></message>
   
   <message name="deleteSubnetMappingsRequest"></message>
   
   <message name="deleteSubnetMappingsResponse"></message>
   
   <message name="deleteTrafficIPGroupRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="deleteTrafficIPGroupResponse"></message>
   
   <message name="getAvailableTrafficManagersRequest"></message>
   
   <message name="getAvailableTrafficManagersResponse">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getEnabledRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getEnabledResponse">
      <part name="values" type="zeusns:booleanArray" />
   </message>
   
   <message name="getIPAddressesRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getIPAddressesResponse">
      <part name="values" type="zeusns:StringArrayArray" />
   </message>
   
   <message name="getIPDistributionModeRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getIPDistributionModeResponse">
      <part name="values" type="zeusns:TrafficIPGroups.IPDistributionModeArray" />
   </message>
   
   <message name="getKeepTogetherRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getKeepTogetherResponse">
      <part name="values" type="zeusns:booleanArray" />
   </message>
   
   <message name="getMulticastIPRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getMulticastIPResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getNetworkInterfacesRequest"></message>
   
   <message name="getNetworkInterfacesResponse">
      <part name="interfaces" type="zeusns:TrafficIPGroups.NetworkInterfaceArray" />
   </message>
   
   <message name="getNoteRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getNoteResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getPassiveMachineRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getPassiveMachineResponse">
      <part name="values" type="zeusns:StringArrayArray" />
   </message>
   
   <message name="getSubnetMappingsRequest">
      <part name="hostnames" type="zeusns:StringArray" />
   </message>
   
   <message name="getSubnetMappingsResponse">
      <part name="mappings" type="zeusns:TrafficIPGroups.SubnetMappingPerHostArray" />
   </message>
   
   <message name="getTrafficIPGroupNamesRequest"></message>
   
   <message name="getTrafficIPGroupNamesResponse">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getTrafficManagerRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getTrafficManagerResponse">
      <part name="values" type="zeusns:StringArrayArray" />
   </message>
   
   <message name="getUseClientSourcePortRequest">
      <part name="names" type="zeusns:StringArray" />
   </message>
   
   <message name="getUseClientSourcePortResponse">
      <part name="values" type="zeusns:booleanArray" />
   </message>
   
   <message name="removeIPAddressesRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArrayArray" />
   </message>
   
   <message name="removeIPAddressesResponse"></message>
   
   <message name="removePassiveMachineRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArrayArray" />
   </message>
   
   <message name="removePassiveMachineResponse"></message>
   
   <message name="removeTrafficManagerRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArrayArray" />
   </message>
   
   <message name="removeTrafficManagerResponse"></message>
   
   <message name="renameTrafficIPGroupRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="new_names" type="zeusns:StringArray" />
   </message>
   
   <message name="renameTrafficIPGroupResponse"></message>
   
   <message name="setEnabledRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:booleanArray" />
   </message>
   
   <message name="setEnabledResponse"></message>
   
   <message name="setIPAddressesRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArrayArray" />
   </message>
   
   <message name="setIPAddressesResponse"></message>
   
   <message name="setIPDistributionModeRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:TrafficIPGroups.IPDistributionModeArray" />
   </message>
   
   <message name="setIPDistributionModeResponse"></message>
   
   <message name="setKeepTogetherRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:booleanArray" />
   </message>
   
   <message name="setKeepTogetherResponse"></message>
   
   <message name="setMulticastIPRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setMulticastIPResponse"></message>
   
   <message name="setNoteRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setNoteResponse"></message>
   
   <message name="setPassiveMachineRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArrayArray" />
   </message>
   
   <message name="setPassiveMachineResponse"></message>
   
   <message name="setSubnetMappingsRequest">
      <part name="mappings" type="zeusns:TrafficIPGroups.SubnetMappingPerHostArray" />
   </message>
   
   <message name="setSubnetMappingsResponse"></message>
   
   <message name="setTrafficManagerRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArrayArray" />
   </message>
   
   <message name="setTrafficManagerResponse"></message>
   
   <message name="setUseClientSourcePortRequest">
      <part name="names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:booleanArray" />
   </message>
   
   <message name="setUseClientSourcePortResponse"></message>
   
   <message name="DeploymentError">
      <part name="parameters" type="zeusns:DeploymentError" />
   </message>
   
   <message name="InvalidInput">
      <part name="parameters" type="zeusns:InvalidInput" />
   </message>
   
   <message name="InvalidObjectName">
      <part name="parameters" type="zeusns:InvalidObjectName" />
   </message>
   
   <message name="InvalidOperation">
      <part name="parameters" type="zeusns:InvalidOperation" />
   </message>
   
   <message name="ObjectAlreadyExists">
      <part name="parameters" type="zeusns:ObjectAlreadyExists" />
   </message>
   
   <message name="ObjectDoesNotExist">
      <part name="parameters" type="zeusns:ObjectDoesNotExist" />
   </message>
   
   <message name="ObjectInUse">
      <part name="parameters" type="zeusns:ObjectInUse" />
   </message>
   
   <portType name="TrafficIPGroupsPort">
      <operation name="addIPAddresses">
         <documentation>
            Add new IP addresses to each of the named traffic IP groups.
         </documentation>
         
         <input message="zeusns:addIPAddressesRequest"/>
         <output message="zeusns:addIPAddressesResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="addPassiveMachine">
         <documentation>
            Add machines to the lists of passive machines, for each of the named traffic IP groups.
         </documentation>
         
         <input message="zeusns:addPassiveMachineRequest"/>
         <output message="zeusns:addPassiveMachineResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="addTrafficIPGroup">
         <documentation>
            Add the new named Traffic IP Groups, using the provided details.
         </documentation>
         
         <input message="zeusns:addTrafficIPGroupRequest"/>
         <output message="zeusns:addTrafficIPGroupResponse"/>
         <fault name="ObjectAlreadyExists" message="zeusns:ObjectAlreadyExists"/>
         <fault name="InvalidObjectName" message="zeusns:InvalidObjectName"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="addTrafficManager">
         <documentation>
            Add new traffic managers to each of the named traffic IP groups.
         </documentation>
         
         <input message="zeusns:addTrafficManagerRequest"/>
         <output message="zeusns:addTrafficManagerResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
      </operation>
      
      <operation name="deleteSpecificSubnetMappings">
         <documentation>
            Delete specified interface network mappings.
         </documentation>
         
         <input message="zeusns:deleteSpecificSubnetMappingsRequest"/>
         <output message="zeusns:deleteSpecificSubnetMappingsResponse"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
      </operation>
      
      <operation name="deleteSubnetMappings">
         <documentation>
            Delete all interface network mappings.
         </documentation>
         
         <input message="zeusns:deleteSubnetMappingsRequest"/>
         <output message="zeusns:deleteSubnetMappingsResponse"/>
      </operation>
      
      <operation name="deleteTrafficIPGroup">
         <documentation>
            Delete the named Traffic IP Groups.
         </documentation>
         
         <input message="zeusns:deleteTrafficIPGroupRequest"/>
         <output message="zeusns:deleteTrafficIPGroupResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="ObjectInUse" message="zeusns:ObjectInUse"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="getAvailableTrafficManagers">
         <documentation>
            Get the names of all of the Traffic Managers in the cluster.
         </documentation>
         
         <input message="zeusns:getAvailableTrafficManagersRequest"/>
         <output message="zeusns:getAvailableTrafficManagersResponse"/>
      </operation>
      
      <operation name="getEnabled">
         <documentation>
            Get whether this traffic IP group is enabled or not.
         </documentation>
         
         <input message="zeusns:getEnabledRequest"/>
         <output message="zeusns:getEnabledResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getIPAddresses">
         <documentation>
            Get the IP addresses that are managed by each of the named traffic IP groups.
         </documentation>
         
         <input message="zeusns:getIPAddressesRequest"/>
         <output message="zeusns:getIPAddressesResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getIPDistributionMode">
         <documentation>
            Get how traffic IPs will be distributed across the machines in the cluster. If "multihosted" mode is used, the multicast IP must be set first.
         </documentation>
         
         <input message="zeusns:getIPDistributionModeRequest"/>
         <output message="zeusns:getIPDistributionModeResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getKeepTogether">
         <documentation>
            Get the KeepTogether attribute for each of the named traffic IP groups.
         </documentation>
         
         <input message="zeusns:getKeepTogetherRequest"/>
         <output message="zeusns:getKeepTogetherResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getMulticastIP">
         <documentation>
            Get the multicast IP group that is used to share data across machines in the cluster. This setting is only used if the traffic IP is using 'multihosted' distribution mode.
         </documentation>
         
         <input message="zeusns:getMulticastIPRequest"/>
         <output message="zeusns:getMulticastIPResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getNetworkInterfaces">
         <documentation>
            Get a list of network interfaces for all machines in the cluster.
         </documentation>
         
         <input message="zeusns:getNetworkInterfacesRequest"/>
         <output message="zeusns:getNetworkInterfacesResponse"/>
      </operation>
      
      <operation name="getNote">
         <documentation>
            Get the note for each of the named traffic IP groups.
         </documentation>
         
         <input message="zeusns:getNoteRequest"/>
         <output message="zeusns:getNoteResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getPassiveMachine">
         <documentation>
            Get the lists of passive machines in each of the named traffic IP groups.
         </documentation>
         
         <input message="zeusns:getPassiveMachineRequest"/>
         <output message="zeusns:getPassiveMachineResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getSubnetMappings">
         <documentation>
            Get interface to CIDR subnet mappings.
         </documentation>
         
         <input message="zeusns:getSubnetMappingsRequest"/>
         <output message="zeusns:getSubnetMappingsResponse"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
      </operation>
      
      <operation name="getTrafficIPGroupNames">
         <documentation>
            Get the names of all of the configured Traffic IP Groups.
         </documentation>
         
         <input message="zeusns:getTrafficIPGroupNamesRequest"/>
         <output message="zeusns:getTrafficIPGroupNamesResponse"/>
      </operation>
      
      <operation name="getTrafficManager">
         <documentation>
            Get the traffic managers that manage the IP addresses in each of the named traffic IP groups.
         </documentation>
         
         <input message="zeusns:getTrafficManagerRequest"/>
         <output message="zeusns:getTrafficManagerResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getUseClientSourcePort">
         <documentation>
            Get whether the source port is taken into account when deciding which traffic manager should handle the request. This setting is only used if the Traffic IP is using 'multihosted' distribution mode.
         </documentation>
         
         <input message="zeusns:getUseClientSourcePortRequest"/>
         <output message="zeusns:getUseClientSourcePortResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="removeIPAddresses">
         <documentation>
            Remove the named IP addresses from each of the named traffic IP groups.
         </documentation>
         
         <input message="zeusns:removeIPAddressesRequest"/>
         <output message="zeusns:removeIPAddressesResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="removePassiveMachine">
         <documentation>
            Remove the named machines from the list of passive machines, for each of the named traffic IP groups.
         </documentation>
         
         <input message="zeusns:removePassiveMachineRequest"/>
         <output message="zeusns:removePassiveMachineResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
      </operation>
      
      <operation name="removeTrafficManager">
         <documentation>
            Remove the named traffic managers from each named traffic IP group.
         </documentation>
         
         <input message="zeusns:removeTrafficManagerRequest"/>
         <output message="zeusns:removeTrafficManagerResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="renameTrafficIPGroup">
         <documentation>
            Rename each of the named Traffic IP Groups.
         </documentation>
         
         <input message="zeusns:renameTrafficIPGroupRequest"/>
         <output message="zeusns:renameTrafficIPGroupResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="setEnabled">
         <documentation>
            Set whether this traffic IP group is enabled or not.
         </documentation>
         
         <input message="zeusns:setEnabledRequest"/>
         <output message="zeusns:setEnabledResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
      </operation>
      
      <operation name="setIPAddresses">
         <documentation>
            Set the IP addresses that are managed by each of the named traffic IP groups.
         </documentation>
         
         <input message="zeusns:setIPAddressesRequest"/>
         <output message="zeusns:setIPAddressesResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="setIPDistributionMode">
         <documentation>
            Set how traffic IPs will be distributed across the machines in the cluster. If "multihosted" mode is used, the multicast IP must be set first.
         </documentation>
         
         <input message="zeusns:setIPDistributionModeRequest"/>
         <output message="zeusns:setIPDistributionModeResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setKeepTogether">
         <documentation>
            Set the KeepTogether attribute for each of the named traffic IP groups.
         </documentation>
         
         <input message="zeusns:setKeepTogetherRequest"/>
         <output message="zeusns:setKeepTogetherResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
      </operation>
      
      <operation name="setMulticastIP">
         <documentation>
            Set the multicast IP group that is used to share data across machines in the cluster. This setting is only used if the traffic IP is using 'multihosted' distribution mode.
         </documentation>
         
         <input message="zeusns:setMulticastIPRequest"/>
         <output message="zeusns:setMulticastIPResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setNote">
         <documentation>
            Set the note for each of the named traffic IP groups.
         </documentation>
         
         <input message="zeusns:setNoteRequest"/>
         <output message="zeusns:setNoteResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="setPassiveMachine">
         <documentation>
            Set the lists of passive machines in each of the named traffic IP groups.
         </documentation>
         
         <input message="zeusns:setPassiveMachineRequest"/>
         <output message="zeusns:setPassiveMachineResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="setSubnetMappings">
         <documentation>
            Update interface to CIDR subnet mappings.
         </documentation>
         
         <input message="zeusns:setSubnetMappingsRequest"/>
         <output message="zeusns:setSubnetMappingsResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setTrafficManager">
         <documentation>
            Set the traffic managers that manage the IP addresses in each of the named traffic IP groups.
         </documentation>
         
         <input message="zeusns:setTrafficManagerRequest"/>
         <output message="zeusns:setTrafficManagerResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="setUseClientSourcePort">
         <documentation>
            Set whether the source port is taken into account when deciding which traffic manager should handle the request. This setting is only used if the Traffic IP is using 'multihosted' distribution mode.
         </documentation>
         
         <input message="zeusns:setUseClientSourcePortRequest"/>
         <output message="zeusns:setUseClientSourcePortResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
   </portType>
   
   <binding name="TrafficIPGroupsBinding" type="zeusns:TrafficIPGroupsPort">
      <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
      <operation name="addIPAddresses">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/addIPAddresses"/>
         <documentation>
            Add new IP addresses to each of the named traffic IP groups.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="addPassiveMachine">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/addPassiveMachine"/>
         <documentation>
            Add machines to the lists of passive machines, for each of the named traffic IP groups.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="addTrafficIPGroup">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/addTrafficIPGroup"/>
         <documentation>
            Add the new named Traffic IP Groups, using the provided details.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectAlreadyExists">
            <soap:fault use="encoded" name="ObjectAlreadyExists" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidObjectName">
            <soap:fault use="encoded" name="InvalidObjectName" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="addTrafficManager">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/addTrafficManager"/>
         <documentation>
            Add new traffic managers to each of the named traffic IP groups.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="deleteSpecificSubnetMappings">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/deleteSpecificSubnetMappings"/>
         <documentation>
            Delete specified interface network mappings.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="deleteSubnetMappings">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/deleteSubnetMappings"/>
         <documentation>
            Delete all interface network mappings.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
      </operation>
      
      <operation name="deleteTrafficIPGroup">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/deleteTrafficIPGroup"/>
         <documentation>
            Delete the named Traffic IP Groups.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectInUse">
            <soap:fault use="encoded" name="ObjectInUse" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getAvailableTrafficManagers">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/getAvailableTrafficManagers"/>
         <documentation>
            Get the names of all of the Traffic Managers in the cluster.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
      </operation>
      
      <operation name="getEnabled">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/getEnabled"/>
         <documentation>
            Get whether this traffic IP group is enabled or not.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getIPAddresses">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/getIPAddresses"/>
         <documentation>
            Get the IP addresses that are managed by each of the named traffic IP groups.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getIPDistributionMode">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/getIPDistributionMode"/>
         <documentation>
            Get how traffic IPs will be distributed across the machines in the cluster. If "multihosted" mode is used, the multicast IP must be set first.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getKeepTogether">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/getKeepTogether"/>
         <documentation>
            Get the KeepTogether attribute for each of the named traffic IP groups.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getMulticastIP">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/getMulticastIP"/>
         <documentation>
            Get the multicast IP group that is used to share data across machines in the cluster. This setting is only used if the traffic IP is using 'multihosted' distribution mode.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getNetworkInterfaces">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/getNetworkInterfaces"/>
         <documentation>
            Get a list of network interfaces for all machines in the cluster.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
      </operation>
      
      <operation name="getNote">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/getNote"/>
         <documentation>
            Get the note for each of the named traffic IP groups.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getPassiveMachine">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/getPassiveMachine"/>
         <documentation>
            Get the lists of passive machines in each of the named traffic IP groups.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getSubnetMappings">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/getSubnetMappings"/>
         <documentation>
            Get interface to CIDR subnet mappings.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getTrafficIPGroupNames">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/getTrafficIPGroupNames"/>
         <documentation>
            Get the names of all of the configured Traffic IP Groups.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
      </operation>
      
      <operation name="getTrafficManager">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/getTrafficManager"/>
         <documentation>
            Get the traffic managers that manage the IP addresses in each of the named traffic IP groups.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getUseClientSourcePort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/getUseClientSourcePort"/>
         <documentation>
            Get whether the source port is taken into account when deciding which traffic manager should handle the request. This setting is only used if the Traffic IP is using 'multihosted' distribution mode.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="removeIPAddresses">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/removeIPAddresses"/>
         <documentation>
            Remove the named IP addresses from each of the named traffic IP groups.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="removePassiveMachine">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/removePassiveMachine"/>
         <documentation>
            Remove the named machines from the list of passive machines, for each of the named traffic IP groups.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="removeTrafficManager">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/removeTrafficManager"/>
         <documentation>
            Remove the named traffic managers from each named traffic IP group.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="renameTrafficIPGroup">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/renameTrafficIPGroup"/>
         <documentation>
            Rename each of the named Traffic IP Groups.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setEnabled">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/setEnabled"/>
         <documentation>
            Set whether this traffic IP group is enabled or not.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setIPAddresses">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/setIPAddresses"/>
         <documentation>
            Set the IP addresses that are managed by each of the named traffic IP groups.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setIPDistributionMode">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/setIPDistributionMode"/>
         <documentation>
            Set how traffic IPs will be distributed across the machines in the cluster. If "multihosted" mode is used, the multicast IP must be set first.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setKeepTogether">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/setKeepTogether"/>
         <documentation>
            Set the KeepTogether attribute for each of the named traffic IP groups.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setMulticastIP">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/setMulticastIP"/>
         <documentation>
            Set the multicast IP group that is used to share data across machines in the cluster. This setting is only used if the traffic IP is using 'multihosted' distribution mode.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setNote">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/setNote"/>
         <documentation>
            Set the note for each of the named traffic IP groups.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setPassiveMachine">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/setPassiveMachine"/>
         <documentation>
            Set the lists of passive machines in each of the named traffic IP groups.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setSubnetMappings">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/setSubnetMappings"/>
         <documentation>
            Update interface to CIDR subnet mappings.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setTrafficManager">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/setTrafficManager"/>
         <documentation>
            Set the traffic managers that manage the IP addresses in each of the named traffic IP groups.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setUseClientSourcePort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/setUseClientSourcePort"/>
         <documentation>
            Set whether the source port is taken into account when deciding which traffic manager should handle the request. This setting is only used if the Traffic IP is using 'multihosted' distribution mode.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/TrafficIPGroups/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
   </binding>
   
   <service name="TrafficIPGroups">
      <documentation>
         The TrafficIPGroup interface allows management of Traffic IP Group objects. Using this interface, you can create, delete and rename Traffic IP Group objects, and manage their configuration.
      </documentation>
      
      <port name="TrafficIPGroupsPort" binding="zeusns:TrafficIPGroupsBinding">
         <soap:address location="https://admin_server:9090/soap"/>
      </port>
   </service>
   
</definitions>
