<?xml version="1.0" ?>

<!--
    Copyright (c) 2005-2013 Zeus Technology. All rights reserved.

-->

<definitions name="AFM"
 targetNamespace="http://soap.zeus.com/zxtm/1.0/"
 xmlns:zeusns="http://soap.zeus.com/zxtm/1.0/"
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
 xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
 xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
 xmlns="http://schemas.xmlsoap.org/wsdl/">
   
   <types>
      <xsd:schema targetNamespace='http://soap.zeus.com/zxtm/1.0/'
       xmlns='http://www.w3.org/2001/XMLSchema'
       xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/'
       xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/'>
         
         <xsd:complexType name="AFM.BasicStatus">
          <xsd:annotation>
           <xsd:documentation>
            Contains basic Stingray Application Firewall runtime status information.
           </xsd:documentation>
          </xsd:annotation>
          <xsd:all>
         
           <xsd:element name="installed" type="xsd:string">
            <xsd:annotation>
             <xsd:documentation>Whether or not Stingray Application Firewall is installed.</xsd:documentation>
            </xsd:annotation>
           </xsd:element>
         
           <xsd:element name="running" type="xsd:string">
            <xsd:annotation>
             <xsd:documentation>Whether or not Stingray Application Firewall is running.</xsd:documentation>
            </xsd:annotation>
           </xsd:element>
         
           <xsd:element name="version" type="xsd:string">
            <xsd:annotation>
             <xsd:documentation>The version of Stingray Application Firewall installed.</xsd:documentation>
            </xsd:annotation>
           </xsd:element>
         
           <xsd:element name="clustered" type="xsd:string">
            <xsd:annotation>
             <xsd:documentation>
              Whether or not the machine is clustered with the local Stingray Application Firewall.
             </xsd:documentation>
            </xsd:annotation>
           </xsd:element>
         
          </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="AFM.ClusterState">
          <xsd:complexContent>
           <xsd:restriction base='SOAP-ENC:Array'>
            <xsd:attribute ref='SOAP-ENC:arrayType'
               wsdl:arrayType='zeusns:AFM.State[]'/>
           </xsd:restriction>
          </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="AFM.ClusterStatus">
          <xsd:annotation>
           <xsd:documentation>
            Contains a Stingray Application Firewall state message.
           </xsd:documentation>
          </xsd:annotation>
          <xsd:all>
         
           <xsd:element name="member" type="xsd:string">
            <xsd:annotation>
             <xsd:documentation>
              Cluster member this status is for.
             </xsd:documentation>
            </xsd:annotation>
           </xsd:element>
         
           <xsd:element name="status" type="xsd:string">
            <xsd:annotation>
             <xsd:documentation>
              Status of the cluster member.
             </xsd:documentation>
            </xsd:annotation>
           </xsd:element>
         
          </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="AFM.ClusterStatusArray">
          <xsd:complexContent>
           <xsd:restriction base='SOAP-ENC:Array'>
            <xsd:attribute ref='SOAP-ENC:arrayType'
               wsdl:arrayType='zeusns:AFM.ClusterStatus[]'/>
           </xsd:restriction>
          </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="AFM.State">
          <xsd:annotation>
           <xsd:documentation>
            Contains status information about a Stingray Application Firewall installation.
           </xsd:documentation>
          </xsd:annotation>
          <xsd:all>
         
           <xsd:element name="machine" type="xsd:string">
            <xsd:annotation>
             <xsd:documentation>
              Name of the machine this information is from.
             </xsd:documentation>
            </xsd:annotation>
           </xsd:element>
         
           <xsd:element name="basicstatus" type="zeusns:AFM.BasicStatus">
            <xsd:annotation>
             <xsd:documentation>
              Describes the basic runtime status of Stingray Application Firewall on a machine.
             </xsd:documentation>
            </xsd:annotation>
           </xsd:element>
         
           <xsd:element name="messages" type="zeusns:AFM.StateMessageArray">
            <xsd:annotation>
             <xsd:documentation>
              State messages from the Stingray Application Firewall on the machine.
             </xsd:documentation>
            </xsd:annotation>
           </xsd:element>
         
           <xsd:element name="cluster" type="zeusns:AFM.ClusterStatusArray">
            <xsd:annotation>
             <xsd:documentation>
               Statuses for all Stingray Application Firewall instances in the cluster.
             </xsd:documentation>
            </xsd:annotation>
           </xsd:element>
         
           <xsd:element name="errors" type="zeusns:StringArray">
            <xsd:annotation>
             <xsd:documentation>
              Strings describing any general errors relating to Stingray Application Firewall.
             </xsd:documentation>
            </xsd:annotation>
           </xsd:element>
         
          </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="AFM.StateMessage">
          <xsd:annotation>
           <xsd:documentation>
            Contains a Stingray Application Firewall state message.
           </xsd:documentation>
          </xsd:annotation>
          <xsd:all>
         
           <xsd:element name="state" type="xsd:string">
            <xsd:annotation>
             <xsd:documentation>
              State for this message, either OK or ERROR.
             </xsd:documentation>
            </xsd:annotation>
           </xsd:element>
         
           <xsd:element name="message" type="xsd:string">
            <xsd:annotation>
             <xsd:documentation>
              Message describing the reason for the state.
             </xsd:documentation>
            </xsd:annotation>
           </xsd:element>
         
          </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="AFM.StateMessageArray">
          <xsd:complexContent>
           <xsd:restriction base='SOAP-ENC:Array'>
            <xsd:attribute ref='SOAP-ENC:arrayType'
               wsdl:arrayType='zeusns:AFM.StateMessage[]'/>
           </xsd:restriction>
          </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="StringArray">
           <xsd:complexContent>
             <xsd:restriction base='SOAP-ENC:Array'>
              <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:string[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="StringArrayArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType="zeusns:StringArray[]"/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="booleanArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:boolean[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="booleanArrayArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType="zeusns:booleanArray[]"/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         
         <xsd:complexType name="doubleArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:double[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="intArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:int[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="longArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:long[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="unsignedIntArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:unsignedInt[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="unsignedLongArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:unsignedLong[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="InvalidInput">
           <xsd:annotation>
            <xsd:documentation>
              The InvalidInput fault is raised when the input to a function is
              invalid, for example a number was out of range. This fault is also
              raised in cases such as VirtualServer.setPool() where the Pool
              doesn't exist
         
              The details in the fault contain the object, key and value
              that caused the fault. These might be blank if they are not relevant
              to the fault.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="key" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The configuration key that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="value" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The value that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="InvalidOperation">
           <xsd:annotation>
            <xsd:documentation>
              The InvalidOperation fault is emitted when attempting an operation
              that doesn't make sense or is prohibited, for example deleting
              a built-in monitor, or attempting to rename an object twice in
              the same call. 
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="key" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The configuration key that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="value" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The value that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="LicenseError">
           <xsd:annotation>
            <xsd:documentation>
              The LicenseError fault is emitted when attempting to use functionality
              that is disabled by the license key.
         
              You will need to contact your support provider to get a new license
              key with the required functionality. There may be a charge for this.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="feature" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The license key feature that was missing
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
      </xsd:schema>
   </types>
   
   <message name="disableRequest"></message>
   
   <message name="disableResponse"></message>
   
   <message name="enableRequest"></message>
   
   <message name="enableResponse"></message>
   
   <message name="getAdminInternalRESTPortRequest"></message>
   
   <message name="getAdminInternalRESTPortResponse">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="getAdminMasterPortRequest"></message>
   
   <message name="getAdminMasterPortResponse">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="getAdminServerPortRequest"></message>
   
   <message name="getAdminServerPortResponse">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="getAdminSlavePortRequest"></message>
   
   <message name="getAdminSlavePortResponse">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="getClusterStateRequest"></message>
   
   <message name="getClusterStateResponse">
      <part name="state" type="zeusns:AFM.ClusterState" />
   </message>
   
   <message name="getDeciderBasePortRequest"></message>
   
   <message name="getDeciderBasePortResponse">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="getInternalDeciderBasePortRequest"></message>
   
   <message name="getInternalDeciderBasePortResponse">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="getNumberOfDecidersRequest"></message>
   
   <message name="getNumberOfDecidersResponse">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="getUpdateExternControlCenterPortRequest"></message>
   
   <message name="getUpdateExternControlCenterPortResponse">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="getUpdateGUIBackendPortRequest"></message>
   
   <message name="getUpdateGUIBackendPortResponse">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="getUpdateGUIServerPortRequest"></message>
   
   <message name="getUpdateGUIServerPortResponse">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="getUpdaterPortRequest"></message>
   
   <message name="getUpdaterPortResponse">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="getVersionRequest"></message>
   
   <message name="getVersionResponse">
      <part name="version" type="xsd:string" />
   </message>
   
   <message name="setAdminInternalRESTPortRequest">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="setAdminInternalRESTPortResponse"></message>
   
   <message name="setAdminMasterPortRequest">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="setAdminMasterPortResponse"></message>
   
   <message name="setAdminServerPortRequest">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="setAdminServerPortResponse"></message>
   
   <message name="setAdminSlavePortRequest">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="setAdminSlavePortResponse"></message>
   
   <message name="setDeciderBasePortRequest">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="setDeciderBasePortResponse"></message>
   
   <message name="setInternalDeciderBasePortRequest">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="setInternalDeciderBasePortResponse"></message>
   
   <message name="setNumberOfDecidersRequest">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="setNumberOfDecidersResponse"></message>
   
   <message name="setUpdateExternControlCenterPortRequest">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="setUpdateExternControlCenterPortResponse"></message>
   
   <message name="setUpdateGUIBackendPortRequest">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="setUpdateGUIBackendPortResponse"></message>
   
   <message name="setUpdateGUIServerPortRequest">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="setUpdateGUIServerPortResponse"></message>
   
   <message name="setUpdaterPortRequest">
      <part name="value" type="xsd:unsignedInt" />
   </message>
   
   <message name="setUpdaterPortResponse"></message>
   
   <message name="uninstallRequest"></message>
   
   <message name="uninstallResponse"></message>
   
   <message name="InvalidInput">
      <part name="parameters" type="zeusns:InvalidInput" />
   </message>
   
   <message name="InvalidOperation">
      <part name="parameters" type="zeusns:InvalidOperation" />
   </message>
   
   <message name="LicenseError">
      <part name="parameters" type="zeusns:LicenseError" />
   </message>
   
   <portType name="AFMPort">
      <operation name="disable">
         <documentation>
            Disables the Stingray Application Firewall on the traffic manager.
         </documentation>
         
         <input message="zeusns:disableRequest"/>
         <output message="zeusns:disableResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="enable">
         <documentation>
            Enables the Stingray Application Firewall on the traffic manager.
         </documentation>
         
         <input message="zeusns:enableRequest"/>
         <output message="zeusns:enableResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="LicenseError" message="zeusns:LicenseError"/>
      </operation>
      
      <operation name="getAdminInternalRESTPort">
         <documentation>
            Get the Application Firewall Internal REST API port, this port should not be accessed directly.
         </documentation>
         
         <input message="zeusns:getAdminInternalRESTPortRequest"/>
         <output message="zeusns:getAdminInternalRESTPortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="getAdminMasterPort">
         <documentation>
            Get the Application Firewall XML Master port, this port is used on all IP addresses.
         </documentation>
         
         <input message="zeusns:getAdminMasterPortRequest"/>
         <output message="zeusns:getAdminMasterPortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="getAdminServerPort">
         <documentation>
            Get the Application Firewall Administration server port, this port is only open on localhost.  For a change to this setting to take effect the Stingray administration server must be restarted on all cluster members.
         </documentation>
         
         <input message="zeusns:getAdminServerPortRequest"/>
         <output message="zeusns:getAdminServerPortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="getAdminSlavePort">
         <documentation>
            Get the Application Firewall XML Slave port, this port is used on all IP addresses.
         </documentation>
         
         <input message="zeusns:getAdminSlavePortRequest"/>
         <output message="zeusns:getAdminSlavePortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="getClusterState">
         <documentation>
            Get state data for the Stingray Application Firewall across all machines in the cluster.
         </documentation>
         
         <input message="zeusns:getClusterStateRequest"/>
         <output message="zeusns:getClusterStateResponse"/>
      </operation>
      
      <operation name="getDeciderBasePort">
         <documentation>
            Get the Application Firewall base decider port.  This port, plus one port per decider process above this port, will be used for the Application Firewall deciders. For example, if set to 8100 then ports 8100, 8101, and 8102 will be used.
         </documentation>
         
         <input message="zeusns:getDeciderBasePortRequest"/>
         <output message="zeusns:getDeciderBasePortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="getInternalDeciderBasePort">
         <documentation>
            Get the Application Firewall internal decider communication base port. The Application Firewall requires ports for internal communication, these ports are bound to localhost (127.0.0.1) only.  This sets the base for these communication ports, when the Application Firewall is started it will start at this port and work its way up taking available ports until it has enough ports.
         </documentation>
         
         <input message="zeusns:getInternalDeciderBasePortRequest"/>
         <output message="zeusns:getInternalDeciderBasePortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="getNumberOfDeciders">
         <documentation>
            Get the number of Application Firewall decider processes to run.
         </documentation>
         
         <input message="zeusns:getNumberOfDecidersRequest"/>
         <output message="zeusns:getNumberOfDecidersResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="getUpdateExternControlCenterPort">
         <documentation>
            Get the Application Firewall Updater External Control Center port, this port is used on all IP addresses.
         </documentation>
         
         <input message="zeusns:getUpdateExternControlCenterPortRequest"/>
         <output message="zeusns:getUpdateExternControlCenterPortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="getUpdateGUIBackendPort">
         <documentation>
            Get the Application Firewall Updater GUI Backend port, this port is used on all IP addresses.
         </documentation>
         
         <input message="zeusns:getUpdateGUIBackendPortRequest"/>
         <output message="zeusns:getUpdateGUIBackendPortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="getUpdateGUIServerPort">
         <documentation>
            Get the Application Firewall Updater GUI Server port, this port is used on all IP addresses.
         </documentation>
         
         <input message="zeusns:getUpdateGUIServerPortRequest"/>
         <output message="zeusns:getUpdateGUIServerPortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="getUpdaterPort">
         <documentation>
            Get the Application Firewall Updater Slave port, this port is used on all IP addresses.
         </documentation>
         
         <input message="zeusns:getUpdaterPortRequest"/>
         <output message="zeusns:getUpdaterPortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
      
      <operation name="getVersion">
         <documentation>
            Get the version of the Stingray Application Firewall installed on the traffic manager.  Returns an empty string if Stingray Application Firewall is not installed.
         </documentation>
         
         <input message="zeusns:getVersionRequest"/>
         <output message="zeusns:getVersionResponse"/>
      </operation>
      
      <operation name="setAdminInternalRESTPort">
         <documentation>
            Set the Application Firewall Internal REST API port, this port should not be accessed directly.
         </documentation>
         
         <input message="zeusns:setAdminInternalRESTPortRequest"/>
         <output message="zeusns:setAdminInternalRESTPortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
      </operation>
      
      <operation name="setAdminMasterPort">
         <documentation>
            Set the Application Firewall XML Master port, this port is used on all IP addresses.
         </documentation>
         
         <input message="zeusns:setAdminMasterPortRequest"/>
         <output message="zeusns:setAdminMasterPortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
      </operation>
      
      <operation name="setAdminServerPort">
         <documentation>
            Set the Application Firewall Administration server port, this port is only open on localhost.  For a change to this setting to take effect the Stingray administration server must be restarted on all cluster members.
         </documentation>
         
         <input message="zeusns:setAdminServerPortRequest"/>
         <output message="zeusns:setAdminServerPortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
      </operation>
      
      <operation name="setAdminSlavePort">
         <documentation>
            Set the Application Firewall XML Slave port, this port is used on all IP addresses.
         </documentation>
         
         <input message="zeusns:setAdminSlavePortRequest"/>
         <output message="zeusns:setAdminSlavePortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
      </operation>
      
      <operation name="setDeciderBasePort">
         <documentation>
            Set the Application Firewall base decider port.  This port, plus one port per decider process above this port, will be used for the Application Firewall deciders. For example, if set to 8100 then ports 8100, 8101, and 8102 will be used.
         </documentation>
         
         <input message="zeusns:setDeciderBasePortRequest"/>
         <output message="zeusns:setDeciderBasePortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
      </operation>
      
      <operation name="setInternalDeciderBasePort">
         <documentation>
            Set the Application Firewall internal decider communication base port. The Application Firewall requires ports for internal communication, these ports are bound to localhost (127.0.0.1) only.  This sets the base for these communication ports, when the Application Firewall is started it will start at this port and work its way up taking available ports until it has enough ports.
         </documentation>
         
         <input message="zeusns:setInternalDeciderBasePortRequest"/>
         <output message="zeusns:setInternalDeciderBasePortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
      </operation>
      
      <operation name="setNumberOfDeciders">
         <documentation>
            Set the number of Application Firewall decider processes to run.
         </documentation>
         
         <input message="zeusns:setNumberOfDecidersRequest"/>
         <output message="zeusns:setNumberOfDecidersResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
      </operation>
      
      <operation name="setUpdateExternControlCenterPort">
         <documentation>
            Set the Application Firewall Updater External Control Center port, this port is used on all IP addresses.
         </documentation>
         
         <input message="zeusns:setUpdateExternControlCenterPortRequest"/>
         <output message="zeusns:setUpdateExternControlCenterPortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
      </operation>
      
      <operation name="setUpdateGUIBackendPort">
         <documentation>
            Set the Application Firewall Updater GUI Backend port, this port is used on all IP addresses.
         </documentation>
         
         <input message="zeusns:setUpdateGUIBackendPortRequest"/>
         <output message="zeusns:setUpdateGUIBackendPortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
      </operation>
      
      <operation name="setUpdateGUIServerPort">
         <documentation>
            Set the Application Firewall Updater GUI Server port, this port is used on all IP addresses.
         </documentation>
         
         <input message="zeusns:setUpdateGUIServerPortRequest"/>
         <output message="zeusns:setUpdateGUIServerPortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
      </operation>
      
      <operation name="setUpdaterPort">
         <documentation>
            Set the Application Firewall Updater Slave port, this port is used on all IP addresses.
         </documentation>
         
         <input message="zeusns:setUpdaterPortRequest"/>
         <output message="zeusns:setUpdaterPortResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
      </operation>
      
      <operation name="uninstall">
         <documentation>
            Uninstalls the Stingray Application Firewall on the traffic manager.
         </documentation>
         
         <input message="zeusns:uninstallRequest"/>
         <output message="zeusns:uninstallResponse"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
      </operation>
   </portType>
   
   <binding name="AFMBinding" type="zeusns:AFMPort">
      <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
      <operation name="disable">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/disable"/>
         <documentation>
            Disables the Stingray Application Firewall on the traffic manager.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="enable">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/enable"/>
         <documentation>
            Enables the Stingray Application Firewall on the traffic manager.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="LicenseError">
            <soap:fault use="encoded" name="LicenseError" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getAdminInternalRESTPort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/getAdminInternalRESTPort"/>
         <documentation>
            Get the Application Firewall Internal REST API port, this port should not be accessed directly.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getAdminMasterPort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/getAdminMasterPort"/>
         <documentation>
            Get the Application Firewall XML Master port, this port is used on all IP addresses.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getAdminServerPort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/getAdminServerPort"/>
         <documentation>
            Get the Application Firewall Administration server port, this port is only open on localhost.  For a change to this setting to take effect the Stingray administration server must be restarted on all cluster members.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getAdminSlavePort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/getAdminSlavePort"/>
         <documentation>
            Get the Application Firewall XML Slave port, this port is used on all IP addresses.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getClusterState">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/getClusterState"/>
         <documentation>
            Get state data for the Stingray Application Firewall across all machines in the cluster.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
      </operation>
      
      <operation name="getDeciderBasePort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/getDeciderBasePort"/>
         <documentation>
            Get the Application Firewall base decider port.  This port, plus one port per decider process above this port, will be used for the Application Firewall deciders. For example, if set to 8100 then ports 8100, 8101, and 8102 will be used.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getInternalDeciderBasePort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/getInternalDeciderBasePort"/>
         <documentation>
            Get the Application Firewall internal decider communication base port. The Application Firewall requires ports for internal communication, these ports are bound to localhost (127.0.0.1) only.  This sets the base for these communication ports, when the Application Firewall is started it will start at this port and work its way up taking available ports until it has enough ports.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getNumberOfDeciders">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/getNumberOfDeciders"/>
         <documentation>
            Get the number of Application Firewall decider processes to run.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getUpdateExternControlCenterPort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/getUpdateExternControlCenterPort"/>
         <documentation>
            Get the Application Firewall Updater External Control Center port, this port is used on all IP addresses.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getUpdateGUIBackendPort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/getUpdateGUIBackendPort"/>
         <documentation>
            Get the Application Firewall Updater GUI Backend port, this port is used on all IP addresses.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getUpdateGUIServerPort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/getUpdateGUIServerPort"/>
         <documentation>
            Get the Application Firewall Updater GUI Server port, this port is used on all IP addresses.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getUpdaterPort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/getUpdaterPort"/>
         <documentation>
            Get the Application Firewall Updater Slave port, this port is used on all IP addresses.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getVersion">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/getVersion"/>
         <documentation>
            Get the version of the Stingray Application Firewall installed on the traffic manager.  Returns an empty string if Stingray Application Firewall is not installed.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
      </operation>
      
      <operation name="setAdminInternalRESTPort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/setAdminInternalRESTPort"/>
         <documentation>
            Set the Application Firewall Internal REST API port, this port should not be accessed directly.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setAdminMasterPort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/setAdminMasterPort"/>
         <documentation>
            Set the Application Firewall XML Master port, this port is used on all IP addresses.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setAdminServerPort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/setAdminServerPort"/>
         <documentation>
            Set the Application Firewall Administration server port, this port is only open on localhost.  For a change to this setting to take effect the Stingray administration server must be restarted on all cluster members.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setAdminSlavePort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/setAdminSlavePort"/>
         <documentation>
            Set the Application Firewall XML Slave port, this port is used on all IP addresses.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setDeciderBasePort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/setDeciderBasePort"/>
         <documentation>
            Set the Application Firewall base decider port.  This port, plus one port per decider process above this port, will be used for the Application Firewall deciders. For example, if set to 8100 then ports 8100, 8101, and 8102 will be used.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setInternalDeciderBasePort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/setInternalDeciderBasePort"/>
         <documentation>
            Set the Application Firewall internal decider communication base port. The Application Firewall requires ports for internal communication, these ports are bound to localhost (127.0.0.1) only.  This sets the base for these communication ports, when the Application Firewall is started it will start at this port and work its way up taking available ports until it has enough ports.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setNumberOfDeciders">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/setNumberOfDeciders"/>
         <documentation>
            Set the number of Application Firewall decider processes to run.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setUpdateExternControlCenterPort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/setUpdateExternControlCenterPort"/>
         <documentation>
            Set the Application Firewall Updater External Control Center port, this port is used on all IP addresses.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setUpdateGUIBackendPort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/setUpdateGUIBackendPort"/>
         <documentation>
            Set the Application Firewall Updater GUI Backend port, this port is used on all IP addresses.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setUpdateGUIServerPort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/setUpdateGUIServerPort"/>
         <documentation>
            Set the Application Firewall Updater GUI Server port, this port is used on all IP addresses.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setUpdaterPort">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/setUpdaterPort"/>
         <documentation>
            Set the Application Firewall Updater Slave port, this port is used on all IP addresses.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="uninstall">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/AFM/uninstall"/>
         <documentation>
            Uninstalls the Stingray Application Firewall on the traffic manager.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/AFM/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
   </binding>
   
   <service name="AFM">
      <documentation>
         The AFM interface allows management of the Stingray Application Firewall.
      </documentation>
      
      <port name="AFMPort" binding="zeusns:AFMBinding">
         <soap:address location="https://admin_server:9090/soap"/>
      </port>
   </service>
   
</definitions>
