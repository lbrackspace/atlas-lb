<?xml version="1.0" ?>

<!--
    Copyright (c) 2005-2015 Zeus Technology. All rights reserved.

-->

<definitions name="System.Log"
 targetNamespace="http://soap.zeus.com/zxtm/1.0/"
 xmlns:zeusns="http://soap.zeus.com/zxtm/1.0/"
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
 xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
 xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
 xmlns="http://schemas.xmlsoap.org/wsdl/">
   
   <types>
      <xsd:schema targetNamespace='http://soap.zeus.com/zxtm/1.0/'
       xmlns='http://www.w3.org/2001/XMLSchema'
       xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/'
       xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/'>
         
         <xsd:complexType name="StringArray">
           <xsd:complexContent>
             <xsd:restriction base='SOAP-ENC:Array'>
              <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:string[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="StringArrayArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType="zeusns:StringArray[]"/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.AccessDenied">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'accessdenied' operations (host denied by access restrictions). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="host" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A host value.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.AddAuthenticator">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'addauth' operations (authenticator added). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="modauth" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>An authenticator being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="authtype" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>Type of an authenticator being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.AddFile">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'addfile' operations (file added). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="file" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A file on the filesystem being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.AddGroup">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'addgroup' operations (group added). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="modgroup" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A group being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.AddUser">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'adduser' operations (user added). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="moduser" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A user being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="modgroup" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A group being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.Adhoc">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'adhoc' operations (a custom event). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="text" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>Arbitrary text.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="obj" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>An arbitrary object.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.AuditItem">
           <xsd:annotation>
            <xsd:documentation>This structure contains the information about an event in the Audit Log file. It is used when getting Audit Log information.</xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="date" type="xsd:dateTime">
               <xsd:annotation>
                 <xsd:documentation>The date and time at which the event occurred.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="user" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>The name of the user who caused the event.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="group" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>The group of the user who caused the event.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="auth" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>The authenticator that authorised the user who caused the event.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="ip" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>The IP address of the user.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="op_type" type="zeusns:System.Log.OperationType">
               <xsd:annotation>
                 <xsd:documentation>The type of operation that occurred.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="op_params" type="zeusns:System.Log.OpParam" minOccurs="0" maxOccurs="1">
               <xsd:annotation>
                 <xsd:documentation>The list of parameters used in the operation. This list is required for all operations with the exception of operations for which there are no additional parameters.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.AuditItemArray">
           <xsd:complexContent>
             <xsd:restriction base='SOAP-ENC:Array'>
               <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='zeusns:System.Log.AuditItem[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.CopyAuthenticator">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'copyauth' operations (authenticator copied). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="modauth" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>An authenticator being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="oldauth" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>An authenticator that was copied.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="authtype" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>Type of an authenticator being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.CopyFile">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'copyfile' operations (file copied). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="oldfile" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A file that was copied or renamed.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="file" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A file on the filesystem being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.CopyGroup">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'copygroup' operations (group copied). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="modgroup" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A group being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="oldgroup" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A group that was copied.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.DeleteAuthenticator">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'delauth' operations (authenticator deleted). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="modauth" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>An authenticator being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="authtype" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>Type of an authenticator being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.DeleteFile">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'delfile' operations (file deleted). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="file" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A file on the filesystem being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.DeleteGroup">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'delgroup' operations (group deleted). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="modgroup" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A group being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.DeleteUser">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'deluser' operations (user deleted). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="moduser" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A user being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="file" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A file on the filesystem being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.Login">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'login' operations (logged in). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="logintype" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A login type, i.e. UI, basicauth, or SSH.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="timeout" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A login timeout value.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.LoginFail">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'loginfail' operations (failed login attempt). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="logintype" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A login type, i.e. UI, basicauth, or SSH.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="resource" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>Resource being accessed.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.LoginLimitHit">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'loginlockout' operations (user account disabled). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="text" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>Arbitrary text.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.LoginSuspended">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'loginsusp' operations (suspended user login attempt). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="logintype" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A login type, i.e. UI, basicauth, or SSH.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.MaintenanceCLICmd">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'maintclicmd' operations (maintenance CLI command). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="cmd" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>The command being run.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="args" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>The arguments for the command being run.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.ModifyFile">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'filemod' operations (file modified). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="file" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A file on the filesystem being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.ModifyKey">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'keymod' operations (config modified). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="key" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A configuration key.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="value" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A configuration value.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="oldval" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A value that was changed.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="file" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A file on the filesystem being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.ModifyRule">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'rulemod' operations (modified rule). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="file" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A file on the filesystem being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.ModifyUser">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'usermod' operations (user modified). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="moduser" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A user being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.NoAccessPermission">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'noperm' operations (user was refused permission whilst accessing section/item). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="sec" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A section.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.NoChangePermission">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'nopostperm' operations (user was refused permission to update data in section). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="sec" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A section.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.OpParam" abstract="true">
           <xsd:annotation>
             <xsd:documentation>This is the base type structure for operation parameters. It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
         </xsd:complexType>
         
         <xsd:simpleType name="System.Log.OperationType">
            <xsd:annotation>
               <xsd:documentation>This enumeration defines the possible types of operations that may exist in the audit log.</xsd:documentation>
            </xsd:annotation>
            <xsd:restriction base="xsd:string">
               <xsd:enumeration value="AccessDenied">
                  <xsd:annotation>
                     <xsd:documentation>An AccessDenied operation occurs when a user is denied access to the Admin Server due to access restrictions which are in place. It appears as an 'accessdenied' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="TrafficManagerActivated">
                  <xsd:annotation>
                     <xsd:documentation>A TrafficManagerActivated operation occurs when a traffic manager is restored from a pending state after a failure has occured. This results in the traffic manager's Traffic IPs being restored to it. It appears as an 'activated' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="AddAuthenticator">
                  <xsd:annotation>
                     <xsd:documentation>An AddAuthenticator operation type occurs when a new authenticator is created. It appears as a 'addauth' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="AddFile">
                  <xsd:annotation>
                     <xsd:documentation>An AddFile operation occurs when a file is added. This operation is caused by a user creating a new object such as a Virtual Server, Pool, etc. It appears as an 'addfile' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="AddGroup">
                  <xsd:annotation>
                     <xsd:documentation>An AddGroup operation occurs when a new group of users is created. It appears as an 'addgroup' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="AddUser">
                  <xsd:annotation>
                     <xsd:documentation>An AddUser operation occurs when a new user is added. It appears as an 'adduser' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="Adhoc">
                  <xsd:annotation>
                     <xsd:documentation>An Adhoc operation represents a custom event which does not fit any of the other Operation Types. For example, it occurs when a user is adding or deleting a License Key or modifying the Security settings. It appears as an 'adhoc' operation the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="AdminPasswordReset">
                  <xsd:annotation>
                     <xsd:documentation>The admin user's password has been reset from the system console.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="CopyAuthenticator">
                  <xsd:annotation>
                     <xsd:documentation>A CopyAuthenticator operation type occurs when a new authenticator is created by saving an existing authenticator to a new name.  It appears as a 'copyauth' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="CopyFile">
                  <xsd:annotation>
                     <xsd:documentation>A CopyFile operation occurs when a file is copied. This operation is caused by the user saving an object as a new name, for example a Rule or an SSL Certificate. It appears as a 'copyfile' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="CopyGroup">
                  <xsd:annotation>
                     <xsd:documentation>A CopyGroup operation occurs when a user group is saved with a new group name. It appears as an 'copygroup' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="DeleteAuthenticator">
                  <xsd:annotation>
                     <xsd:documentation>A DeleteAuthenticator operation type occurs when an existing authenticator is deleted.  It appears as a 'delauth' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="DeleteFile">
                  <xsd:annotation>
                     <xsd:documentation>A DeleteFile operation occurs when a file is deleted. This operation is caused by a user deleting an existing object such as a Virtual Server, Pool, etc. It appears as a 'delfile' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="DeleteGroup">
                  <xsd:annotation>
                     <xsd:documentation>A DeleteGroup operation occurs when a group of users is deleted. It appears as an 'delgroup' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="DeleteUser">
                  <xsd:annotation>
                     <xsd:documentation>A DeleteUser operation occurs when an existing user is deleted. It appears as an 'deluser' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="ModifyFile">
                  <xsd:annotation>
                     <xsd:documentation>A ModifyFile operation occurs when the contents of a non-config file are modified. This differs from a ModifyKey operation in that ModifyFile operations are caused by the modification of non-config files which are not managed by the traffic manager, for example changing the settings of an SSL Certificate. It appears as a 'filemod' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="ModifyKey">
                  <xsd:annotation>
                     <xsd:documentation>A ModifyKey operation occurs when the value of a config file is modified. This operation is caused by a user changing the settings for an existing object such as a Virtual Server, Pool, etc. It appears as a 'keymod' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="Login">
                  <xsd:annotation>
                     <xsd:documentation>A Login operation occurs when a user successfully logs on to the admin server. It appears as a 'login' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="LoginFail">
                  <xsd:annotation>
                     <xsd:documentation>A LoginFail operation occurs when a user tries and fails to log on to the admin server. This type of operation does not have any additional parameters to log therefore the 'op_params' field does not exist. It appears as a 'loginfail' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="LoginLimitHit">
                  <xsd:annotation>
                     <xsd:documentation>A LoginLimitHit operation occurs when the limit on login attempts is hit for a particular user . It appears as an 'loginlockout' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="LoginSuspended">
                  <xsd:annotation>
                     <xsd:documentation>A LoginSuspended operation occurs when suspended user attempts to login. It appears as an 'loginsusp' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="Logout">
                  <xsd:annotation>
                     <xsd:documentation>A Logout operation occurs when a user successfully logs out of the admin server. This type of operation does not have any additional parameters to log therefore the 'op_params' field does not exist. It appears as a 'logout' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="MaintenanceCLICmd">
                  <xsd:annotation>
                     <xsd:documentation>A MaintenanceCLICmd operation occurs when a command is run in the appliance maintenance CLI. It appears as an 'maintclicmd' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="NoAccessPermission">
                  <xsd:annotation>
                     <xsd:documentation>A NoAccessPermission operation occurs when a user is refused permission whist accessing a section of the Admin Server. It appears as a 'noperm' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="NoChangePermission">
                  <xsd:annotation>
                     <xsd:documentation>A NoChangePermission operation occurs when a user is refused permission to update data in a section of the Admin Server. It appears as a 'nopostperm' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="PasswordExpired">
                  <xsd:annotation>
                     <xsd:documentation>A PasswordExpired operation occurs when a user's password is too old and expires. It appears as an 'passwordexpired' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="SystemSettingsReapplied">
                  <xsd:annotation>
                     <xsd:documentation>A SystemSettingsReapplied operation occurs when operating system configuration is reapplied on an appliance. It appears as an 'reapplynetwork' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="RemoveKey">
                  <xsd:annotation>
                     <xsd:documentation>A RemoveKey operation type occurs when a key is removed from a config file, usually because a key is being made location specific. It appears as a 'removekey' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="RenameFile">
                  <xsd:annotation>
                     <xsd:documentation>A RenameFile operation occurs when a file is renamed. This operation is caused by a user renaming an existing object such as a Virtual Server, Pool, etc. It appears as a 'renfile' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="RestSessionEnd">
                  <xsd:annotation>
                     <xsd:documentation>No recent activity has been seen for this user on the REST API.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="RestSessionStart">
                  <xsd:annotation>
                     <xsd:documentation>An authenticated user has accessed the REST API</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="ConfigRefreshed">
                  <xsd:annotation>
                     <xsd:documentation>A ConfigRefreshed operation occurs when the configuration is forcably reloaded. It appears as an 'revalidate' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="ModifyRule">
                  <xsd:annotation>
                     <xsd:documentation>A ModifyRule operation occurs when the contents of a rule are modified. This operation is caused by a user editing an existing rule. It appears as a 'rulemod' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="StartVS">
                  <xsd:annotation>
                     <xsd:documentation>A StartVS operation type occurs when a user starts an existing virtual server. It appears as a 'startvs' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="StopVS">
                  <xsd:annotation>
                     <xsd:documentation>A StopVS operation type occurs when a user stops an existing virtual server. It appears as a 'stopvs' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="SuspensionExpired">
                  <xsd:annotation>
                     <xsd:documentation>A SuspensionExpired operation occurs when a users suspension expires, restoring them to active status. This usually occurs when after too many attempts have been made to login to an account. It appears as an 'suspensionexpired' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="Synchronise">
                  <xsd:annotation>
                     <xsd:documentation>A Synchronise operation type occurs when configuration is replicated from one machine across the cluster, for example in order to resolve a conflict arising from one machine being unavailable at the time when a configuration change was made. It appears as a 'synchronise' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="SessionTerminated">
                  <xsd:annotation>
                     <xsd:documentation>A SessionTerminated operation occurs when a users session is terminated externally. It appears as an 'terminated' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="Timeout">
                  <xsd:annotation>
                     <xsd:documentation>A Timeout operation occurs when a user session times out. This type of operation does not have any additional parameters to log therefore the 'op_params' field does not exist. It appears as a 'timeout' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
               <xsd:enumeration value="ModifyUser">
                  <xsd:annotation>
                     <xsd:documentation>A ModifyUser operation occurs when an existing user is modified. It appears as an 'usermod' operation in the Audit Log.</xsd:documentation>
                  </xsd:annotation>
               </xsd:enumeration>
         
            </xsd:restriction>
         </xsd:simpleType>
         
         <xsd:complexType name="System.Log.PasswordExpired">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'passwordexpired' operations (user's password has expired.). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="logintype" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A login type, i.e. UI, basicauth, or SSH.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="resource" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>Resource being accessed.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.RemoveKey">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'removekey' operations (removed config key). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="key" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A configuration key.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="oldval" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A value that was changed.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="file" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A file on the filesystem being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.RenameFile">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'renfile' operations (file renamed). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="oldfile" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A file that was copied or renamed.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="file" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A file on the filesystem being modified.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.SessionTerminated">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'terminated' operations (user session terminated). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="text" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>Arbitrary text.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.StartVS">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'startvs' operations (virtual server started). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="vs" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A virtual server.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.StopVS">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'stopvs' operations (virtual server stopped). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="vs" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A virtual server.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="System.Log.TrafficManagerActivated">
           <xsd:annotation>
             <xsd:documentation>This is the operation parameters structure for 'activated' operations (traffic manager activated). It is used when getting Audit Log data.</xsd:documentation>
           </xsd:annotation>
           <xsd:complexContent>
             <xsd:extension base="zeusns:System.Log.OpParam">
              <xsd:all>
             <xsd:element name="host" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>A host value.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
         
              </xsd:all>
             </xsd:extension>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="booleanArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:boolean[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="booleanArrayArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType="zeusns:booleanArray[]"/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         
         <xsd:complexType name="doubleArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:double[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="intArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:int[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="longArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:long[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="unsignedIntArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:unsignedInt[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="unsignedLongArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:unsignedLong[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
      </xsd:schema>
   </types>
   
   <message name="clearErrorLogRequest"></message>
   
   <message name="clearErrorLogResponse"></message>
   
   <message name="getAuditLogRequest"></message>
   
   <message name="getAuditLogResponse">
      <part name="audit_log" type="zeusns:System.Log.AuditItemArray" />
   </message>
   
   <message name="getAuditLogLinesRequest">
      <part name="max_lines" type="xsd:int" />
   </message>
   
   <message name="getAuditLogLinesResponse">
      <part name="audit_log" type="zeusns:System.Log.AuditItemArray" />
   </message>
   
   <message name="getErrorLogLinesRequest">
      <part name="max_lines" type="xsd:int" />
   </message>
   
   <message name="getErrorLogLinesResponse">
      <part name="error_log_lines" type="xsd:string" />
   </message>
   
   <message name="getErrorLogStringRequest"></message>
   
   <message name="getErrorLogStringResponse">
      <part name="error_log_string" type="xsd:string" />
   </message>
   
   <portType name="System.LogPort">
      <operation name="clearErrorLog">
         <documentation>
            Clear the error log for this machine.
         </documentation>
         
         <input message="zeusns:clearErrorLogRequest"/>
         <output message="zeusns:clearErrorLogResponse"/>
      </operation>
      
      <operation name="getAuditLog">
         <documentation>
            Get a list of the most recent elements of the audit log for this machine.
         </documentation>
         
         <input message="zeusns:getAuditLogRequest"/>
         <output message="zeusns:getAuditLogResponse"/>
      </operation>
      
      <operation name="getAuditLogLines">
         <documentation>
            Get a maximum of max_lines lines of the audit log for this machine.
         </documentation>
         
         <input message="zeusns:getAuditLogLinesRequest"/>
         <output message="zeusns:getAuditLogLinesResponse"/>
      </operation>
      
      <operation name="getErrorLogLines">
         <documentation>
            Get a maximum of max_lines lines of the error log for this machine as a string, if max_lines is 0 then 1024 lines are returned.
         </documentation>
         
         <input message="zeusns:getErrorLogLinesRequest"/>
         <output message="zeusns:getErrorLogLinesResponse"/>
      </operation>
      
      <operation name="getErrorLogString">
         <documentation>
            Get the error log for this machine as a string.
         </documentation>
         
         <input message="zeusns:getErrorLogStringRequest"/>
         <output message="zeusns:getErrorLogStringResponse"/>
      </operation>
   </portType>
   
   <binding name="System.LogBinding" type="zeusns:System.LogPort">
      <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
      <operation name="clearErrorLog">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/Log/clearErrorLog"/>
         <documentation>
            Clear the error log for this machine.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/Log/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/Log/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
      </operation>
      
      <operation name="getAuditLog">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/Log/getAuditLog"/>
         <documentation>
            Get a list of the most recent elements of the audit log for this machine.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/Log/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/Log/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
      </operation>
      
      <operation name="getAuditLogLines">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/Log/getAuditLogLines"/>
         <documentation>
            Get a maximum of max_lines lines of the audit log for this machine.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/Log/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/Log/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
      </operation>
      
      <operation name="getErrorLogLines">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/Log/getErrorLogLines"/>
         <documentation>
            Get a maximum of max_lines lines of the error log for this machine as a string, if max_lines is 0 then 1024 lines are returned.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/Log/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/Log/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
      </operation>
      
      <operation name="getErrorLogString">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/System/Log/getErrorLogString"/>
         <documentation>
            Get the error log for this machine as a string.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/Log/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/System/Log/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
      </operation>
   </binding>
   
   <service name="System.Log">
      <documentation>
         The System.Log interface provides audit log and error log information for this machine. Using this
            interface, you can retrieve the error log as a string, get a list of individual entries in the audit
            log and clear the error log.
      </documentation>
      
      <port name="System.LogPort" binding="zeusns:System.LogBinding">
         <soap:address location="https://admin_server:9090/soap"/>
      </port>
   </service>
   
</definitions>
