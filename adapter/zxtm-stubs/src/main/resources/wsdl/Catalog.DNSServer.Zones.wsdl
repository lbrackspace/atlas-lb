<?xml version="1.0" ?>

<!--
    Copyright (c) 2005-2015 Zeus Technology. All rights reserved.

-->

<definitions name="Catalog.DNSServer.Zones"
 targetNamespace="http://soap.zeus.com/zxtm/1.0/"
 xmlns:zeusns="http://soap.zeus.com/zxtm/1.0/"
 xmlns:xsd="http://www.w3.org/2001/XMLSchema"
 xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
 xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
 xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
 xmlns="http://schemas.xmlsoap.org/wsdl/">
   
   <types>
      <xsd:schema targetNamespace='http://soap.zeus.com/zxtm/1.0/'
       xmlns='http://www.w3.org/2001/XMLSchema'
       xmlns:SOAP-ENC='http://schemas.xmlsoap.org/soap/encoding/'
       xmlns:wsdl='http://schemas.xmlsoap.org/wsdl/'>
         
         <xsd:complexType name="Catalog.DNSServer.Zones.DNSZoneParameter">
           <xsd:annotation>
             <xsd:documentation>This structure contains the required configuration values for a DNS zone.</xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="origin" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>The zone origin.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
             <xsd:element name="zonefile" type="xsd:string">
               <xsd:annotation>
                 <xsd:documentation>The name of the DNS zone file catalog item.</xsd:documentation>
               </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="Catalog.DNSServer.Zones.DNSZoneParameterArray">
           <xsd:complexContent>
             <xsd:restriction base='SOAP-ENC:Array'>
              <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='zeusns:Catalog.DNSServer.Zones.DNSZoneParameter[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="StringArray">
           <xsd:complexContent>
             <xsd:restriction base='SOAP-ENC:Array'>
              <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:string[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="StringArrayArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType="zeusns:StringArray[]"/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="booleanArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:boolean[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="booleanArrayArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType="zeusns:booleanArray[]"/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         
         <xsd:complexType name="doubleArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:double[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="intArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:int[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="longArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:long[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="unsignedIntArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:unsignedInt[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="unsignedLongArray">
           <xsd:complexContent>
            <xsd:restriction base='SOAP-ENC:Array'>
             <xsd:attribute ref='SOAP-ENC:arrayType' wsdl:arrayType='xsd:unsignedLong[]'/>
            </xsd:restriction>
           </xsd:complexContent>
         </xsd:complexType>
         
         <xsd:complexType name="DeploymentError">
           <xsd:annotation>
            <xsd:documentation>
              The DeploymentError fault is raised when a configuration
              change causes errors when attempting to apply the configuration
              to a running traffic manager.
         
              It would be raised in cases such as failing to bind to
              a port when enabling a Virtual Server.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="key" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The configuration key that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="value" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The value that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="InvalidInput">
           <xsd:annotation>
            <xsd:documentation>
              The InvalidInput fault is raised when the input to a function is
              invalid, for example a number was out of range. This fault is also
              raised in cases such as VirtualServer.setPool() where the Pool
              doesn't exist
         
              The details in the fault contain the object, key and value
              that caused the fault. These might be blank if they are not relevant
              to the fault.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="key" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The configuration key that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="value" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The value that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="InvalidObjectName">
           <xsd:annotation>
            <xsd:documentation>
              The InvalidObjectName fault is raised when attempting to create
              a new object (e.g. via an add, rename or copy) and the name is
              invalid (e.g. it contains a '/').
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="InvalidOperation">
           <xsd:annotation>
            <xsd:documentation>
              The InvalidOperation fault is emitted when attempting an operation
              that doesn't make sense or is prohibited, for example deleting
              a built-in monitor, or attempting to rename an object twice in
              the same call. 
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="key" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The configuration key that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="value" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The value that caused the fault (if appropriate)
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="ObjectAlreadyExists">
           <xsd:annotation>
            <xsd:documentation>
             The ObjectAlreadyExists fault is raised when attempting to create an
             object (such as a Virtual Server) that already exists. It will also
             be raised in cases such as renaming and copying objects.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="ObjectDoesNotExist">
           <xsd:annotation>
            <xsd:documentation>
             The ObjectDoesNotExist fault is raised when attempting to perform an
             operation on an object (such as Virtual Server) that doesn't exist.
         
             This fault will only be raised if the primary object in the call doesn't
             exist. For example if calling VirtualServer.setPool(), then
             this fault will be raised if the Virtual Server doesn't exist, but if
             the Pool doesn't exist then the "InvalidInput" fault will be raised.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault
                </xsd:documentation>
               </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
         
         <xsd:complexType name="ObjectInUse">
           <xsd:annotation>
            <xsd:documentation>
             The ObjectInUse fault is raised when attempting to delete an object
             that is referenced by another object, for example deleting a Pool
             that is in use by a Virtual Server.
            </xsd:documentation>
           </xsd:annotation>
           <xsd:all>
             <xsd:element name="errmsg" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  A human readable string describing the error
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
             <xsd:element name="object" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>
                  The name of the object that caused the fault
                </xsd:documentation>
              </xsd:annotation>
             </xsd:element>
           </xsd:all>
         </xsd:complexType>
      </xsd:schema>
   </types>
   
   <message name="addZoneRequest">
      <part name="zone_names" type="zeusns:StringArray" />
      <part name="zone_parameters" type="zeusns:Catalog.DNSServer.Zones.DNSZoneParameterArray" />
   </message>
   
   <message name="addZoneResponse"></message>
   
   <message name="copyZoneRequest">
      <part name="zone_names" type="zeusns:StringArray" />
      <part name="new_names" type="zeusns:StringArray" />
   </message>
   
   <message name="copyZoneResponse"></message>
   
   <message name="deleteZoneRequest">
      <part name="zone_names" type="zeusns:StringArray" />
   </message>
   
   <message name="deleteZoneResponse"></message>
   
   <message name="getOriginRequest">
      <part name="zone_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getOriginResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="getZoneNamesRequest"></message>
   
   <message name="getZoneNamesResponse">
      <part name="zone_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getZonefileRequest">
      <part name="zone_names" type="zeusns:StringArray" />
   </message>
   
   <message name="getZonefileResponse">
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="renameZoneRequest">
      <part name="zone_names" type="zeusns:StringArray" />
      <part name="new_names" type="zeusns:StringArray" />
   </message>
   
   <message name="renameZoneResponse"></message>
   
   <message name="setOriginRequest">
      <part name="zone_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setOriginResponse"></message>
   
   <message name="setZonefileRequest">
      <part name="zone_names" type="zeusns:StringArray" />
      <part name="values" type="zeusns:StringArray" />
   </message>
   
   <message name="setZonefileResponse"></message>
   
   <message name="DeploymentError">
      <part name="parameters" type="zeusns:DeploymentError" />
   </message>
   
   <message name="InvalidInput">
      <part name="parameters" type="zeusns:InvalidInput" />
   </message>
   
   <message name="InvalidObjectName">
      <part name="parameters" type="zeusns:InvalidObjectName" />
   </message>
   
   <message name="InvalidOperation">
      <part name="parameters" type="zeusns:InvalidOperation" />
   </message>
   
   <message name="ObjectAlreadyExists">
      <part name="parameters" type="zeusns:ObjectAlreadyExists" />
   </message>
   
   <message name="ObjectDoesNotExist">
      <part name="parameters" type="zeusns:ObjectDoesNotExist" />
   </message>
   
   <message name="ObjectInUse">
      <part name="parameters" type="zeusns:ObjectInUse" />
   </message>
   
   <portType name="Catalog.DNSServer.ZonesPort">
      <operation name="addZone">
         <documentation>
            Add new DNS zone.
         </documentation>
         
         <input message="zeusns:addZoneRequest"/>
         <output message="zeusns:addZoneResponse"/>
         <fault name="InvalidObjectName" message="zeusns:InvalidObjectName"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="ObjectAlreadyExists" message="zeusns:ObjectAlreadyExists"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="copyZone">
         <documentation>
            Copy the named DNS zones.
         </documentation>
         
         <input message="zeusns:copyZoneRequest"/>
         <output message="zeusns:copyZoneResponse"/>
         <fault name="ObjectAlreadyExists" message="zeusns:ObjectAlreadyExists"/>
         <fault name="InvalidObjectName" message="zeusns:InvalidObjectName"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="deleteZone">
         <documentation>
            Delete the named DNS zone.
         </documentation>
         
         <input message="zeusns:deleteZoneRequest"/>
         <output message="zeusns:deleteZoneResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="ObjectInUse" message="zeusns:ObjectInUse"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="getOrigin">
         <documentation>
            Get Zone origin
         </documentation>
         
         <input message="zeusns:getOriginRequest"/>
         <output message="zeusns:getOriginResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="getZoneNames">
         <documentation>
            Get the names of all the configured DNS zones
         </documentation>
         
         <input message="zeusns:getZoneNamesRequest"/>
         <output message="zeusns:getZoneNamesResponse"/>
      </operation>
      
      <operation name="getZonefile">
         <documentation>
            Get Zone file
         </documentation>
         
         <input message="zeusns:getZonefileRequest"/>
         <output message="zeusns:getZonefileResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
      </operation>
      
      <operation name="renameZone">
         <documentation>
            Rename the named DNS zones.
         </documentation>
         
         <input message="zeusns:renameZoneRequest"/>
         <output message="zeusns:renameZoneResponse"/>
         <fault name="ObjectAlreadyExists" message="zeusns:ObjectAlreadyExists"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidObjectName" message="zeusns:InvalidObjectName"/>
         <fault name="InvalidOperation" message="zeusns:InvalidOperation"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setOrigin">
         <documentation>
            Set Zone origin
         </documentation>
         
         <input message="zeusns:setOriginRequest"/>
         <output message="zeusns:setOriginResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
      
      <operation name="setZonefile">
         <documentation>
            Set Zone file
         </documentation>
         
         <input message="zeusns:setZonefileRequest"/>
         <output message="zeusns:setZonefileResponse"/>
         <fault name="ObjectDoesNotExist" message="zeusns:ObjectDoesNotExist"/>
         <fault name="InvalidInput" message="zeusns:InvalidInput"/>
         <fault name="DeploymentError" message="zeusns:DeploymentError"/>
      </operation>
   </portType>
   
   <binding name="Catalog.DNSServer.ZonesBinding" type="zeusns:Catalog.DNSServer.ZonesPort">
      <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
      <operation name="addZone">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/addZone"/>
         <documentation>
            Add new DNS zone.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="InvalidObjectName">
            <soap:fault use="encoded" name="InvalidObjectName" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectAlreadyExists">
            <soap:fault use="encoded" name="ObjectAlreadyExists" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="copyZone">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/copyZone"/>
         <documentation>
            Copy the named DNS zones.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectAlreadyExists">
            <soap:fault use="encoded" name="ObjectAlreadyExists" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidObjectName">
            <soap:fault use="encoded" name="InvalidObjectName" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="deleteZone">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/deleteZone"/>
         <documentation>
            Delete the named DNS zone.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectInUse">
            <soap:fault use="encoded" name="ObjectInUse" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getOrigin">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/getOrigin"/>
         <documentation>
            Get Zone origin
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="getZoneNames">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/getZoneNames"/>
         <documentation>
            Get the names of all the configured DNS zones
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
      </operation>
      
      <operation name="getZonefile">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/getZonefile"/>
         <documentation>
            Get Zone file
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="renameZone">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/renameZone"/>
         <documentation>
            Rename the named DNS zones.
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectAlreadyExists">
            <soap:fault use="encoded" name="ObjectAlreadyExists" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidObjectName">
            <soap:fault use="encoded" name="InvalidObjectName" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidOperation">
            <soap:fault use="encoded" name="InvalidOperation" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setOrigin">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/setOrigin"/>
         <documentation>
            Set Zone origin
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
      
      <operation name="setZonefile">
         <soap:operation soapAction="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/setZonefile"/>
         <documentation>
            Set Zone file
         </documentation>
         
         <input>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </input>
         <output>
            <soap:body use="encoded" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </output>
         <fault name="ObjectDoesNotExist">
            <soap:fault use="encoded" name="ObjectDoesNotExist" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="InvalidInput">
            <soap:fault use="encoded" name="InvalidInput" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
         <fault name="DeploymentError">
            <soap:fault use="encoded" name="DeploymentError" namespace="http://soap.zeus.com/zxtm/1.0/Catalog/DNSServer/Zones/" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
         </fault>
      </operation>
   </binding>
   
   <service name="Catalog.DNSServer.Zones">
      <documentation>
         The Catalog.DNSServer.Zones interface allows management of DNS zones. Using this interface, you can create, delete and rename DNS zones, and manage their configuration.
      </documentation>
      
      <port name="Catalog.DNSServer.ZonesPort" binding="zeusns:Catalog.DNSServer.ZonesBinding">
         <soap:address location="https://admin_server:9090/soap"/>
      </port>
   </service>
   
</definitions>
