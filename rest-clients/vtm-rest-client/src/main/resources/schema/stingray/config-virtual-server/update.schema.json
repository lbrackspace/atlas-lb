{
   "$schema":               "http://json-schema.org/draft-04/schema#",
   "id":                    "/rvbd-schema/tm/3.4/config/active/virtual_servers#update",
   "title":                 "Virtual Server",
   "description":           "The \"conf/vservers\" directory contains configuration files that define virtual servers.  The name of a file is the name of the virtual server it defines.  Virtual servers can be configured under the \"Services > Virtual Servers\" section of the Admin Server UI or by using functions under the \"VirtualServer\" section of the SOAP API and CLI.",
   "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServer",
   "type":                  "object",
   "additionalProperties":  false,
   
   "properties": {
      
      "properties": {
         "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerProperties",
         "type":                  "object",
         "additionalProperties":  false,
         
         "properties": {
            
            "basic": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerBasic",
               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "add_cluster_ip": {
                     "description":   "Whether or not the virtual server should add an \"X-Cluster-Client-Ip\" header to the request that contains the remote client's IP address.",
                     
                     "type":          "boolean"
                  },
                  
                  "add_x_forwarded_for": {
                     "description":   "Whether or not the virtual server should append the remote client's IP address to the X-Forwarded-For header. If the header does not exist, it will be added.",
                     
                     "type":          "boolean"
                  },
                  
                  "add_x_forwarded_proto": {
                     "description":   "Whether or not the virtual server should add an \"X-Forwarded-Proto\" header to the request that contains the original protocol used by the client to connect to the traffic manager.",
                     
                     "type":          "boolean"
                  },
                  
                  "bandwidth_class": {
                     "description":   "The bandwidth management class should this server should use, if any.",
                     
                     "type":          "string"
                  },
                  
                  "close_with_rst": {
                     "description":   "Whether or not connections from clients should be closed with a RST packet, rather than a FIN packet. This avoids the TIME_WAIT state, which on rare occasions allows wandering duplicate packets to be safely ignored.",
                     
                     "type":          "boolean"
                  },
                  
                  "completionrules": {
                     "description":   "Rules that are run at the end of a transaction, in order, comma separated.",
                     
                     "type":          "array",
                     "uniqueItems":   false,
                     
                     "items": {
                        "type":          "string"
                     }
                  },
                  
                  "connect_timeout": {
                     "description":   "The time, in seconds, to wait for data from a new connection.  If no data is received within this time, the connection will be closed.  A value of \"0\" (zero) will disable the timeout.",
                     
                     "type":          "integer",
                     "minimum":       0,
                     "maximum":       99999
                  },
                  
                  "enabled": {
                     "description":   "Whether the virtual server is enabled.",
                     
                     "type":          "boolean"
                  },
                  
                  "ftp_force_server_secure": {
                     "description":   "Whether or not the virtual server should require that incoming FTP data connections from the nodes originate from the same IP address as the node.",
                     
                     "type":          "boolean"
                  },
                  
                  "glb_services": {
                     "description":   "The associated GLB services for this DNS virtual server.",
                     
                     "type":          "array",
                     "uniqueItems":   true,
                     
                     "items": {
                        "type":          "string"
                     }
                  },
                  
                  "listen_on_any": {
                     "description":   "Whether to listen on all IP addresses",
                     
                     "type":          "boolean"
                  },
                  
                  "listen_on_hosts": {
                     "description":   "Hostnames and IP addresses to listen on",
                     
                     "type":          "array",
                     "uniqueItems":   true,
                     
                     "items": {
                        "type":          "string"
                     }
                  },
                  
                  "listen_on_traffic_ips": {
                     "description":   "Traffic IP Groups to listen on",
                     
                     "type":          "array",
                     "uniqueItems":   true,
                     
                     "items": {
                        "type":          "string"
                     }
                  },
                  
                  "note": {
                     "description":   "A description for the virtual server.",
                     
                     "type":          "string"
                  },
                  
                  "pool": {
                     "description":   "The default pool to use for traffic.",
                     
                     "type":          "string"
                  },
                  
                  "port": {
                     "description":   "The port on which to listen for incoming connections.",
                     
                     "type":          "integer",
                     "minimum":       1,
                     "maximum":       65535
                  },
                  
                  "protection_class": {
                     "description":   "The service protection class that should be used to protect this server, if any.",
                     
                     "type":          "string"
                  },
                  
                  "protocol": {
                     "description":   "The protocol that the virtual server is using.",
                     
                     "type":          "string",
                     "enum":          ["client_first","dns","dns_tcp","ftp","http","https","imaps","imapv2","imapv3","imapv4","ldap","ldaps","pop3","pop3s","rtsp","server_first","siptcp","sipudp","smtp","ssl","stream","telnet","udp","udpstreaming"]
                  },
                  
                  "request_rules": {
                     "description":   "Rules to be applied to incoming requests, in order, comma separated.",
                     
                     "type":          "array",
                     "uniqueItems":   false,
                     
                     "items": {
                        "type":          "string"
                     }
                  },
                  
                  "response_rules": {
                     "description":   "Rules to be applied to responses, in order, comma separated.",
                     
                     "type":          "array",
                     "uniqueItems":   false,
                     
                     "items": {
                        "type":          "string"
                     }
                  },
                  
                  "slm_class": {
                     "description":   "The service level monitoring class that this server should use, if any.",
                     
                     "type":          "string"
                  },
                  
                  "so_nagle": {
                     "description":   "Whether or not Nagle's algorithm should be used for TCP connections.",
                     
                     "type":          "boolean"
                  },
                  
                  "ssl_client_cert_headers": {
                     "description":   "What HTTP headers the virtual server should add to each request to show the data in the client certificate.",
                     
                     "type":          "string",
                     "enum":          ["all","none","simple"]
                  },
                  
                  "ssl_decrypt": {
                     "description":   "Whether or not the virtual server should decrypt incoming SSL traffic.",
                     
                     "type":          "boolean"
                  },
                  
                  "ssl_honor_fallback_scsv": {
                     "description":   "Whether or not the Fallback SCSV sent by TLS clients is honored by this virtual server. Choosing the global setting means the value of configuration key <a href=\"?fold_open=SSL%20Configuration&section=Global%20Settings#a_ssl!honor_fallback_scsv\"> \"ssl!honor_fallback_scsv\"</a> from the Global Settings section of the System tab will be enforced.",
                     
                     "type":          "string",
                     "enum":          ["disabled","enabled","use_default"]
                  }
               }
            },
            
            "aptimizer": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerAptimizer",

               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "enabled": {
                     "description":   "Whether the virtual server should aptimize web content.",
                     
                     "type":          "boolean"
                  },
                  
                  "profile": {
                     "description":   "A table of Aptimizer profiles and the application scopes that apply to them.",
                     
                     "type":          "array",
                     
                     "items": {
                        "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerProfile",

                        "type":                  "object",
                        "required":              ["name","urls"],
                        "additionalProperties":  false,
                        
                        "properties": {
                           "name": {
                              "description":   "The name of an Aptimizer acceleration profile.",
                              
                              "type":          "string"
                           },
                           "urls": {
                              "description":   "The application scopes which apply to the acceleration profile.",
                              
                              "type":          "array",
                              "uniqueItems":   true,
                              
                              "items": {
                                 "type":          "string"
                              }
                           }
                        }
                     }
                  }
               }
            },
            
            "connection": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerConnection",

               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "keepalive": {
                     "description":   "Whether or not the virtual server should use keepalive connections with the remote clients.",
                     
                     "type":          "boolean"
                  },
                  
                  "keepalive_timeout": {
                     "description":   "The length of time that the virtual server should keep an idle keepalive connection before discarding it.  A value of \"0\" (zero) will mean that the keepalives are never closed by the traffic manager.",
                     
                     "type":          "integer",
                     "minimum":       0,
                     "maximum":       99999
                  },
                  
                  "max_client_buffer": {
                     "description":   "The amount of memory, in bytes, that the virtual server should use to store data sent by the client. Larger values will use more memory, but will minimise the number of \"read()\" and \"write()\" system calls that the traffic manager must perform.",
                     
                     "type":          "integer",
                     "minimum":       1024,
                     "maximum":       16777216
                  },
                  
                  "max_server_buffer": {
                     "description":   "The amount of memory, in bytes, that the virtual server should use to store data returned by the server.  Larger values will use more memory, but will minimise the number of \"read()\" and \"write()\" system calls that the traffic manager must perform.",
                     
                     "type":          "integer",
                     "minimum":       1024,
                     "maximum":       16777216
                  },
                  
                  "max_transaction_duration": {
                     "description":   "The total amount of time a transaction can take, counted from the first byte being received until the transaction is complete.  For HTTP, this can mean all data has been written in both directions, or the connection has been closed; in most other cases it is the same as the connection being closed.<br> The default value of \"0\" means there is no maximum duration, i.e., transactions can take arbitrarily long if none of the other timeouts occur.",
                     
                     "type":          "integer",
                     "minimum":       0,
                     "maximum":       99999
                  },
                  
                  "server_first_banner": {
                     "description":   "If specified, the traffic manager will use the value as the banner to send for server-first protocols such as POP, SMTP and IMAP. This allows rules to use the first part of the client data (such as the username) to select a pool.",
                     
                     "type":          "string"
                  },
                  
                  "timeout": {
                     "description":   "A connection should be closed if no additional data has been received for this period of time.  A value of \"0\" (zero) will disable this timeout.",
                     
                     "type":          "integer",
                     "minimum":       0,
                     "maximum":       99999
                  }
               }
            },
            
            "connection_errors": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerConnectionError",

               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "error_file": {
                     "description":   "The error message to be sent to the client when the traffic manager detects an internal or backend error for the virtual server.",
                     
                     "type":          "string"
                  }
               }
            },
            
            "cookie": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerCookie",

               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "domain": {
                     "description":   "The way in which the traffic manager should rewrite the domain portion of any cookies set by a back-end web server.",
                     
                     "type":          "string",
                     "enum":          ["no_rewrite","set_to_named","set_to_request"]
                  },
                  
                  "new_domain": {
                     "description":   "The domain to use when rewriting a cookie's domain to a named value.",
                     
                     "type":          "string"
                  },
                  
                  "path_regex": {
                     "description":   "If you wish to rewrite the path portion of any cookies set by a back-end web server, provide a regular expression to match the path:",
                     
                     "type":          "string"
                  },
                  
                  "path_replace": {
                     "description":   "If cookie path regular expression matches, it will be replaced by this substitution.  Parameters $1-$9 can be used to represent bracketed parts of the regular expression.",
                     
                     "type":          "string"
                  },
                  
                  "secure": {
                     "description":   "Whether or not the traffic manager should modify the \"secure\" tag of any cookies set by a back-end web server.",
                     
                     "type":          "string",
                     "enum":          ["no_modify","set_secure","unset_secure"]
                  }
               }
            },
            
            "dns": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualSererDns",
               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "edns_udpsize": {
                     "description":   "EDNS UDP size advertised in responses.",
                     
                     "type":          "integer",
                     "minimum":       512,
                     "maximum":       4096
                  },
                  
                  "max_udpsize": {
                     "description":   "Maximum UDP answer size.",
                     
                     "type":          "integer",
                     "minimum":       512,
                     "maximum":       4096
                  },
                  
                  "rrset_order": {
                     "description":   "Response record ordering.",
                     
                     "type":          "string",
                     "enum":          ["cyclic","fixed"]
                  },
                  
                  "verbose": {
                     "description":   "Whether or not the DNS Server should emit verbose logging. This is useful for diagnosing problems.",
                     
                     "type":          "boolean"
                  },
                  
                  "zones": {
                     "description":   "The DNS zones",
                     
                     "type":          "array",
                     "uniqueItems":   true,
                     
                     "items": {
                        "type":          "string"
                     }
                  }
               }
            },
            
            "ftp": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerFtp",

               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "data_source_port": {
                     "description":   "The source port to be used for active-mode FTP data connections.  If 0, a random high port will be used, otherwise the specified port will be used. If a port below 1024 is required you must first explicitly permit use of low ports with the \"data_bind_low\" global setting.",
                     
                     "type":          "integer",
                     "minimum":       0,
                     "maximum":       65535
                  },
                  
                  "force_client_secure": {
                     "description":   "Whether or not the virtual server should require that incoming FTP data connections from the client originate from the same IP address as the corresponding client control connection.",
                     
                     "type":          "boolean"
                  },
                  
                  "port_range_high": {
                     "description":   "If non-zero, then this controls the upper bound of the port range to use for FTP data connections.",
                     
                     "type":          "integer",
                     "minimum":       0,
                     "maximum":       65535
                  },
                  
                  "port_range_low": {
                     "description":   "If non-zero, then this controls the lower bound of the port range to use for FTP data connections.",
                     
                     "type":          "integer",
                     "minimum":       0,
                     "maximum":       65535
                  },
                  
                  "ssl_data": {
                     "description":   "Use SSL on the data connection as well as the control connection (if not enabled it is left to the client and server to negotiate this).",
                     
                     "type":          "boolean"
                  }
               }
            },
            
            "gzip": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerGzip",

               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "compress_level": {
                     "description":   "Compression level (1-9, 1=low, 9=high).",
                     
                     "type":          "integer",
                     "minimum":       1,
                     "maximum":       9
                  },
                  
                  "enabled": {
                     "description":   "Compress web pages sent back by the server.",
                     
                     "type":          "boolean"
                  },
                  
                  "etag_rewrite": {
                     "description":   "How the ETag header should be manipulated when compressing content.",
                     
                     "type":          "string",
                     "enum":          ["delete","ignore","weaken","wrap"]
                  },
                  
                  "include_mime": {
                     "description":   "MIME types to compress. Complete MIME types can be used, or a type can end in a '*' to match multiple types.",
                     
                     "type":          "array",
                     "uniqueItems":   true,
                     
                     "items": {
                        "type":          "string"
                     }
                  },
                  
                  "max_size": {
                     "description":   "Maximum document size to compress (0 means unlimited).",
                     
                     "type":          "integer",
                     "minimum":       0
                  },
                  
                  "min_size": {
                     "description":   "Minimum document size to compress.",
                     
                     "type":          "integer",
                     "minimum":       0
                  },
                  
                  "no_size": {
                     "description":   "Compress documents with no given size.",
                     
                     "type":          "boolean"
                  }
               }
            },
            
            "http": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerHttp",

               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "chunk_overhead_forwarding": {
                     "description":   "Handling of HTTP chunk overhead.  When Stingray receives data from a server or client that consists purely of protocol overhead (contains no payload), forwarding of such segments is delayed until useful payload data arrives (setting \"lazy\").  Changing this key to \"eager\" will make Stingray incur the overhead of immediately passing such data on; it should only be used with HTTP peers whose chunk handling requires it.",
                     
                     "type":          "string",
                     "enum":          ["eager","lazy"]
                  },
                  
                  "location_regex": {
                     "description":   "If the 'Location' header matches this regular expression, rewrite the header using the 'location_replace' pattern.",
                     
                     "type":          "string"
                  },
                  
                  "location_replace": {
                     "description":   "If the 'Location' header matches the 'location_regex' regular expression, rewrite the header with this pattern (parameters such as $1-$9 can be used to match parts of the regular expression):",
                     
                     "type":          "string"
                  },
                  
                  "location_rewrite": {
                     "description":   "The action the virtual server should take if the \"Location\" header does not match the \"location_regex\" regular expression.",
                     
                     "type":          "string",
                     "enum":          ["always","if_host_matches","never"]
                  },
                  
                  "mime_default": {
                     "description":   "Auto-correct MIME types if the server sends the \"default\" MIME type for files.",
                     
                     "type":          "string"
                  },
                  
                  "mime_detect": {
                     "description":   "Auto-detect MIME types if the server does not provide them.",
                     
                     "type":          "boolean"
                  }
               }
            },
            
            "kerberos_protocol_transition": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerKerberosProtocolTransition",
               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "enabled": {
                     "description":   "Whether or not the virtual server should use Kerberos Protocol Transition.",
                     
                     "type":          "boolean"
                  },
                  
                  "principal": {
                     "description":   "The Kerberos principal this virtual server should use to perform Kerberos Protocol Transition.",
                     
                     "type":          "string"
                  },
                  
                  "target": {
                     "description":   "The Kerberos principal name of the service this virtual server targets.",
                     
                     "type":          "string"
                  }
               }
            },
            
            "log": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerLog",

               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "client_connection_failures": {
                     "description":   "Should the virtual server log failures occurring on connections to clients.",
                     
                     "type":          "boolean"
                  },
                  
                  "enabled": {
                     "description":   "Whether or not to log connections to the virtual server to a disk on the file system.",
                     
                     "type":          "boolean"
                  },
                  
                  "filename": {
                     "description":   "The name of the file in which to store the request logs. Appliances will ignore this. The filename can contain macros which will be expanded by the traffic manager to generate the full filename. ",
                     
                     "type":          "string"
                  },
                  
                  "format": {
                     "description":   "The log file format. This specifies the line of text that will be written to the log file when a connection to the traffic manager is completed.  Many parameters from the connection can be recorded using macros. ",
                     
                     "type":          "string"
                  },
                  
                  "save_all": {
                     "description":   "Whether to log all connections by default, or log no connections by default. Specific connections can be selected for addition to or exclusion from the log using the TrafficScript function \"requestlog.include()\".",
                     
                     "type":          "boolean"
                  },
                  
                  "server_connection_failures": {
                     "description":   "Should the virtual server log failures occurring on connections to nodes.",
                     
                     "type":          "boolean"
                  },
                  
                  "session_persistence_verbose": {
                     "description":   "Should the virtual server log session persistence events.",
                     
                     "type":          "boolean"
                  },
                  
                  "ssl_failures": {
                     "description":   "Should the virtual server log failures occurring on SSL secure negotiation.",
                     
                     "type":          "boolean"
                  }
               }
            },
            
            "recent_connections": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerRequestConnections",
               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "enabled": {
                     "description":   "Whether or not connections handled by this virtual server should be shown on the Activity > Connections page.",
                     
                     "type":          "boolean"
                  },
                  
                  "save_all": {
                     "description":   "Whether or not all connections handled by this virtual server should be shown on the Connections page. Individual connections can be selectively shown on the Connections page using the \"recentconns.include()\" TrafficScript function.",
                     
                     "type":          "boolean"
                  }
               }
            },
            
            "request_tracing": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerRequestTracing",

               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "enabled": {
                     "description":   "Record a trace of major connection processing events for each request and response.",
                     
                     "type":          "boolean"
                  },
                  
                  "trace_io": {
                     "description":   "Include details of individual I/O events in request and response traces.  Requires request tracing to be enabled.",
                     
                     "type":          "boolean"
                  }
               }
            },
            
            "rtsp": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerRtsp",

               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "streaming_port_range_high": {
                     "description":   "If non-zero this controls the upper bound of the port range to use for streaming data connections.",
                     
                     "type":          "integer",
                     "minimum":       0,
                     "maximum":       65535
                  },
                  
                  "streaming_port_range_low": {
                     "description":   "If non-zero this controls the lower bound of the port range to use for streaming data connections.",
                     
                     "type":          "integer",
                     "minimum":       0,
                     "maximum":       65535
                  },
                  
                  "streaming_timeout": {
                     "description":   "If non-zero data-streams associated with RTSP connections will timeout if no data is transmitted for this many seconds.",
                     
                     "type":          "integer",
                     "minimum":       0,
                     "maximum":       99999
                  }
               }
            },
            
            "sip": {
                "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerSip",

               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "dangerous_requests": {
                     "description":   "The action to take when a SIP request with body data arrives that should be routed to an external IP.",
                     
                     "type":          "string",
                     "enum":          ["forbid","forward","node"]
                  },
                  
                  "follow_route": {
                     "description":   "Should the virtual server follow routing information contained in SIP requests. If set to \"No\" requests will be routed to the chosen back-end node regardless of their URI or Route header.",
                     
                     "type":          "boolean"
                  },
                  
                  "max_connection_mem": {
                     "description":   "SIP clients can have several pending requests at one time. To protect the traffic manager against DoS attacks, this setting limits the amount of memory each client can use.  When the limit is reached new requests will be sent a 413 response. If the value is set to \"0\" (zero) the memory limit is disabled.",
                     
                     "type":          "integer",
                     "minimum":       0,
                     "maximum":       16777216
                  },
                  
                  "mode": {
                     "description":   "The mode that this SIP virtual server should operate in.",
                     
                     "type":          "string",
                     "enum":          ["full_gateway","route","sip_gateway"]
                  },
                  
                  "rewrite_uri": {
                     "description":   "Replace the Request-URI of SIP requests with the address of the selected back-end node.",
                     
                     "type":          "boolean"
                  },
                  
                  "streaming_port_range_high": {
                     "description":   "If non-zero this controls the upper bound of the port range to use for streaming data connections.",
                     
                     "type":          "integer",
                     "minimum":       0,
                     "maximum":       65535
                  },
                  
                  "streaming_port_range_low": {
                     "description":   "If non-zero, then this controls the lower bound of the port range to use for streaming data connections.",
                     
                     "type":          "integer",
                     "minimum":       0,
                     "maximum":       65535
                  },
                  
                  "streaming_timeout": {
                     "description":   "If non-zero a UDP stream will timeout when no data has been seen within this time.",
                     
                     "type":          "integer",
                     "minimum":       0,
                     "maximum":       99999
                  },
                  
                  "timeout_messages": {
                     "description":   "When timing out a SIP transaction, send a 'timed out' response to the client and, in the case of an INVITE transaction, a CANCEL request to the server.",
                     
                     "type":          "boolean"
                  },
                  
                  "transaction_timeout": {
                     "description":   "The virtual server should discard a SIP transaction when no further messages have been seen within this time.",
                     
                     "type":          "integer",
                     "minimum":       0,
                     "maximum":       99999
                  }
               }
            },
            
            "smtp": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerStmp",

               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "expect_starttls": {
                     "description":   "Whether or not the traffic manager should expect the connection to start off in plain text and then upgrade to SSL using STARTTLS when handling SMTP traffic.",
                     
                     "type":          "boolean"
                  }
               }
            },
            
            "ssl": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerSsl",

               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "add_http_headers": {
                     "description":   "Whether or not the virtual server should add HTTP headers to each request to show the SSL connection parameters.",
                     
                     "type":          "boolean"
                  },
                  
                  "client_cert_cas": {
                     "description":   "The certificate authorities that this virtual server should trust to validate client certificates. If no certificate authorities are selected, and client certificates are requested, then all client certificates will be accepted.",
                     
                     "type":          "array",
                     "uniqueItems":   true,
                     
                     "items": {
                        "type":          "string"
                     }
                  },
                  
                  "elliptic_curves": {
                     "description":   "The SSL elliptic curve preference list for SSL connections to this virtual server using TLS version 1.0 or higher. Leaving this empty will make the virtual server use the globally configured curve preference list. The named curves P256, P384 and P521 may be configured.",
                     
                     "type":          "array",
                     "uniqueItems":   false,
                     
                     "items": {
                        "type":          "string"
                     }
                  },
                  
                  "issued_certs_never_expire": {
                     "description":   "When the virtual server verifies certificates signed by these certificate authorities, it doesn't check the 'not after' date, i.e., they are considered valid even after their expiration date has passed (but not if they have been revoked).",
                     
                     "type":          "array",
                     "uniqueItems":   true,
                     
                     "items": {
                        "type":          "string"
                     }
                  },
                  
                  "ocsp_enable": {
                     "description":   "Whether or not the traffic manager should use OCSP to check the revocation status of client certificates.",
                     
                     "type":          "boolean"
                  },
                  
                  "ocsp_issuers": {
                     "description":   "A table of certificate issuer specific OCSP settings.",
                     
                     "type":          "array",
                     
                     "items": {
                        "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerOcspIssuer",

                        "type":                  "object",
                        "required":              ["issuer"],
                        "additionalProperties":  false,
                        
                        "properties": {
                           "issuer": {
                              "description":   "The name of an issuer (or DEFAULT for default OCSP settings).",
                              
                              "type":          "string"
                           },
                           "aia": {
                              "description":   "Whether the traffic manager should use AIA information contained in a client certificate to determine which OCSP responder to contact.",
                              
                              "type":          "boolean"
                           },
                           "nonce": {
                              "description":   "How to use the OCSP nonce extension, which protects against OCSP replay attacks. Some OCSP servers do not support nonces.",
                              
                              "type":          "string",
                              "enum":          ["off","on","strict"]
                           },
                           "required": {
                              "description":   "Whether we should do an OCSP check for this issuer, and whether it is required or optional.",
                              
                              "type":          "string",
                              "enum":          ["none","optional","strict"]
                           },
                           "responder_cert": {
                              "description":   "The expected responder certificate.",
                              
                              "type":          "string"
                           },
                           "signer": {
                              "description":   "The certificate with which to sign the request, if any.",
                              
                              "type":          "string"
                           },
                           "url": {
                              "description":   "Which OCSP responders this virtual server should use to verify client certificates.",
                              
                              "type":          "string"
                           }
                        }
                     }
                  },
                  
                  "ocsp_max_response_age": {
                     "description":   "The number of seconds for which an OCSP response is considered valid if it has not yet exceeded the time specified in the 'nextUpdate' field. If set to \"0\" (zero) then OCSP responses are considered valid until the time specified in their 'nextUpdate' field.",
                     
                     "type":          "integer",
                     "minimum":       0
                  },
                  
                  "ocsp_stapling": {
                     "description":   "If OCSP URIs are present in certificates used by this virtual server, then enabling this option will allow the traffic manager to provide OCSP responses for these certificates as part of the handshake, if the client sends a TLS status_request extension in the ClientHello.",
                     
                     "type":          "boolean"
                  },
                  
                  "ocsp_time_tolerance": {
                     "description":   "The number of seconds outside the permitted range for which the 'thisUpdate' and 'nextUpdate' fields of an OCSP response are still considered valid.",
                     
                     "type":          "integer",
                     "minimum":       0
                  },
                  
                  "ocsp_timeout": {
                     "description":   "The number of seconds after which OCSP requests will be timed out.",
                     
                     "type":          "integer",
                     "minimum":       0
                  },
                  
                  "prefer_sslv3": {
                     "description":   "Deprecated. Formerly allowed a preference for SSLv3 for performance reasons.",
                     
                     "type":          "boolean"
                  },
                  
                  "request_client_cert": {
                     "description":   "Whether or not the virtual server should request an identifying SSL certificate from each client.",
                     
                     "type":          "string",
                     "enum":          ["dont_request","request","require"]
                  },
                  
                  "send_close_alerts": {
                     "description":   "Whether or not to send an SSL/TLS \"close alert\" when the traffic manager is initiating an SSL socket disconnection.",
                     
                     "type":          "boolean"
                  },
                  
                  "server_cert_default": {
                     "description":   "The default SSL certificate to use for this virtual server.",
                     
                     "type":          "string"
                  },
                  
                  "server_cert_host_mapping": {
                     "description":   "Host specific SSL server certificate mappings.",
                     
                     "type":          "array",
                     
                     "items": {
                        "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerServerCertHostMapping",

                        "type":                  "object",
                        "required":              ["host","certificate"],
                        "additionalProperties":  false,
                        
                        "properties": {
                           "host": {
                              "description":   "Host which this entry refers to.",
                              
                              "type":          "string"
                           },
                           "certificate": {
                              "description":   "The SSL server certificate for a particular destination site IP.",
                              
                              "type":          "string"
                           }
                        }
                     }
                  },
                  
                  "signature_algorithms": {
                     "description":   "The SSL signature algorithms preference list for SSL connections to this virtual server using TLS version 1.2 or higher. Leaving this empty will make the virtual server use the globally configured preference list, \"signature_algorithms\" in the \"ssl\" section of the \"global_settings\" resource.  See there and in the online help for how to specify SSL signature algorithms.",
                     
                     "type":          "string"
                  },
                  
                  "ssl_ciphers": {
                     "description":   "The SSL/TLS ciphers to allow for connections to this virtual server.  Leaving this empty will make the virtual server use the globally configured ciphers, see configuration key <a href=\"?fold_open=SSL%20Configuration&section=Global%20Settings#a_ssl!ssl3_ciphers\"> \"ssl!ssl3_ciphers\"</a> in the Global Settings section of the System tab.  See there for how to specify SSL/TLS ciphers.",
                     
                     "type":          "string"
                  },
                  
                  "ssl_support_ssl2": {
                     "description":   "Whether or not SSLv2 is enabled for this virtual server.  Choosing the global setting means the value of configuration key <a href=\"?fold_open=SSL%20Configuration&section=Global%20Settings#a_ssl!support_ssl2\"> \"ssl!support_ssl2\"</a> from the Global Settings section of the System tab will be enforced.",
                     
                     "type":          "string",
                     "enum":          ["disabled","enabled","use_default"]
                  },
                  
                  "ssl_support_ssl3": {
                     "description":   "Whether or not SSLv3 is enabled for this virtual server.  Choosing the global setting means the value of configuration key <a href=\"?fold_open=SSL%20Configuration&section=Global%20Settings#a_ssl!support_ssl3\"> \"ssl!support_ssl3\"</a> from the Global Settings section of the System tab will be enforced.",
                     
                     "type":          "string",
                     "enum":          ["disabled","enabled","use_default"]
                  },
                  
                  "ssl_support_tls1": {
                     "description":   "Whether or not TLSv1.0 is enabled for this virtual server. Choosing the global setting means the value of configuration key <a href=\"?fold_open=SSL%20Configuration&section=Global%20Settings#a_ssl!support_tls1\"> \"ssl!support_tls1\"</a> from the Global Settings section of the System tab will be enforced.",
                     
                     "type":          "string",
                     "enum":          ["disabled","enabled","use_default"]
                  },
                  
                  "ssl_support_tls1_1": {
                     "description":   "Whether or not TLSv1.1 is enabled for this virtual server. Choosing the global setting means the value of configuration key <a href=\"?fold_open=SSL%20Configuration&section=Global%20Settings#a_ssl!support_tls1.1\"> \"ssl!support_tls1.1\"</a> from the Global Settings section of the System tab will be enforced.",
                     
                     "type":          "string",
                     "enum":          ["disabled","enabled","use_default"]
                  },
                  
                  "ssl_support_tls1_2": {
                     "description":   "Whether or not TLSv1.2 is enabled for this virtual server. Choosing the global setting means the value of configuration key <a href=\"?fold_open=SSL%20Configuration&section=Global%20Settings#a_ssl!support_tls1.2\"> \"ssl!support_tls1.2\"</a> from the Global Settings section of the System tab will be enforced.",
                     
                     "type":          "string",
                     "enum":          ["disabled","enabled","use_default"]
                  },
                  
                  "trust_magic": {
                     "description":   "If the traffic manager is receiving traffic sent from another traffic manager, then enabling this option will allow it to decode extra information on the true origin of the SSL connection. This information is supplied by the first traffic manager.",
                     
                     "type":          "boolean"
                  }
               }
            },
            
            "syslog": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerSyslog",

               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "enabled": {
                     "description":   "Whether or not to log connections to the virtual server to a remote syslog host.",
                     
                     "type":          "boolean"
                  },
                  
                  "format": {
                     "description":   "The log format for the remote syslog.  This specifies the line of text that will be sent to the remote syslog  when a connection to the traffic manager is completed. Many parameters from the connection can be recorded using macros. ",
                     
                     "type":          "string"
                  },
                  
                  "ip_end_point": {
                     "description":   "The remote host and port (default is 514) to send request log lines to.",
                     
                     "type":          "string"
                  },
                  
                  "msg_len_limit": {
                     "description":   "Maximum length in bytes of a message sent to the remote syslog. Messages longer than this will be truncated before they are sent.",
                     
                     "type":          "integer",
                     "minimum":       480,
                     "maximum":       65535
                  }
               }
            },
            
            "tcp": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerTcp",

               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "proxy_close": {
                     "description":   "If set to \"Yes\" the traffic manager will send the client FIN to the back-end server and wait for a server response instead of closing the connection immediately.  This is only necessary for protocols that require half-close support to function correctly, such as \"rsh\".  If the traffic manager is responding to the request itself, setting this key to Yes will cause the traffic manager to continue writing the response even after it has received a FIN from the client.",
                     
                     "type":          "boolean"
                  }
               }
            },
            
            "udp": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerUdp",

               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "end_point_persistence": {
                     "description":   "Whether or not UDP datagrams from the same IP and port are sent to the same node in the pool if there's an existing UDP transaction. Although it's not always guaranteed as while making a decision to reuse the same node, traffic manager can also apply other protocol specific filtering e.g CallID matching for SIP packets in addition to IP and port matching.",
                     
                     "type":          "boolean"
                  },
                  
                  "port_smp": {
                     "description":   "Whether or not UDP datagrams should be distributed across all traffic manager processes. This setting is not recommended if the traffic manager will be handling connection-based UDP protocols.",
                     
                     "type":          "boolean"
                  },
                  
                  "response_datagrams_expected": {
                     "description":   "The virtual server should discard any UDP connection and reclaim resources when the node has responded with this number of datagrams.  For simple request/response protocols this can be often set to \"1\".  If set to \"-1\", the connection will not be discarded until the \"timeout\" is reached.",
                     
                     "type":          "integer"
                  },
                  
                  "timeout": {
                     "description":   "The virtual server should discard any UDP connection and reclaim resources when no further UDP traffic has been seen within this time.",
                     
                     "type":          "integer",
                     "minimum":       1,
                     "maximum":       99999
                  }
               }
            },
            
            "web_cache": {
               "javaType" :     "org.rackspace.stingray.client.virtualserver.VirtualServerWebcache",

               "type":                  "object",
               "additionalProperties":  false,
               
               "properties": {
                  "control_out": {
                     "description":   "The \"Cache-Control\" header to add to every cached HTTP response, \"no-cache\" or \"max-age=600\" for example.",
                     
                     "type":          "string"
                  },
                  
                  "enabled": {
                     "description":   "If set to \"Yes\" the traffic manager will attempt to cache web server responses.",
                     
                     "type":          "boolean"
                  },
                  
                  "error_page_time": {
                     "description":   "Time period to cache error pages for.",
                     
                     "type":          "integer",
                     "minimum":       0,
                     "maximum":       999999
                  },
                  
                  "max_time": {
                     "description":   "Maximum time period to cache web pages for.",
                     
                     "type":          "integer",
                     "minimum":       1,
                     "maximum":       999999
                  },
                  
                  "refresh_time": {
                     "description":   "If a cached page is about to expire within this time, the traffic manager will start to forward some new requests on to the web servers. A maximum of one request per second will be forwarded; the remainder will continue to be served from the cache. This prevents \"bursts\" of traffic to your web servers when an item expires from the cache. Setting this value to \"0\" will stop the traffic manager updating the cache before it expires.",
                     
                     "type":          "integer",
                     "minimum":       0,
                     "maximum":       999999
                  }
               }
            }
         }
      }
   }
}
