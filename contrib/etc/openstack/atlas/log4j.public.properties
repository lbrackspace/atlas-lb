#log4j2 configurations
appenders = stdout, rolling

name = pubLogger
property.basePath = ${sys:com.sun.aas.instanceRoot}/logs

# Root logger option
rootLogger.level                  = ERROR
rootLogger.appenderRefs           = rolling, stdout
rootLogger.appenderRef.rolling.ref   = pubLogger
rootLogger.appenderRef.stdout.ref = STDOUT

# Direct log messages to stdout
appender.stdout.type           = Console
appender.stdout.name           = STDOUT
appender.stdout.layout.type    = PatternLayout
appender.stdout.layout.pattern = %d{yy/MM/dd HH:mm:ss} %-5p [%c.%M()] %m%n

# Direct log messages to a log file
# RollingFileAppender will print logs in file which can be rotated based on time or size
appender.rolling.type = RollingFile
appender.rolling.name = pubLogger
appender.rolling.fileName= ${basePath}/public-api.log
# File pattern determines rotation specificity. If mins are defined it'll rotate on minute intervals
appender.rolling.filePattern= ${basePath}/public-api_%d{MM-dd-yy}.log
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yy/MM/dd HH:mm:ss} %-5p [%c.%M()] %m%n
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
# Interval based on filePattern specificity, Re; If hours are last specified then interval is per hours
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true

# Rotate log file each day and keep 14 days worth
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.action.type = Delete
appender.rolling.strategy.action.basepath = ${basePath}
appender.rolling.strategy.action.maxDepth = 1
appender.rolling.strategy.action.condition.type = IfFileName
appender.rolling.strategy.action.condition.glob = public-api_*.log
appender.rolling.strategy.action.condition.ifAny.type = IfAny
appender.rolling.strategy.action.condition.ifAny.ifLastModified.type = IfLastModified
# Delete files older than 14 days
appender.rolling.strategy.action.condition.ifAny.ifLastModified.age = 14D

#Package level logging
logger.rackspace.name=com.rackspace.cloud
logger.rackspace.level = DEBUG
logger.rackspace.appenderRef.rolling.ref = pubLogger

logger.openstack.name=org.openstack.atlas
logger.openstack.level = DEBUG
logger.openstack.appenderRef.rolling.ref = pubLogger

logger.rackspacecloud.name= com.rackspacecloud
logger.rackspacecloud.level = DEBUG
logger.rackspacecloud.appenderRef.rolling.ref = pubLogger

logger.mosso.name= com.mosso
logger.mosso.level = INFO
logger.mosso.appenderRef.rolling.ref = pubLogger

logger.sun.name=com.sun
logger.sun.level = ERROR
logger.sun.appenderRef.rolling.ref = pubLogger

logger.jps.name=net.jps.validation
logger.jps.level = ERROR
logger.jps.appenderRef.rolling.ref = pubLogger

logger.codehaus.name=org.codehaus
logger.codehaus.level = ERROR
logger.codehaus.appenderRef.stdout.ref = STDOUT
logger.codehaus.appenderRef.rolling.ref = pubLogger

logger.springframework.name=org.springframework
logger.springframework.level = ERROR
logger.springframework.appenderRef.rolling.ref = pubLogger

logger.dozer.name=org.dozer
logger.dozer.level = ERROR
logger.dozer.appenderRef.rolling.ref = pubLogger

logger.apache.name=org.apache
logger.apache.level = ERROR
logger.apache.appenderRef.rolling.ref = pubLogger

logger.enterprise.name=javax.enterprise
logger.enterprise.level = ERROR
logger.enterprise.appenderRef.rolling.ref = pubLogger

#log4j2 configurations end----------------------------------------------